#include <cmath>
#include "bicycle.h"

namespace bicycle {

using ::std::sin;
using ::std::cos;
using ::std::sqrt;
using ::std::pow;

/** Computes the n-d array of shape (16)
 *
 * @param[out] a C-array of with 16 elements
 */
//  void Bicycle::gc_r_ogl(double ar[16]) const;
void Bicycle::gc_r_ogl(double ar[16]) const
{
  double * z = new double[15];

  z[0] = sin(azimuth);
  z[1] = sin(elevation);
  z[2] = sin(twist);
  z[3] = cos(azimuth);
  z[4] = cos(elevation);
  z[5] = cos(state_[1]);
  z[6] = cos(twist);
  z[7] = cam_x + cam_z;
  z[8] = z[0]*z[2] + z[1]*z[3]*z[6];
  z[9] = z[0]*z[1]*z[2] + z[3]*z[6];
  z[10] = z[0]*z[6] - z[1]*z[2]*z[3];
  z[11] = z[0]*z[1]*z[6] - z[2]*z[3];
  z[12] = -z[3];
  z[13] = z[5]/sqrt(pow(z[5], 2));
  z[14] = z[13]*z[4];

  ar[0] = z[10]*z[13];
  ar[1] = z[13]*z[8];
  ar[2] = z[12]*z[14];
  ar[3] = 0;
  ar[4] = z[13]*z[9];
  ar[5] = -z[11]*z[13];
  ar[6] = z[0]*z[14];
  ar[7] = 0;
  ar[8] = z[2]*z[4];
  ar[9] = -z[4]*z[6];
  ar[10] = -z[1];
  ar[11] = 0;
  ar[12] = -cam_y*z[9] - z[10]*z[7];
  ar[13] = cam_y*z[11] - z[7]*z[8];
  ar[14] = -z[4]*(cam_y*z[0] + z[12]*z[7]);
  ar[15] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (16)
 *
 * @param[out] a C-array of with 16 elements
 */
//  void Bicycle::wc_r_ogl(double ar[16]) const;
void Bicycle::wc_r_ogl(double ar[16]) const
{
  double * z = new double[33];

  z[0] = sin(azimuth);
  z[1] = sin(elevation);
  z[2] = sin(state_[1]);
  z[3] = sin(state_[2]);
  z[4] = sin(twist);
  z[5] = cos(azimuth);
  z[6] = cos(elevation);
  z[7] = cos(state_[1]);
  z[8] = cos(state_[2]);
  z[9] = cos(state_[4]);
  z[10] = cos(twist);
  z[11] = cam_x + cam_z;
  z[12] = sqrt(pow(z[7], 2));
  z[13] = rear_.R/z[12] + rear_.r;
  z[14] = z[0]*z[4] + z[1]*z[10]*z[5];
  z[15] = z[0]*z[1]*z[4] + z[10]*z[5];
  z[16] = z[0]*z[2]*z[6] + z[1]*z[7];
  z[17] = z[0]*z[10] - z[1]*z[4]*z[5];
  z[18] = z[0]*z[1]*z[10] - z[4]*z[5];
  z[19] = z[0]*z[6]*z[7] - z[1]*z[2];
  z[20] = z[15]*z[7] + z[2]*z[4]*z[6];
  z[21] = z[16]*z[8] + z[3]*z[5]*z[6];
  z[22] = z[15]*z[2] - z[4]*z[6]*z[7];
  z[23] = -z[16]*z[3] + z[5]*z[6]*z[8];
  z[24] = -z[10]*z[2]*z[6] - z[18]*z[7];
  z[25] = z[14]*z[8] + z[3]*(z[10]*z[6]*z[7] - z[18]*z[2]);
  z[26] = z[14]*z[3] - z[8]*(z[10]*z[6]*z[7] - z[18]*z[2]);
  z[27] = -z[3];
  z[28] = -sin(state_[4]);
  z[29] = rear_.R/z[12];
  z[30] = z[13]*z[6];
  z[31] = z[17]*z[8];
  z[32] = z[22]*z[8];

  ar[0] = z[28]*(-z[17]*z[27] - z[32]) - z[9]*(z[22]*z[27] - z[31]);
  ar[1] = z[25]*z[9] + z[26]*z[28];
  ar[2] = -z[21]*z[28] - z[23]*z[9];
  ar[3] = 0;
  ar[4] = z[20];
  ar[5] = z[24];
  ar[6] = z[19];
  ar[7] = 0;
  ar[8] = z[28]*(z[22]*z[27] - z[31]) + z[9]*(-z[17]*z[27] - z[32]);
  ar[9] = -z[25]*z[28] + z[26]*z[9];
  ar[10] = -z[21]*z[9] + z[23]*z[28];
  ar[11] = 0;
  ar[12] = -cam_y*z[15] - z[11]*z[17] + z[2]*z[20]*z[29] - z[30]*z[4];
  ar[13] = cam_y*z[18] + z[10]*z[30] - z[11]*z[14] + z[2]*z[24]*z[29];
  ar[14] = -cam_y*z[0]*z[6] + z[1]*z[13] + z[11]*z[5]*z[6] + z[19]*z[2]*z[29];
  ar[15] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (16)
 *
 * @param[out] a C-array of with 16 elements
 */
//  void Bicycle::mc_r_ogl(double ar[16]) const;
void Bicycle::mc_r_ogl(double ar[16]) const
{
  double * z = new double[32];

  z[0] = sin(azimuth);
  z[1] = sin(elevation);
  z[2] = sin(state_[1]);
  z[3] = sin(state_[2]);
  z[4] = sin(twist);
  z[5] = cos(azimuth);
  z[6] = cos(elevation);
  z[7] = cos(state_[1]);
  z[8] = cos(state_[2]);
  z[9] = cos(twist);
  z[10] = cam_x + cam_z;
  z[11] = sqrt(pow(z[7], 2));
  z[12] = rear_.R/z[11] + rear_.r;
  z[13] = z[0]*z[1]*z[4] + z[5]*z[9];
  z[14] = z[0]*z[2]*z[6] + z[1]*z[7];
  z[15] = z[0]*z[9] - z[1]*z[4]*z[5];
  z[16] = z[0]*z[1]*z[9] - z[4]*z[5];
  z[17] = z[0]*z[6]*z[7] - z[1]*z[2];
  z[18] = -z[0]*z[4] - z[1]*z[5]*z[9];
  z[19] = z[13]*z[7] + z[2]*z[4]*z[6];
  z[20] = z[14]*z[8] + z[3]*z[5]*z[6];
  z[21] = z[13]*z[2] - z[4]*z[6]*z[7];
  z[22] = z[14]*z[3] - z[5]*z[6]*z[8];
  z[23] = -z[16]*z[7] - z[2]*z[6]*z[9];
  z[24] = z[15]*z[8] + z[21]*z[3];
  z[25] = -z[18]*z[8] + z[3]*(-z[16]*z[2] + z[6]*z[7]*z[9]);
  z[26] = z[15]*z[3] - z[21]*z[8];
  z[27] = -z[18]*z[3] - z[8]*(-z[16]*z[2] + z[6]*z[7]*z[9]);
  z[28] = -rear_.a;
  z[29] = -cam_y;
  z[30] = rear_.R/z[11];
  z[31] = z[12]*z[6];

  ar[0] = z[24];
  ar[1] = z[25];
  ar[2] = z[22];
  ar[3] = 0;
  ar[4] = z[19];
  ar[5] = z[23];
  ar[6] = z[17];
  ar[7] = 0;
  ar[8] = z[26];
  ar[9] = z[27];
  ar[10] = -z[20];
  ar[11] = 0;
  ar[12] = rear_.b*z[26] - z[10]*z[15] + z[13]*z[29] + z[19]*z[2]*z[30] - z[24]*z[28] - z[31]*z[4];
  ar[13] = rear_.b*z[27] + z[10]*z[18] - z[16]*z[29] + z[2]*z[23]*z[30] - z[25]*z[28] + z[31]*z[9];
  ar[14] = -rear_.b*z[20] + z[0]*z[29]*z[6] + z[1]*z[12] + z[10]*z[5]*z[6] + z[17]*z[2]*z[30] - z[22]*z[28];
  ar[15] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (16)
 *
 * @param[out] a C-array of with 16 elements
 */
//  void Bicycle::gc_f_ogl(double ar[16]) const;
void Bicycle::gc_f_ogl(double ar[16]) const
{
  double * z = new double[46];

  z[0] = sin(azimuth);
  z[1] = sin(elevation);
  z[2] = sin(state_[1]);
  z[3] = sin(state_[2]);
  z[4] = sin(state_[3]);
  z[5] = sin(twist);
  z[6] = cos(azimuth);
  z[7] = cos(elevation);
  z[8] = cos(state_[1]);
  z[9] = cos(state_[2]);
  z[10] = cos(state_[3]);
  z[11] = cos(twist);
  z[12] = pow(z[8], 2);
  z[13] = pow(z[9], 2);
  z[14] = sqrt(z[12]);
  z[15] = -cam_x - cam_z;
  z[16] = z[0]*z[5] + z[1]*z[11]*z[6];
  z[17] = z[0]*z[2]*z[7] + z[1]*z[8];
  z[18] = rear_.R/z[14] - front_.r + rear_.r;
  z[19] = z[0]*z[11] - z[1]*z[5]*z[6];
  z[20] = -z[10]*z[3]*z[8] + z[2]*z[4];
  z[21] = z[0]*z[1]*z[11] - z[5]*z[6];
  z[22] = z[0]*z[7]*z[8] - z[1]*z[2];
  z[23] = -z[10]*z[8] + z[2]*z[3]*z[4];
  z[24] = -z[0]*z[1]*z[5] - z[11]*z[6];
  z[25] = z[2]*z[5]*z[7] - z[24]*z[8];
  z[26] = z[17]*z[9] + z[3]*z[6]*z[7];
  z[27] = -z[2]*z[24] - z[5]*z[7]*z[8];
  z[28] = -z[17]*z[3] + z[6]*z[7]*z[9];
  z[29] = -z[11]*z[2]*z[7] - z[21]*z[8];
  z[30] = sqrt(z[12]*z[13] + pow(z[20], 2));
  z[31] = sqrt(z[13]*pow(z[4], 2) + pow(z[23], 2));
  z[32] = z[16]*z[9] + z[3]*(z[11]*z[7]*z[8] - z[2]*z[21]);
  z[33] = -z[19]*z[9] - z[27]*z[3];
  z[34] = front_.R*z[20]/z[30] - front_.c;
  z[35] = z[19]*z[3] - z[27]*z[9];
  z[36] = z[16]*z[3] - z[9]*(z[11]*z[7]*z[8] - z[2]*z[21]);
  z[37] = -z[1];
  z[38] = -z[10];
  z[39] = z[4]*z[9];
  z[40] = z[5]*z[7];
  z[41] = z[11]*z[7];
  z[42] = z[8]*z[9];
  z[43] = rear_.R/z[14];
  z[44] = front_.R/z[30];
  z[45] = z[7]/z[31];

  ar[0] = -(z[19]*z[23] + z[24]*z[39])/z[31];
  ar[1] = -(z[16]*z[23] + z[21]*z[39])/z[31];
  ar[2] = z[45]*(z[0]*z[39] + z[23]*z[6]);
  ar[3] = 0;
  ar[4] = -(z[19]*z[39] - z[23]*z[24])/z[31];
  ar[5] = -(z[16]*z[39] - z[21]*z[23])/z[31];
  ar[6] = -z[45]*(z[0]*z[23] - z[39]*z[6]);
  ar[7] = 0;
  ar[8] = z[40];
  ar[9] = -z[41];
  ar[10] = z[37];
  ar[11] = 0;
  ar[12] = -rear_.c*z[33] + cam_y*z[24] + ls_*z[35] + z[15]*z[19] - z[18]*z[40] + z[2]*z[25]*z[43] + z[34]*(z[25]*z[4] + z[33]*z[38]) + z[35]*z[42]*z[44];
  ar[13] = rear_.c*z[32] + cam_y*z[21] + ls_*z[36] + z[15]*z[16] + z[18]*z[41] + z[2]*z[29]*z[43] + z[34]*(z[29]*z[4] - z[32]*z[38]) + z[36]*z[42]*z[44];
  ar[14] = -rear_.c*z[28] - cam_y*z[0]*z[7] - ls_*z[26] - z[15]*z[6]*z[7] - z[18]*z[37] + z[2]*z[22]*z[43] - z[26]*z[42]*z[44] + z[34]*(z[22]*z[4] + z[28]*z[38]);
  ar[15] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (16)
 *
 * @param[out] a C-array of with 16 elements
 */
//  void Bicycle::wc_f_ogl(double ar[16]) const;
void Bicycle::wc_f_ogl(double ar[16]) const
{
  double * z = new double[44];

  z[0] = sin(azimuth);
  z[1] = sin(elevation);
  z[2] = sin(state_[1]);
  z[3] = sin(state_[2]);
  z[4] = sin(state_[3]);
  z[5] = sin(twist);
  z[6] = cos(azimuth);
  z[7] = cos(elevation);
  z[8] = cos(state_[1]);
  z[9] = cos(state_[2]);
  z[10] = cos(state_[3]);
  z[11] = cos(state_[5]);
  z[12] = cos(twist);
  z[13] = sqrt(pow(z[8], 2));
  z[14] = -cam_x - cam_z;
  z[15] = rear_.R/z[13] + rear_.r;
  z[16] = z[0]*z[5] + z[1]*z[12]*z[6];
  z[17] = z[0]*z[1]*z[5] + z[12]*z[6];
  z[18] = z[0]*z[2]*z[7] + z[1]*z[8];
  z[19] = z[0]*z[12] - z[1]*z[5]*z[6];
  z[20] = z[0]*z[1]*z[12] - z[5]*z[6];
  z[21] = z[0]*z[7]*z[8] - z[1]*z[2];
  z[22] = z[17]*z[8] + z[2]*z[5]*z[7];
  z[23] = z[18]*z[9] + z[3]*z[6]*z[7];
  z[24] = z[17]*z[2] - z[5]*z[7]*z[8];
  z[25] = -z[18]*z[3] + z[6]*z[7]*z[9];
  z[26] = z[12]*z[7]*z[8] - z[2]*z[20];
  z[27] = -z[12]*z[2]*z[7] - z[20]*z[8];
  z[28] = z[16]*z[9] + z[26]*z[3];
  z[29] = -z[19]*z[9] - z[24]*z[3];
  z[30] = -z[19]*z[9] - z[24]*z[3];
  z[31] = z[19]*z[3] - z[24]*z[9];
  z[32] = z[16]*z[3] - z[26]*z[9];
  z[33] = -z[10]*z[25] + z[21]*z[4];
  z[34] = -z[10]*z[29] + z[22]*z[4];
  z[35] = z[10]*z[28] + z[27]*z[4];
  z[36] = -z[2];
  z[37] = -z[3];
  z[38] = -sin(state_[5]);
  z[39] = -z[9];
  z[40] = -z[10];
  z[41] = -z[12];
  z[42] = rear_.R/z[13];
  z[43] = z[15]*z[7];

  ar[0] = z[11]*z[34] + z[31]*z[38];
  ar[1] = z[11]*z[35] + z[32]*z[38];
  ar[2] = z[11]*z[33] - z[23]*z[38];
  ar[3] = 0;
  ar[4] = -z[22]*z[40] + z[29]*z[4];
  ar[5] = -z[4]*(-z[16]*z[39] - z[26]*z[37]) - z[40]*(-z[20]*z[8] - z[36]*z[41]*z[7]);
  ar[6] = -z[21]*z[40] + z[25]*z[4];
  ar[7] = 0;
  ar[8] = z[11]*z[31] - z[34]*z[38];
  ar[9] = z[11]*z[32] - z[35]*z[38];
  ar[10] = -z[11]*z[23] - z[33]*z[38];
  ar[11] = 0;
  ar[12] = -front_.c*(z[22]*z[4] + z[30]*z[40]) - rear_.c*z[30] - cam_y*z[17] + ls_*(-z[19]*z[37] + z[24]*z[39]) + z[14]*z[19] - z[22]*z[36]*z[42] - z[43]*z[5];
  ar[13] = -front_.c*z[35] + rear_.c*z[28] + cam_y*z[20] + ls_*z[32] + z[14]*z[16] - z[27]*z[36]*z[42] - z[41]*z[43];
  ar[14] = -front_.c*(z[21]*z[4] + z[25]*z[40]) - rear_.c*z[25] - cam_y*z[0]*z[7] - ls_*z[23] + z[1]*z[15] - z[14]*z[6]*z[7] - z[21]*z[36]*z[42];
  ar[15] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (16)
 *
 * @param[out] a C-array of with 16 elements
 */
//  void Bicycle::mc_f_ogl(double ar[16]) const;
void Bicycle::mc_f_ogl(double ar[16]) const
{
  double * z = new double[42];

  z[0] = sin(azimuth);
  z[1] = sin(elevation);
  z[2] = sin(state_[1]);
  z[3] = sin(state_[2]);
  z[4] = sin(state_[3]);
  z[5] = sin(twist);
  z[6] = cos(azimuth);
  z[7] = cos(elevation);
  z[8] = cos(state_[1]);
  z[9] = cos(state_[2]);
  z[10] = cos(state_[3]);
  z[11] = cos(twist);
  z[12] = cam_x + cam_z;
  z[13] = front_.a - front_.c;
  z[14] = sqrt(pow(z[8], 2));
  z[15] = rear_.R/z[14] + rear_.r;
  z[16] = z[0]*z[1]*z[5] + z[11]*z[6];
  z[17] = z[0]*z[2]*z[7] + z[1]*z[8];
  z[18] = z[0]*z[11] - z[1]*z[5]*z[6];
  z[19] = z[0]*z[1]*z[11] - z[5]*z[6];
  z[20] = z[0]*z[7]*z[8] - z[1]*z[2];
  z[21] = -z[0]*z[5] - z[1]*z[11]*z[6];
  z[22] = z[16]*z[8] + z[2]*z[5]*z[7];
  z[23] = z[17]*z[9] + z[3]*z[6]*z[7];
  z[24] = z[16]*z[2] - z[5]*z[7]*z[8];
  z[25] = z[11]*z[7]*z[8] - z[19]*z[2];
  z[26] = -z[23];
  z[27] = -z[11]*z[2]*z[7] - z[19]*z[8];
  z[28] = -z[17]*z[3] + z[6]*z[7]*z[9];
  z[29] = -z[21]*z[9] + z[25]*z[3];
  z[30] = -z[18]*z[9] - z[24]*z[3];
  z[31] = z[18]*z[3] - z[24]*z[9];
  z[32] = -z[21]*z[3] - z[25]*z[9];
  z[33] = -z[10]*(-z[17]*z[3] + z[6]*z[7]*z[9]) + z[20]*z[4];
  z[34] = -z[10]*z[30] + z[22]*z[4];
  z[35] = z[10]*z[29] + z[27]*z[4];
  z[36] = -rear_.c;
  z[37] = -cam_y;
  z[38] = -z[10];
  z[39] = -z[11];
  z[40] = rear_.R/z[14];
  z[41] = z[15]*z[7];

  ar[0] = z[34];
  ar[1] = z[35];
  ar[2] = z[33];
  ar[3] = 0;
  ar[4] = -z[22]*z[38] + z[30]*z[4];
  ar[5] = -z[38]*(-z[19]*z[8] + z[2]*z[39]*z[7]) - z[4]*(-z[21]*z[9] + z[25]*z[3]);
  ar[6] = -z[20]*z[38] + z[28]*z[4];
  ar[7] = 0;
  ar[8] = z[31];
  ar[9] = z[32];
  ar[10] = -z[23];
  ar[11] = 0;
  ar[12] = front_.b*z[31] + ls_*z[31] - z[12]*z[18] + z[13]*z[34] + z[16]*z[37] + z[2]*z[22]*z[40] + z[30]*z[36] - z[41]*z[5];
  ar[13] = front_.b*z[32] + ls_*z[32] + z[12]*z[21] + z[13]*z[35] - z[19]*z[37] + z[2]*z[27]*z[40] - z[29]*z[36] - z[39]*z[41];
  ar[14] = front_.b*z[26] + ls_*z[26] + z[0]*z[37]*z[7] + z[1]*z[15] + z[12]*z[6]*z[7] + z[13]*z[33] + z[2]*z[20]*z[40] + z[28]*z[36];
  ar[15] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (16)
 *
 * @param[out] a C-array of with 16 elements
 */
//  void Bicycle::N_ogl(double ar[16]) const;
void Bicycle::N_ogl(double ar[16]) const
{
  double * z = new double[21];

  z[0] = sin(azimuth);
  z[1] = sin(elevation);
  z[2] = sin(state_[0]);
  z[3] = sin(twist);
  z[4] = cos(azimuth);
  z[5] = cos(elevation);
  z[6] = cos(state_[0]);
  z[7] = cos(twist);
  z[8] = cam_x + cam_z;
  z[9] = z[0]*z[6] - z[2]*z[4];
  z[10] = z[0]*z[3] + z[1]*z[4]*z[7];
  z[11] = z[0]*z[1]*z[3] + z[4]*z[7];
  z[12] = z[0]*z[7] - z[1]*z[3]*z[4];
  z[13] = z[0]*z[1]*z[7] - z[3]*z[4];
  z[14] = z[10]*z[6] + z[13]*z[2];
  z[15] = z[11]*z[6] + z[12]*z[2];
  z[16] = z[10]*z[2] - z[13]*z[6];
  z[17] = -z[11]*z[2] + z[12]*z[6];
  z[18] = -z[4];
  z[19] = z[0]*z[2];
  z[20] = -z[18]*z[6];

  ar[0] = z[17];
  ar[1] = z[14];
  ar[2] = z[5]*(-z[19] - z[20]);
  ar[3] = 0;
  ar[4] = z[15];
  ar[5] = z[16];
  ar[6] = z[5]*z[9];
  ar[7] = 0;
  ar[8] = z[3]*z[5];
  ar[9] = -z[5]*z[7];
  ar[10] = -z[1];
  ar[11] = 0;
  ar[12] = -cam_y*z[11] - state_[6]*z[17] - state_[7]*z[15] - z[12]*z[8];
  ar[13] = cam_y*z[13] - state_[6]*z[14] - state_[7]*z[16] - z[10]*z[8];
  ar[14] = -z[5]*(cam_y*z[0] - state_[6]*(z[19] + z[20]) + state_[7]*z[9] + z[18]*z[8]);
  ar[15] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (1)
 *
 * @param[out] a C-array of with 1 elements
 */
//  void Bicycle::f_c(double ar[1]) const;
void Bicycle::f_c(double ar[1]) const
{
  double * z = new double[9];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = cos(state_[1]);
  z[3] = cos(state_[2]);
  z[4] = pow(z[2], 2);
  z[5] = pow(z[3], 2);
  z[6] = z[0]*sin(state_[3]) - z[1]*z[2]*cos(state_[3]);
  z[7] = rear_.R/sqrt(z[4]);
  z[8] = front_.R/sqrt(z[4]*z[5] + pow(z[6], 2));

  ar[0] = -rear_.c*z[1]*z[2] + ls_*z[2]*z[3] + front_.r - rear_.r + pow(z[0], 2)*z[7] + z[4]*z[5]*z[8] + z[6]*(-front_.c + z[6]*z[8]) - z[7];

  delete [] z;
}

/** Computes the n-d array of shape (8)
 *
 * @param[out] a C-array of with 8 elements
 */
//  void Bicycle::f_c_dq(double ar[8]) const;
void Bicycle::f_c_dq(double ar[8]) const
{
  double * z = new double[27];

  z[0] = -2;
  z[1] = sin(state_[1]);
  z[2] = sin(state_[2]);
  z[3] = sin(state_[3]);
  z[4] = cos(state_[1]);
  z[5] = cos(state_[2]);
  z[6] = cos(state_[3]);
  z[7] = pow(z[4], -z[0]);
  z[8] = pow(z[5], -z[0]);
  z[9] = z[1]*z[2]*z[6] + z[3]*z[4];
  z[10] = z[1]*z[3] - z[2]*z[4]*z[6];
  z[11] = pow(z[10], -z[0]);
  z[12] = z[11] + z[7]*z[8];
  z[13] = sqrt(z[12]);
  z[14] = front_.R*z[10]/z[13] - front_.c;
  z[15] = -z[5];
  z[16] = z[1]*z[6];
  z[17] = z[2]*z[4];
  z[18] = z[3]*z[4];
  z[19] = z[4]*z[6];
  z[20] = z[7]*z[8];
  z[21] = z[1]*z[4]*z[8];
  z[22] = -z[15]*z[2]*z[7];
  z[23] = rear_.R*z[1]/sqrt(z[7]);
  z[24] = front_.R/pow(z[12], 3.0/2.0);
  z[25] = front_.R/z[13];
  z[26] = z[10]/z[12];

  ar[0] = 0;
  ar[1] = rear_.c*z[1]*z[2] + ls_*z[1]*z[15] + z[0]*z[21]*z[25] - z[0]*z[23]*z[4] + pow(z[1], 2)*z[23]/z[4] - z[10]*z[25]*(z[0]*z[16]*z[2] + z[0]*z[18] + z[26]*(z[0]*z[21] + z[10]*(-z[0]*z[16]*z[2] - z[0]*z[18])))/2 + z[14]*z[9] - z[20]*z[24]*(z[10]*z[9] - z[21]) - z[23]/z[4];
  ar[2] = rear_.c*z[15]*z[4] - ls_*z[17] + z[0]*z[22]*z[25] + z[10]*z[25]*(z[15]*z[19] + z[26]*(-z[10]*z[15]*z[19] + z[22])) + z[14]*z[15]*z[19] - pow(z[15], 3)*z[24]*pow(z[4], 3)*(z[10]*z[6] + z[17]);
  ar[3] = -(z[16] + z[17]*z[3])*(z[10]*z[20]*z[24] + z[10]*z[25]*(z[11]/z[12] - 1) - z[14]);
  ar[4] = 0;
  ar[5] = 0;
  ar[6] = 0;
  ar[7] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (3, 12)
 *
 * @param[out] a C-array of with 36 elements
 */
//  void Bicycle::f_v_du(double ar[36]) const;
void Bicycle::f_v_du(double ar[36]) const
{
  double * z = new double[38];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = pow(z[3], 2);
  z[7] = pow(z[4], 2);
  z[8] = sqrt(z[6]);
  z[9] = rear_.R/z[8] + rear_.r;
  z[10] = z[0]*z[5] + z[1]*z[2]*z[3];
  z[11] = z[0]*z[1]*z[5] + z[2]*z[3];
  z[12] = z[0]*z[2] - z[1]*z[3]*z[5];
  z[13] = z[0]*z[1]*z[2] - z[3]*z[5];
  z[14] = front_.r - z[9];
  z[15] = sqrt(pow(z[12], 2) + z[6]*z[7]);
  z[16] = sqrt(pow(z[13], 2) + pow(z[2], 2)*z[7]);
  z[17] = front_.R/z[15] + z[14];
  z[18] = front_.R*z[12]/z[15] + front_.r*z[0]*z[2]*z[7] + front_.r*z[1]*z[13];
  z[19] = -front_.c;
  z[20] = -front_.r;
  z[21] = rear_.c*z[2];
  z[22] = rear_.c*z[5];
  z[23] = -z[0];
  z[24] = -z[1];
  z[25] = -z[2]*z[23];
  z[26] = -z[23]*z[5];
  z[27] = -z[24]*z[3];
  z[28] = z[2]*z[3];
  z[29] = z[3]*z[4];
  z[30] = -z[7];
  z[31] = -1/z[8];
  z[32] = -rear_.R/z[8];
  z[33] = z[11]*z[2];
  z[34] = z[13]*z[5];
  z[35] = front_.R/z[15];
  z[36] = z[4]/z[16];
  z[37] = z[12]*z[35];

  ar[0] = z[29]*(z[10]*z[35] + z[21] + z[26]*z[32]);
  ar[1] = -z[11]*z[14] - z[21]*z[24] - z[24]*z[26]*z[32] + z[28]*z[30]*z[35];
  ar[2] = z[17]*z[29]*z[5];
  ar[3] = -z[20]*(z[11]*z[24] + z[26]*z[30]);
  ar[4] = -z[29]*z[5]*z[9];
  ar[5] = z[4]*(-z[20]*z[33] + z[20]*z[34] + z[3]*z[35]);
  ar[6] = -z[29]*z[31]*z[5];
  ar[7] = -z[11]*z[3]*z[31];
  ar[8] = z[12];
  ar[9] = z[36]*(-z[33] + z[34]);
  ar[10] = (z[11]*z[13] - z[2]*z[30]*z[5])/z[16];
  ar[11] = -z[12];
  ar[12] = z[29]*(z[19] + z[22] - z[25]*z[32]);
  ar[13] = z[13]*z[14] - z[19]*z[24] - z[22]*z[24] + z[24]*z[25]*z[32] - z[24]*z[37] + z[3]*z[30]*z[35]*z[5];
  ar[14] = -z[17]*z[28]*z[4];
  ar[15] = z[18] + z[19];
  ar[16] = z[28]*z[4]*z[9];
  ar[17] = 0;
  ar[18] = z[28]*z[31]*z[4];
  ar[19] = z[13]*z[3]*z[31];
  ar[20] = z[10];
  ar[21] = 0;
  ar[22] = -z[16];
  ar[23] = -z[10];
  ar[24] = rear_.c*z[23] - z[10]*z[19] - z[10]*z[37] - z[23]*z[27]*z[32];
  ar[25] = z[4]*(-z[14]*z[23] + z[19]*z[2] + z[2]*z[37] + z[23]*z[32]);
  ar[26] = -rear_.c + z[14]*z[27] - z[19]*z[5] - z[37]*z[5];
  ar[27] = 0;
  ar[28] = -z[27]*z[9];
  ar[29] = -z[18];
  ar[30] = -z[27]*z[31];
  ar[31] = -z[23]*z[29]*z[31];
  ar[32] = z[29];
  ar[33] = (-z[13]*z[24] - z[25]*z[30])/z[16];
  ar[34] = -z[36]*(-z[13]*z[23] + z[2]*z[24]);
  ar[35] = -z[29];

  delete [] z;
}

/** Computes the n-d array of shape (3, 12, 3)
 *
 * @param[out] a C-array of with 108 elements
 */
//  void Bicycle::f_v_dudq(double ar[108]) const;
void Bicycle::f_v_dudq(double ar[108]) const
{
  double * z = new double[103];

  z[0] = -2;
  z[1] = sin(state_[1]);
  z[2] = sin(state_[2]);
  z[3] = sin(state_[3]);
  z[4] = cos(state_[1]);
  z[5] = cos(state_[2]);
  z[6] = cos(state_[3]);
  z[7] = pow(z[1], -z[0]);
  z[8] = pow(z[3], -z[0]);
  z[9] = pow(z[4], -z[0]);
  z[10] = pow(z[5], -z[0]);
  z[11] = pow(z[6], -z[0]);
  z[12] = front_.r - rear_.r;
  z[13] = sqrt(z[9]);
  z[14] = -z[1]*z[12];
  z[15] = rear_.R/z[13] + rear_.r;
  z[16] = z[1]*z[6] + z[2]*z[3]*z[4];
  z[17] = z[1]*z[2]*z[6] + z[3]*z[4];
  z[18] = -z[1]*z[3] + z[2]*z[4]*z[6];
  z[19] = -z[18];
  z[20] = -z[1]*z[2]*z[3] + z[4]*z[6];
  z[21] = -z[20];
  z[22] = -rear_.R/z[13] + z[12];
  z[23] = -z[16];
  z[24] = -z[17];
  z[25] = pow(z[19], -z[0]);
  z[26] = pow(z[21], -z[0]);
  z[27] = -rear_.R*z[1]*z[3]/z[13] - rear_.c*z[6];
  z[28] = z[19]*z[6] + z[2]*z[4];
  z[29] = -z[1]*z[21] + z[2]*z[3];
  z[30] = z[10]*z[9] + z[25];
  z[31] = z[10]*z[8] + z[26];
  z[32] = sqrt(z[30]);
  z[33] = pow(z[30], 3.0/2.0);
  z[34] = sqrt(z[31]);
  z[35] = z[29]*z[3]*z[5];
  z[36] = z[10]*z[3]*z[6] - z[21]*z[24];
  z[37] = -z[1]*z[10]*z[4] - z[19]*z[24];
  z[38] = front_.R*z[10]*z[3]*z[4]/z[32] + rear_.R*z[1]*z[2]*z[6]/z[13] - rear_.c*z[2]*z[3];
  z[39] = front_.R*z[1]/z[32] + front_.R*z[37]*z[4]/z[33];
  z[40] = -front_.R*z[10]*z[28]*z[4]/z[33] + front_.R*z[2]/z[32] + z[2]*z[22];
  z[41] = front_.R*z[23]*z[25]/z[33] - front_.R*z[23]/z[32] + front_.r*z[1]*z[10]*z[6] - front_.r*z[2]*z[24];
  z[42] = -front_.R*z[19]*z[37]/z[33] - front_.R*z[24]/z[32] + front_.r*z[10]*z[3]*z[4] - front_.r*z[2]*z[23];
  z[43] = -front_.c;
  z[44] = -front_.r;
  z[45] = -rear_.r;
  z[46] = -z[3]*z[43];
  z[47] = rear_.c*z[3];
  z[48] = -z[1];
  z[49] = -z[2];
  z[50] = -z[4];
  z[51] = -z[5];
  z[52] = -z[6];
  z[53] = -rear_.c*z[6];
  z[54] = z[48]*z[49];
  z[55] = -z[3]*z[48];
  z[56] = z[48]*z[51];
  z[57] = z[48]*z[52];
  z[58] = -z[3]*z[49];
  z[59] = z[49]*z[50];
  z[60] = z[49]*z[52];
  z[61] = -z[3]*z[50];
  z[62] = -z[3]*z[51];
  z[63] = z[50]*z[51];
  z[64] = z[50]*z[52];
  z[65] = z[51]*z[52];
  z[66] = -z[10];
  z[67] = -z[3]*z[66];
  z[68] = -rear_.R/z[13];
  z[69] = -z[50]/z[13];
  z[70] = -z[7]/z[50];
  z[71] = -z[66]*z[8];
  z[72] = -z[66]*z[9];
  z[73] = -z[21]*z[44];
  z[74] = z[23]*z[48];
  z[75] = z[23]*z[49];
  z[76] = -z[23]*z[3];
  z[77] = z[23]*z[52];
  z[78] = z[24]*z[49];
  z[79] = z[19]*z[3];
  z[80] = -z[19]*z[52];
  z[81] = -z[21]*z[48];
  z[82] = -z[21]*z[49];
  z[83] = -z[21]*z[50];
  z[84] = -z[21]*z[52];
  z[85] = z[23]*z[66];
  z[86] = z[23]*z[24];
  z[87] = -z[21]*z[24];
  z[88] = front_.R/z[33];
  z[89] = front_.R/z[32];
  z[90] = -z[52]/z[31];
  z[91] = -z[51]/z[34];
  z[92] = -z[66]/z[31];
  z[93] = -z[23]*z[28];
  z[94] = z[21]/z[31];
  z[95] = -z[37]*z[66];
  z[96] = z[19]*z[88];
  z[97] = z[19]*z[89];
  z[98] = z[26]/z[31];
  z[99] = z[29]/z[31];
  z[100] = z[35]/z[31];
  z[101] = z[36]/z[31];
  z[102] = -z[51]*(-z[28]*z[50]*z[96] + z[3]*z[44]*z[54] - z[64]*z[89] + z[73]);

  ar[0] = z[51]*(-rear_.R*z[13]*z[52] + z[23]*z[37]*z[50]*z[88] - z[47]*z[48] + z[74]*z[89] + z[83]*z[89]);
  ar[1] = -z[50]*(z[38] + z[50]*z[66]*z[88]*z[93] - z[75]*z[89]);
  ar[2] = -z[63]*(z[27] + z[96]*pow(-z[23], -z[0]) + z[97]);
  ar[3] = z[19]*z[22] + z[24]*z[48]*z[68]/z[50] - z[52]*z[59]*z[68] - z[55]*z[66]*z[89] + z[60]*z[68]*z[70] + z[61]*z[88]*z[95];
  ar[4] = -z[51]*(z[0]*z[50]*z[58]*z[89] - z[22]*z[57] - z[28]*z[67]*z[88]*z[9] + z[47] + z[57]*z[68]);
  ar[5] = z[21]*z[22] - z[3]*z[54]*z[68] + z[49]*z[53] + z[61]*z[85]*z[96] + z[64]*z[66]*z[89];
  ar[6] = -z[65]*(-z[12]*z[48] + z[39]);
  ar[7] = -z[40]*z[64];
  ar[8] = -z[63]*(z[22]*z[3] + z[3]*z[89] + z[77]*z[96]);
  ar[9] = -z[44]*(-z[19]*z[49] + z[64]*z[66]);
  ar[10] = -z[44]*z[51]*z[61];
  ar[11] = -z[44]*(-z[55]*z[66] + z[82]);
  ar[12] = z[45]*z[52]*z[56];
  ar[13] = -z[15]*z[52]*z[59];
  ar[14] = -z[15]*z[51]*z[61];
  ar[15] = z[51]*(z[39] - z[44]*z[77] - z[44]*z[79]);
  ar[16] = -z[24]*z[44]*z[58] + z[28]*z[72]*z[88] - z[59]*z[89] + z[60]*z[73];
  ar[17] = z[23]*z[63]*z[96];
  ar[18] = 0;
  ar[19] = z[52]*z[59]/z[13];
  ar[20] = z[51]*z[61]/z[13];
  ar[21] = -z[19]*z[69];
  ar[22] = z[56]*z[64]/z[13];
  ar[23] = -z[21]*z[69];
  ar[24] = z[17];
  ar[25] = z[52]*z[63];
  ar[26] = z[16];
  ar[27] = z[91]*(-z[77]*z[98] + z[77] + z[79] + z[76]*z[87]/z[31]);
  ar[28] = (z[100]*z[24]*z[62] - z[21]*z[60] - z[24]*z[58] + z[35]*z[65]*z[94])/z[34];
  ar[29] = z[101]*z[51]*(z[24]*z[3] + z[84])/sqrt(z[31]);
  ar[30] = -(z[19]*z[21] + z[67]*z[77]*z[94] + z[86]*z[98] - z[86])/z[34];
  ar[31] = (z[0]*z[58]*z[65] + z[100]*z[87] + z[24]*z[51]*z[55] + z[35]*z[67]*z[90] + z[56]*z[84])/z[34];
  ar[32] = -(z[101]*z[87] + z[11]*z[66] + z[31] + z[36]*z[67]*z[90] - pow(-z[24], -z[0]))/z[34];
  ar[33] = z[24];
  ar[34] = -z[52]*z[63];
  ar[35] = z[23];
  ar[36] = -z[51]*(rear_.R*z[13]*z[3] + z[43]*z[48] - z[48]*z[53]);
  ar[37] = z[59]*(z[27] - z[43]);
  ar[38] = z[63]*(-z[47] - z[57]*z[68]);
  ar[39] = -z[22]*z[23] + z[37]*z[49]*z[96] + z[50]*z[58]*z[68] - z[57]*z[66]*z[89] - z[58]*z[68]*z[70] + z[64]*z[88]*z[95] + z[78]*z[89] - z[68]*z[81]/z[50];
  ar[40] = -z[51]*(z[22]*z[55] - z[27] + z[28]*z[52]*z[72]*z[88] + z[28]*z[59]*z[96] + z[43] - z[52]*z[59]*z[89] + z[97]);
  ar[41] = -z[22]*z[24] - z[25]*z[75]*z[88] + z[38] + z[64]*z[85]*z[96] + z[75]*z[89];
  ar[42] = z[62]*(-z[14] + z[39]);
  ar[43] = z[40]*z[61];
  ar[44] = -z[63]*(-z[22]*z[52] - z[52]*z[89] - z[76]*z[96]);
  ar[45] = z[42];
  ar[46] = z[102];
  ar[47] = z[41];
  ar[48] = -z[45]*z[51]*z[55];
  ar[49] = z[15]*z[50]*z[58];
  ar[50] = -z[15]*z[52]*z[63];
  ar[51] = 0;
  ar[52] = 0;
  ar[53] = 0;
  ar[54] = 0;
  ar[55] = z[58]*z[69];
  ar[56] = z[52]*z[63]/z[13];
  ar[57] = z[23]*z[69];
  ar[58] = -z[55]*z[63]/z[13];
  ar[59] = z[24]*z[69];
  ar[60] = z[20];
  ar[61] = -z[51]*z[61];
  ar[62] = z[18];
  ar[63] = 0;
  ar[64] = 0;
  ar[65] = 0;
  ar[66] = -z[21]*z[23]*(z[0] + z[98] + z[71]/z[31])/z[34];
  ar[67] = -z[62]*(z[0]*z[58] - z[0]*z[81] + z[29]*z[98] + z[71]*z[99])/z[34];
  ar[68] = (-z[0]*z[52]*z[67] + z[0]*z[87] + z[101]*z[71] + z[36]*z[98])/z[34];
  ar[69] = z[21];
  ar[70] = z[51]*z[61];
  ar[71] = z[19];
  ar[72] = rear_.R*z[13]*z[49] + rear_.c*z[50] + z[21]*z[43] + z[21]*z[97] - z[23]*z[37]*z[96] - z[86]*z[89];
  ar[73] = z[63]*(z[46] - z[48]*z[68] + z[77]*z[89] - z[79]*z[89] - z[93]*z[96]);
  ar[74] = z[19]*z[43] + z[25]*z[88]*pow(-z[23], -z[0]) + z[25]*z[89] - z[89]*pow(-z[23], -z[0]);
  ar[75] = z[51]*(z[22]*z[50] + z[24]*z[3]*z[89] + z[37]*z[79]*z[88] - z[50]*z[68]);
  ar[76] = -z[22]*z[54] - z[28]*z[61]*z[66]*z[96] - z[46]*z[49] - z[52]*z[61]*z[66]*z[89] + z[54]*z[68] - z[58]*z[97];
  ar[77] = -z[51]*(-z[25]*z[76]*z[88] - z[43]*z[52] + z[76]*z[89] + z[80]*z[89]);
  ar[78] = -z[14]*z[49] - z[24]*z[52]*z[89] + z[37]*z[80]*z[88];
  ar[79] = z[63]*(z[11]*z[89] + z[22] - z[28]*z[80]*z[88]);
  ar[80] = z[25]*z[77]*z[88] - z[46] - z[77]*z[89] + z[79]*z[89];
  ar[81] = 0;
  ar[82] = 0;
  ar[83] = 0;
  ar[84] = -z[45]*z[54];
  ar[85] = -z[15]*z[63];
  ar[86] = 0;
  ar[87] = -z[42];
  ar[88] = -z[102];
  ar[89] = -z[41];
  ar[90] = 0;
  ar[91] = z[63]/z[13];
  ar[92] = 0;
  ar[93] = z[13]*z[51];
  ar[94] = z[54]*z[69];
  ar[95] = 0;
  ar[96] = -z[56];
  ar[97] = -z[59];
  ar[98] = 0;
  ar[99] = (-z[55]*z[85]*z[94] - z[61]*z[66] - z[75]*z[98] + z[75])/z[34];
  ar[100] = (z[100]*z[82] - z[21]*z[51] + z[35]*z[55]*z[92] - z[54]*z[62])/z[34];
  ar[101] = -(z[101]*z[82] + z[36]*z[55]*z[92] + z[57]*z[66] - z[78])/z[34];
  ar[102] = -z[91]*(-z[23]*z[58]*z[94] - z[74]*z[98] + z[74] + z[83]);
  ar[103] = -(z[21]*z[29]*z[55]*z[92] - z[21]*z[54] + z[3]*pow(-z[49], -z[0]) + z[49]*z[71]*z[99] + z[67]*z[7] - z[67])/z[34];
  ar[104] = z[91]*(-z[101]*z[58] + z[101]*z[81] - z[24]*z[48] + z[60]);
  ar[105] = z[56];
  ar[106] = z[59];
  ar[107] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (3, 12, 3, 3)
 *
 * @param[out] a C-array of with 324 elements
 */
//  void Bicycle::f_v_dudqdq(double ar[324]) const;
void Bicycle::f_v_dudqdq(double ar[324]) const
{
  double * z = new double[328];

  z[0] = -3;
  z[1] = -2;
  z[2] = sin(state_[1]);
  z[3] = sin(state_[2]);
  z[4] = sin(state_[3]);
  z[5] = cos(state_[1]);
  z[6] = cos(state_[2]);
  z[7] = cos(state_[3]);
  z[8] = pow(z[2], -z[1]);
  z[9] = pow(z[3], -z[1]);
  z[10] = pow(z[4], -z[1]);
  z[11] = pow(z[4], -z[0]);
  z[12] = pow(z[5], -z[1]);
  z[13] = pow(z[6], -z[1]);
  z[14] = pow(z[7], -z[1]);
  z[15] = front_.r - rear_.r;
  z[16] = sqrt(z[12]);
  z[17] = rear_.r*z[2]*z[6];
  z[18] = -z[15]*z[2];
  z[19] = -z[15]*z[5];
  z[20] = rear_.R/z[16] + rear_.r;
  z[21] = rear_.r*z[2]*z[3]*z[4];
  z[22] = z[2]*z[7] + z[3]*z[4]*z[5];
  z[23] = z[2]*z[3]*z[7] + z[4]*z[5];
  z[24] = -z[2]*z[4] + z[3]*z[5]*z[7];
  z[25] = -z[24];
  z[26] = -z[2]*z[3]*z[4] + z[5]*z[7];
  z[27] = -z[26];
  z[28] = -rear_.R/z[16] + z[15];
  z[29] = -z[22];
  z[30] = -z[23];
  z[31] = pow(z[25], -z[1]);
  z[32] = pow(z[25], -z[0]);
  z[33] = pow(z[27], -z[1]);
  z[34] = pow(z[27], -z[0]);
  z[35] = rear_.R*z[2]*z[7]/z[16] - rear_.c*z[4];
  z[36] = -rear_.R*z[2]*z[4]/z[16] - rear_.c*z[7];
  z[37] = -rear_.R*z[2]*z[3]*z[7]/z[16] + rear_.c*z[3]*z[4];
  z[38] = z[25]*z[7] + z[3]*z[5];
  z[39] = z[2]*z[27] - z[3]*z[4];
  z[40] = pow(z[38], -z[1]);
  z[41] = z[12]*z[13] + z[31];
  z[42] = z[10]*z[13] + z[33];
  z[43] = sqrt(z[41]);
  z[44] = pow(z[41], 3.0/2.0);
  z[45] = pow(z[41], -z[1]);
  z[46] = pow(z[41], 5.0/2.0);
  z[47] = sqrt(z[42]);
  z[48] = pow(z[42], 3.0/2.0);
  z[49] = pow(z[42], -z[1]);
  z[50] = -z[39]*z[4]*z[6];
  z[51] = z[0]*z[39]*z[4]*z[6];
  z[52] = z[25]*z[4] + z[29]*z[7];
  z[53] = z[2]*z[29] - z[27]*z[5];
  z[54] = z[13]*z[4]*z[7] - z[27]*z[30];
  z[55] = -z[13]*z[2]*z[5] - z[25]*z[30];
  z[56] = pow(z[54], -z[1]);
  z[57] = pow(z[55], -z[1]);
  z[58] = z[13]*z[14]*z[5] - z[13]*z[5] + z[25]*z[3]*z[7] + z[5]*z[9];
  z[59] = -z[1]*z[2]*z[3]*z[5] + z[2]*z[25]*z[7] + z[30]*z[5]*z[7];
  z[60] = -z[13]*z[4]*z[8] + z[13]*z[4] + z[2]*z[27]*z[3] - z[4]*z[9];
  z[61] = -z[1]*z[3]*z[4]*z[7] - z[2]*z[27]*z[7] + z[2]*z[30]*z[4];
  z[62] = z[6]*z[61];
  z[63] = -z[13]*z[8] + z[41] - pow(-z[30], -z[1]);
  z[64] = -z[13]*z[14] + z[42] - pow(-z[30], -z[1]);
  z[65] = -z[25]*z[27] + z[29]*z[30];
  z[66] = z[65];
  z[67] = -front_.R*z[13]*z[4]*z[5]/z[43] + z[28]*z[30];
  z[68] = front_.R*z[25]/z[43] + front_.r*z[13]*z[2]*z[4] + front_.r*z[27]*z[3];
  z[69] = front_.R*z[2]*z[7]/z[43] + front_.R*z[5]*z[55]*z[7]/z[44];
  z[70] = -front_.R*z[13]*z[5]*z[7]/z[43] + front_.R*z[25]*z[3]/z[43] + z[27]*z[28];
  z[71] = z[0]*z[13]*z[25]*z[29]*z[38]*z[5]/z[41] + z[25]*z[29]*z[3];
  z[72] = front_.R*z[1]*z[13]*z[25]*z[29]*z[4]*z[5]/z[44] - front_.R*z[13]*z[5]*z[7]*pow(-z[29], -z[1])/z[44];
  z[73] = z[0]*z[25]*z[29]*z[5]*z[55]/z[41] - z[2]*z[25]*z[29];
  z[74] = front_.R*z[1]*z[25]*z[7]/z[43] + front_.R*z[1]*z[29]*z[31]*z[4]/z[44] - front_.R*z[1]*z[29]*z[4]/z[43] + front_.c*z[7];
  z[75] = -z[1]*z[10]*z[27]*z[29]*z[3]*z[6]/z[42] - z[1]*z[2]*z[29]*z[4]*z[6] - z[1]*z[27]*z[29]*z[50]/z[42] + z[1]*z[27]*z[4]*z[5]*z[6];
  z[76] = -front_.R*z[0]*z[29]*z[31]*z[38]*z[5]/z[46] - front_.R*z[29]*z[38]*z[5]/z[44] + front_.R*z[4]*z[5]/z[43] - front_.r*z[2]*z[3]*z[7] - front_.r*z[30];
  z[77] = -front_.R*z[0]*z[31]*z[38]*pow(-z[29], -z[1])/z[46] + front_.R*z[31]*z[38]/z[44] - front_.R*z[38]*pow(-z[29], -z[1])/z[44];
  z[78] = z[0]*z[29]*z[31]*z[38]*z[7]/z[45] + z[1]*z[4]*z[7] + z[25]*z[38]*z[4]/z[41] + z[29]*z[38]*z[7]/z[41];
  z[79] = -front_.R*z[0]*z[25]*pow(-z[29], -z[1])/z[44] + front_.R*z[0]*z[32]*pow(-z[29], -z[1])/z[46] - front_.R*z[32]/z[44] + z[68];
  z[80] = front_.R*z[0]*z[12]*z[13]*z[40]/z[46] - front_.R*z[1]*z[3]*z[38]*z[5]/z[44] + front_.R*z[5]*z[58]/z[44] + front_.R/z[43] + z[28];
  z[81] = -front_.R*z[0]*z[29]*z[31]*z[55]/z[46] + front_.R*z[27]/z[43] - front_.R*z[29]*z[55]/z[44] - front_.r*z[13]*z[5]*z[7] + front_.r*z[25]*z[3];
  z[82] = -front_.R*z[0]*z[5]*z[57]/z[46] - front_.R*z[1]*z[2]*z[55]/z[44] + front_.R*z[5]*z[63]/z[44] - front_.R*z[5]/z[43];
  z[83] = front_.R*z[0]*z[13]*z[25]*z[29]*z[38]*z[4]*z[5]/z[46] - front_.R*z[13]*z[38]*z[5]*z[7]/z[44] + front_.R*z[25]*z[29]*z[3]*z[4]/z[44] + front_.R*z[3]*z[7]/z[43] + z[28]*z[3]*z[7];
  z[84] = front_.R*z[0]*z[25]*z[29]*z[5]*z[55]*z[7]/z[46] - front_.R*z[2]*z[25]*z[29]*z[7]/z[44] + front_.R*z[2]*z[4]/z[43] + front_.R*z[4]*z[5]*z[55]/z[44] - z[18]*z[4];
  z[85] = front_.R*z[0]*z[12]*z[13]*z[25]*z[29]*z[38]*z[4]/z[46] - front_.R*z[1]*z[25]*z[29]*z[3]*z[4]*z[5]/z[44] - front_.R*z[1]*z[3]*z[5]*z[7]/z[43] - front_.R*z[12]*z[13]*z[38]*z[7]/z[44] + z[2]*z[28]*z[4] - z[36];
  z[86] = -front_.R*z[0]*z[12]*z[13]*z[25]*z[40]/z[46] + front_.R*z[1]*z[12]*z[13]*z[38]*z[7]/z[44] - front_.R*z[25]*z[5]*z[58]/z[44] + front_.R*z[3]*z[5]*z[7]/z[43] + front_.r*z[2]*z[4]*z[9] - front_.r*z[27]*z[3];
  z[87] = -z[0]*z[29]*z[31]*z[4]*z[55]/z[45] + z[25]*z[55]*z[7]/z[41] + z[27]*z[4] - z[29]*z[4]*z[55]/z[41] + z[30]*z[7];
  z[88] = -z[0]*z[29]*z[31]*z[55]*z[7]/z[45] - z[25]*z[4]*z[55]/z[41] + z[27]*z[7] - z[29]*z[55]*z[7]/z[41] - z[30]*z[4];
  z[89] = -z[0]*z[27]*z[29]*z[30]*z[4]*z[54]/z[42] - z[0]*z[29]*z[33]*z[54]*z[7]/z[42] + z[25]*z[4]*z[54] - z[29]*z[54]*z[7];
  z[90] = -z[25]*z[3]*z[4] + z[25]*z[4]*z[50]*z[6]/z[42] - z[27]*z[29]*z[3]*z[30]*z[4]/z[42] - z[29]*z[3]*z[33]*z[7]/z[42] + z[29]*z[3]*z[7] - z[29]*z[50]*z[6]*z[7]/z[42];
  z[91] = -front_.R*z[0]*z[13]*z[25]*z[38]*z[5]*pow(-z[29], -z[1])/z[46] + front_.R*z[13]*z[25]*z[38]*z[5]/z[44] - front_.R*z[13]*z[5]*z[7]/z[43] - front_.R*z[25]*z[3]*pow(-z[29], -z[1])/z[44] - front_.R*z[25]*z[3]/z[43] + rear_.R*z[2]*z[3]*z[4]/z[16] + rear_.c*z[3]*z[7];
  z[92] = front_.R*z[0]*z[25]*z[57]/z[46] + front_.R*z[1]*z[30]*z[55]/z[44] - front_.R*z[25]*z[63]/z[44] + z[68];
  z[93] = -front_.R*z[0]*z[12]*z[13]*z[38]*z[55]/z[46] + front_.R*z[13]*z[2]*z[38]*z[5]/z[44] + front_.R*z[13]*z[5]*z[59]/z[44] - front_.R*z[2]*z[3]/z[43] - front_.R*z[3]*z[5]*z[55]/z[44];
  z[94] = -front_.R*z[0]*z[25]*z[5]*z[55]*pow(-z[29], -z[1])/z[46] + front_.R*z[2]*z[25]*pow(-z[29], -z[1])/z[44] + front_.R*z[2]*z[25]/z[43] + front_.R*z[25]*z[5]*z[55]/z[44] + front_.R*z[30]*z[5]/z[43] + rear_.R*z[16]*z[4] - rear_.c*z[2]*z[7];
  z[95] = -z[7]*(-z[15]*z[2]*z[3] + z[93]);
  z[96] = -z[0]*z[10]*z[13]*z[2]*z[27]*z[29]*z[39]/z[49] - z[0]*z[29]*z[3]*z[33]*z[39]*z[4]/z[49] + z[10]*z[13]*z[39]*z[5]/z[42] - z[2]*z[7] - z[29]*z[3]*z[39]*z[4]/z[42] - z[29]*z[33]/z[42];
  z[97] = -front_.R*z[0]*z[13]*z[25]*z[29]*z[4]*z[5]*z[55]/z[46] + front_.R*z[13]*z[2]*z[25]*z[29]*z[4]/z[44] + front_.R*z[13]*z[2]*z[7]/z[43] + front_.R*z[13]*z[5]*z[55]*z[7]/z[44] - rear_.R*z[2]*z[27]/(z[16]*z[5]) + rear_.R*z[3]*z[4]*z[5]/z[16] + rear_.R*z[3]*z[4]*z[8]/(z[16]*z[5]) - z[28]*z[29];
  z[98] = -front_.R*z[1]*z[25]*z[29]*z[30]/z[44] - front_.R*z[27]*z[31]/z[44] + z[81];
  z[99] = front_.r*z[25]*z[3]*z[4] - front_.r*z[29]*z[3]*z[7] - z[93];
  z[100] = -z[6]*(front_.R*z[0]*z[25]*z[38]*z[5]*z[55]/z[46] - front_.R*z[25]*z[59]/z[44] - front_.R*z[30]*z[38]*z[5]/z[44] - front_.r*z[29] - front_.r*z[3]*z[4]*z[5] + z[69]);
  z[101] = -z[0]*z[10]*z[13]*z[27]*z[29]*z[54]/z[49] - z[0]*z[29]*z[34]*z[54]/z[49] + z[1]*z[13]*z[27]*z[29]*z[4]*z[7]/z[42] - z[1]*z[25]*z[27] + z[1]*z[27]*z[29]*z[54]/z[42] + z[1]*z[29]*z[30];
  z[102] = -z[0]*z[13]*z[2]*z[27]*z[29]*z[4]*z[54]/z[49] - z[0]*z[29]*z[3]*z[33]*z[54]/z[49] - z[13]*z[2]*z[27]*z[29]*z[7]/z[42] + z[13]*z[4]*z[5]*z[54]/z[42] - z[13]*z[5]*z[7] + z[25]*z[3] - z[29]*z[3]*z[54]/z[42];
  z[103] = -z[0]*z[2]*z[29]*z[33]*z[54]/z[49] + z[0]*z[27]*z[29]*z[3]*z[4]*z[54]/z[49] + z[2]*z[25] - z[2]*z[29]*z[54]/z[42] + z[27]*z[29]*z[3]*z[7]/z[42] + z[27]*z[5]*z[54]/z[42] + z[30]*z[5];
  z[104] = -front_.R*z[0]*z[13]*z[29]*z[31]*z[38]*z[4]*z[5]/z[46] + front_.R*z[10]*z[13]*z[5]/z[43] - front_.R*z[13]*z[14]*z[5]/z[43] + front_.R*z[13]*z[25]*z[38]*z[5]*z[7]/z[44] - front_.R*z[13]*z[29]*z[38]*z[4]*z[5]/z[44] - front_.R*z[25]*z[3]*z[7]/z[43] - front_.R*z[29]*z[3]*z[31]*z[4]/z[44] + front_.R*z[29]*z[3]*z[4]/z[43] + front_.c*z[3]*z[7];
  z[105] = z[13]*z[2]*z[4]*z[62]/z[42] + z[13]*z[2]*z[50]*z[7]/z[42] + z[2]*z[3]*z[4]*z[54]*z[6]/z[42] - z[2]*z[3]*z[6]*z[7] + z[27]*z[3]*z[62]/z[42] - z[27]*z[54]*z[6]/z[42] - z[3]*z[30]*z[50]/z[42] - z[30]*z[6];
  z[106] = -z[0]*z[10]*z[13]*z[27]*z[29]*z[39]*z[7]/z[49] + z[0]*z[29]*z[30]*z[33]*z[39]*z[4]/z[49] - z[1]*z[27]*z[29]*z[3]*z[4]*z[7]/z[42] + z[2]*z[25]*z[4] - z[2]*z[29]*z[33]*z[7]/z[42] + z[2]*z[29]*z[7] - z[25]*z[27]*z[39]*z[4]/z[42] - z[27]*z[5]*z[7] + z[29]*z[30]*z[39]*z[4]/z[42] + z[30]*z[4]*z[5];
  z[107] = -z[0]*z[10]*z[13]*z[27]*z[29]*z[3]*z[39]/z[49] + z[0]*z[13]*z[2]*z[29]*z[33]*z[39]*z[4]/z[49] - z[1]*z[13]*z[2]*z[4]*z[5] + z[13]*z[2]*z[29]*z[39]*z[4]/z[42] - z[13]*z[27]*z[29]*z[4]/z[42] - z[13]*z[27]*z[39]*z[4]*z[5]/z[42] - z[2]*z[29]*z[3]*z[33]/z[42] + z[2]*z[29]*z[3] + z[27]*z[29]*z[4]*z[9]/z[42] - z[27]*z[3]*z[5];
  z[108] = front_.R*z[0]*z[13]*z[25]*z[38]*z[4]*z[5]*z[55]/z[46] + front_.R*z[13]*z[2]*z[4]*z[7]/z[43] - front_.R*z[13]*z[25]*z[4]*z[59]/z[44] - front_.R*z[13]*z[30]*z[38]*z[4]*z[5]/z[44] + front_.R*z[13]*z[4]*z[5]*z[55]*z[7]/z[44] + front_.R*z[25]*z[3]*z[4]*z[55]/z[44] + front_.R*z[3]*z[30]*z[4]/z[43] - rear_.R*z[3]*z[5]/z[16] - z[28]*z[3]*z[5];
  z[109] = front_.R*z[0]*z[13]*z[25]*z[29]*z[5]*z[55]*z[7]/z[46] - front_.R*z[0]*z[29]*z[3]*z[31]*z[55]/z[46] - front_.R*z[13]*z[2]*z[25]*z[29]*z[7]/z[44] + front_.R*z[13]*z[2]*z[4]/z[43] + front_.R*z[13]*z[4]*z[5]*z[55]/z[44] + front_.R*z[27]*z[3]/z[43] - front_.R*z[29]*z[3]*z[55]/z[44] - rear_.R*z[2]*z[30]/(z[16]*z[5]) - rear_.R*z[3]*z[5]*z[7]/z[16] - rear_.R*z[3]*z[7]*z[8]/(z[16]*z[5]) + z[25]*z[28];
  z[110] = -front_.R*z[0]*z[12]*z[13]*z[29]*z[38]*z[55]/z[46] + front_.R*z[1]*z[13]*z[2]*z[4]*z[5]/z[43] - front_.R*z[12]*z[13]*z[27]*z[38]/z[44] - front_.R*z[12]*z[13]*z[4]*z[55]/z[44] + front_.R*z[13]*z[2]*z[29]*z[38]*z[5]/z[44] + front_.R*z[13]*z[29]*z[5]*z[59]/z[44] - front_.R*z[2]*z[29]*z[3]/z[43] + front_.R*z[27]*z[3]*z[5]/z[43] - front_.R*z[29]*z[3]*z[5]*z[55]/z[44] + rear_.R*z[16]*z[3]*z[7] + rear_.c*z[2]*z[3]*z[4];
  z[111] = -z[6]*(-z[0]*z[11]*z[13]*z[39]*z[54]/z[49] - z[0]*z[33]*z[39]*z[4]*z[54]/z[49] + z[1]*z[10]*z[13]*z[39]*z[7]/z[42] - z[1]*z[10]*z[3]*z[54]/z[42] + z[1]*z[2]*z[27]*z[4]*z[54]/z[42] - z[1]*z[2]*z[27]*z[7] + z[1]*z[2]*z[30]*z[4] - z[1]*z[27]*z[30]*z[39]*z[4]/z[42] + z[10]*z[13]*z[61]/z[42] - 4*z[3]*z[4]*z[7] + z[33]*z[61]/z[42])/z[47];
  z[112] = -z[6]*(-front_.R*z[0]*z[25]*z[29]*z[38]*z[5]*z[55]/z[46] - front_.R*z[2]*z[25]*z[4]/z[43] - front_.R*z[2]*z[29]*z[7]/z[43] - front_.R*z[25]*z[27]*z[38]*z[5]/z[44] + front_.R*z[25]*z[29]*z[59]/z[44] - front_.R*z[25]*z[4]*z[5]*z[55]/z[44] + front_.R*z[27]*z[5]*z[7]/z[43] + front_.R*z[29]*z[30]*z[38]*z[5]/z[44] - front_.R*z[29]*z[5]*z[55]*z[7]/z[44] - front_.R*z[30]*z[4]*z[5]/z[43] + rear_.R*z[16] + front_.c*z[2]*z[4]);
  z[113] = -z[6]*(front_.R*z[0]*z[12]*z[13]*z[38]*z[55]*z[7]/z[46] - front_.R*z[0]*z[25]*z[3]*z[38]*z[5]*z[55]/z[46] - front_.R*z[13]*z[2]*z[38]*z[5]*z[7]/z[44] - front_.R*z[13]*z[5]*z[59]*z[7]/z[44] + front_.R*z[2]*z[3]*z[7]/z[43] + front_.R*z[25]*z[3]*z[59]/z[44] + front_.R*z[25]*z[55]/z[44] + front_.R*z[3]*z[30]*z[38]*z[5]/z[44] + front_.R*z[3]*z[5]*z[55]*z[7]/z[44] + front_.R*z[30]/z[43] - rear_.R*z[4]*z[5]/z[16] - z[28]*z[4]*z[5]);
  z[114] = -z[6]*(z[0]*z[10]*z[13]*z[39]*z[54]*z[7]/z[49] - z[0]*z[27]*z[30]*z[39]*z[4]*z[54]/z[49] + z[1]*z[10]*z[3] - z[1]*z[14]*z[3] - z[1]*z[2]*z[27]*z[4] - z[1]*z[2]*z[30]*z[7] + z[1]*z[3]*z[4]*z[54]*z[7]/z[42] - z[11]*z[13]*z[39]/z[42] + z[13]*z[14]*z[39]*z[4]/z[42] - z[13]*z[4]*z[61]*z[7]/z[42] + z[2]*z[27]*z[54]*z[7]/z[42] - z[2]*z[30]*z[4]*z[54]/z[42] + z[27]*z[30]*z[61]/z[42] - z[33]*z[39]*z[4]/z[42] + z[39]*z[4]*pow(-z[30], -z[1])/z[42])/z[47];
  z[115] = -front_.r;
  z[116] = -rear_.r;
  z[117] = front_.c*z[3];
  z[118] = front_.c*z[4];
  z[119] = rear_.c*z[2];
  z[120] = -z[2];
  z[121] = -z[3];
  z[122] = -z[4];
  z[123] = -z[5];
  z[124] = z[1]*z[123];
  z[125] = z[0]*z[123];
  z[126] = -z[6];
  z[127] = z[0]*z[126];
  z[128] = -z[7];
  z[129] = z[1]*z[128];
  z[130] = z[120]*z[121];
  z[131] = z[120]*z[122];
  z[132] = z[120]*z[126];
  z[133] = z[121]*z[122];
  z[134] = z[121]*z[123];
  z[135] = z[121]*z[128];
  z[136] = z[122]*z[123];
  z[137] = z[122]*z[126];
  z[138] = z[123]*z[126];
  z[139] = z[123]*z[128];
  z[140] = z[126]*z[128];
  z[141] = -z[130];
  z[142] = -z[120]*z[128];
  z[143] = z[122]*z[129];
  z[144] = -z[138];
  z[145] = -rear_.c*z[121]*z[7];
  z[146] = -z[1]*z[8];
  z[147] = -z[1]*z[9];
  z[148] = -z[1]*z[10];
  z[149] = z[1]/z[123];
  z[150] = -z[13];
  z[151] = z[1]*z[150];
  z[152] = z[0]*z[150];
  z[153] = -z[0]*pow(z[6], 4);
  z[154] = -z[12]*z[121];
  z[155] = -z[122]*z[9];
  z[156] = -z[128]*z[9];
  z[157] = z[122]*z[150];
  z[158] = z[123]*z[150];
  z[159] = -z[12]*z[128];
  z[160] = z[128]*z[150];
  z[161] = -z[126]*z[131];
  z[162] = -z[128]*z[132];
  z[163] = -z[123]*z[133];
  z[164] = -z[128]*z[134];
  z[165] = -z[126]*z[136];
  z[166] = z[128]*z[144];
  z[167] = -z[161];
  z[168] = -z[162];
  z[169] = -z[163];
  z[170] = -z[164];
  z[171] = -z[165];
  z[172] = -z[166];
  z[173] = z[115]*z[167];
  z[174] = -rear_.R/z[16];
  z[175] = -z[123]/z[16];
  z[176] = -z[150]*z[8];
  z[177] = pow(z[2], -z[0])/z[12];
  z[178] = -z[10]*z[150];
  z[179] = -z[12]*z[150];
  z[180] = -z[14]*z[150];
  z[181] = -z[115]*z[172];
  z[182] = z[116]*z[128]*z[141];
  z[183] = -z[116]*z[167];
  z[184] = -z[116]*z[168];
  z[185] = z[139]*z[150];
  z[186] = z[16];
  z[187] = -z[121]*z[186];
  z[188] = z[132]*z[175];
  z[189] = -z[169]/z[186];
  z[190] = -z[170]/z[186];
  z[191] = -z[171]/z[186];
  z[192] = z[172]/z[186];
  z[193] = -z[122]*z[141]*z[174];
  z[194] = -front_.c*z[30];
  z[195] = z[115]*z[30];
  z[196] = z[140]*z[186];
  z[197] = z[120]*z[29];
  z[198] = z[121]*z[29];
  z[199] = z[128]*z[29];
  z[200] = z[121]*z[30];
  z[201] = z[122]*z[30];
  z[202] = z[122]*z[28];
  z[203] = z[128]*z[28];
  z[204] = -z[137]*z[186];
  z[205] = z[131]*z[144]/z[186];
  z[206] = -z[132]*z[139]/z[186];
  z[207] = -z[120]*z[25];
  z[208] = -z[121]*z[25];
  z[209] = -z[122]*z[25];
  z[210] = -z[123]*z[25];
  z[211] = -z[128]*z[25];
  z[212] = -z[122]*z[27];
  z[213] = -z[128]*z[27];
  z[214] = -z[123]*z[30];
  z[215] = -z[172]*z[20];
  z[216] = -pow(-z[29], -z[1]);
  z[217] = z[0]*z[216];
  z[218] = -pow(-z[30], -z[1]);
  z[219] = z[1]*z[218];
  z[220] = -z[14]*z[29];
  z[221] = z[122]*z[216];
  z[222] = z[120]*z[27];
  z[223] = z[121]*z[27];
  z[224] = z[169]*z[20];
  z[225] = z[170]*z[20];
  z[226] = z[171]*z[20];
  z[227] = -z[0]*z[31];
  z[228] = z[1]*z[33];
  z[229] = -z[150]*z[25];
  z[230] = -z[128]*z[31];
  z[231] = z[131]*z[25];
  z[232] = -z[141]*z[29];
  z[233] = z[135]*z[29];
  z[234] = z[136]*z[30];
  z[235] = -z[133]*z[25];
  z[236] = -z[139]*z[27];
  z[237] = z[175]*z[25];
  z[238] = z[175]*z[29];
  z[239] = z[175]*z[27];
  z[240] = z[175]*z[30];
  z[241] = -z[134]*z[35];
  z[242] = -z[126]*(-rear_.R*z[128]*z[186] - z[119]*z[122]);
  z[243] = -z[144]*(front_.c + z[36]);
  z[244] = z[29]*z[30];
  z[245] = -z[115]*(-z[136]*z[150] + z[198]);
  z[246] = -z[115]*(z[142]*z[150] + z[200]);
  z[247] = z[12]*z[38];
  z[248] = -z[150]*z[38];
  z[249] = -z[25]*z[29];
  z[250] = -z[25]*z[30];
  z[251] = z[1]*z[244];
  z[252] = -z[27]*z[30];
  z[253] = -z[10]*z[39];
  z[254] = z[150]*z[39];
  z[255] = z[25]*z[27];
  z[256] = z[218]*z[29];
  z[257] = front_.R/z[46];
  z[258] = front_.R/z[43];
  z[259] = z[40]*pow(z[5], -z[0]);
  z[260] = -z[29]*z[31];
  z[261] = -z[121]*(rear_.R*z[122]*z[186] + front_.c*z[120] - z[119]*z[128]);
  z[262] = -z[0]/z[49];
  z[263] = -1/z[42];
  z[264] = z[1]*z[263];
  z[265] = -4*z[263];
  z[266] = -front_.R/z[44];
  z[267] = -z[126]/z[48];
  z[268] = z[126]*z[263];
  z[269] = -z[126]/z[47];
  z[270] = -z[263]*z[8];
  z[271] = z[150]*z[263];
  z[272] = -z[29]*z[38];
  z[273] = -z[11]*z[263]*pow(z[6], -z[0]);
  z[274] = z[25]*z[38];
  z[275] = -z[150]*z[52];
  z[276] = z[31]*z[38];
  z[277] = z[263]*z[29];
  z[278] = z[263]*z[30];
  z[279] = -z[0]*z[56];
  z[280] = -z[4]*z[53]*z[6];
  z[281] = z[25]/z[41];
  z[282] = z[27]/z[49];
  z[283] = -z[263]*z[27];
  z[284] = -z[0]*z[57];
  z[285] = z[14]*z[55];
  z[286] = z[216]*z[263];
  z[287] = z[25]*z[258];
  z[288] = z[258]*z[29];
  z[289] = z[31]/z[41];
  z[290] = -z[29]*z[51];
  z[291] = z[33]/z[49];
  z[292] = -z[263]*z[33];
  z[293] = z[34]/z[49];
  z[294] = -z[263]*z[34];
  z[295] = z[12]*z[58];
  z[296] = -z[30]*z[54];
  z[297] = z[10]*z[60];
  z[298] = -z[29]*z[55];
  z[299] = z[27]*z[54];
  z[300] = z[263]*z[39];
  z[301] = z[199]*z[54];
  z[302] = z[31]*z[55];
  z[303] = z[277]*z[33];
  z[304] = z[50]/z[49];
  z[305] = -z[263]*z[50];
  z[306] = z[51]/z[49];
  z[307] = z[264]*z[50];
  z[308] = z[25]*z[58];
  z[309] = z[50]*z[51];
  z[310] = z[157]*z[27]*z[277];
  z[311] = z[38]*z[55];
  z[312] = -z[263]*z[53];
  z[313] = z[54]/z[49];
  z[314] = -z[263]*z[54];
  z[315] = z[56]/z[49];
  z[316] = -z[244]*z[25]*z[266];
  z[317] = z[125]*z[257]*z[57];
  z[318] = -z[263]*z[60];
  z[319] = -z[263]*z[64];
  z[320] = -z[263]*z[65];
  z[321] = -z[263]*z[66];
  z[322] = z[304]*z[51];
  z[323] = -z[126]*(-z[124]*z[199]*z[25]*z[266] + z[136]*z[266]*z[31] + z[76]);
  z[324] = -z[126]*(-z[139]*z[249]*z[266] + z[210]*z[266]*z[52] + z[76]);
  z[325] = -z[122]*(-z[121]*z[18] + z[93]);
  z[326] = -z[126]*(z[1]*z[122]*z[141]*z[258] - z[122]*z[152]*z[247]*z[257]*z[55] + z[124]*z[133]*z[266]*z[55] - z[131]*z[158]*z[266]*z[38] + z[136]*z[150]*z[266]*z[59] + z[139]*z[174] - z[139]*z[28]);
  z[327] = -z[126]*(-z[115]*z[169] + z[115]*z[29] - z[125]*z[257]*z[274]*z[55] + z[214]*z[266]*z[38] + z[25]*z[266]*z[59] + z[69]);

  ar[0] = -z[126]*(rear_.c*z[123]*z[4] + z[1]*z[197]*z[266]*z[55] + z[1]*z[222]*z[258] - z[123]*z[142]*z[174] - z[123]*z[266]*z[29]*z[63] - z[124]*z[266]*z[27]*z[55] + z[124]*z[288] - z[29]*z[317]);
  ar[1] = z[110];
  ar[2] = -z[126]*(z[123]*z[266]*z[29]*z[66] + z[210]*z[266]*z[27]*z[29] + z[94]);
  ar[3] = z[110];
  ar[4] = z[144]*(z[12]*z[152]*z[257]*z[29]*z[40] - z[122]*z[151]*z[247]*z[266] - z[123]*z[266]*z[29]*z[58] - z[124]*z[198]*z[266]*z[38] + z[125]*z[133]*z[258] - z[288] - z[35]);
  ar[5] = z[123]*(z[136]*z[229]*z[266]*z[29] + z[158]*z[266]*z[29]*z[52] + z[91]);
  ar[6] = -z[126]*(-z[124]*z[249]*z[266]*z[27] + z[214]*z[216]*z[266] + z[94]);
  ar[7] = z[123]*(z[72] + z[91]);
  ar[8] = -z[144]*(z[227]*z[257]*pow(-z[29], -z[0]) + z[227]*z[266]*z[29] + z[266]*pow(-z[29], -z[0]) + z[288] + z[35]);
  ar[9] = rear_.R*z[121]*z[129]*z[177]/sqrt(z[12]) - rear_.R*z[146]*z[30]/pow(z[12], 3.0/2.0) - z[129]*z[141]*z[174] + z[131]*z[151]*z[266]*z[55] - z[136]*z[150]*z[266]*z[63] + z[149]*z[174]*z[207] - z[157]*z[317] + z[174]*z[30] - z[67];
  ar[10] = z[326];
  ar[11] = z[136]*z[150]*z[266]*z[66] + z[97];
  ar[12] = z[326];
  ar[13] = z[122]*z[153]*z[257]*z[259] - z[124]*z[155]*z[258] + z[124]*z[157]*z[258] - 4*z[133]*z[179]*z[266]*z[38] + z[141]*z[203] - z[157]*z[266]*z[295] - z[37];
  ar[14] = -z[126]*(-z[12]*z[157]*z[266]*z[52] + z[85]);
  ar[15] = z[136]*z[229]*z[266]*z[27] + z[150]*z[234]*z[266]*z[29] + z[97];
  ar[16] = -z[126]*(-z[12]*z[178]*z[25]*z[266] - z[157]*z[159]*z[266]*z[29] + z[85]);
  ar[17] = -z[124]*z[160]*z[249]*z[266] + z[125]*z[157]*z[216]*z[257]*z[31] - z[136]*z[150]*z[216]*z[266] - z[136]*z[150]*z[266]*z[31] - z[37] - z[67];
  ar[18] = z[140]*(z[19] + z[82]);
  ar[19] = z[95];
  ar[20] = -z[126]*(z[139]*z[266]*z[66] + z[84]);
  ar[21] = z[95];
  ar[22] = z[172]*z[80];
  ar[23] = z[123]*(z[125]*z[160]*z[249]*z[257]*z[38] - z[133]*z[258] - z[133]*z[28] - z[136]*z[248]*z[266] + z[185]*z[266]*z[52] - z[233]*z[25]*z[266]);
  ar[24] = -z[126]*(z[139]*z[244]*z[266] + z[236]*z[25]*z[266] + z[84]);
  ar[25] = -z[123]*(-z[125]*z[160]*z[249]*z[257]*z[38] + z[133]*z[258] + z[133]*z[28] + z[136]*z[160]*z[25]*z[266] + z[136]*z[248]*z[266] - z[158]*z[220]*z[266] + z[233]*z[25]*z[266]);
  ar[26] = -z[144]*(-z[1]*z[209]*z[266]*z[29] + z[128]*z[216]*z[266] + z[128]*z[258] + z[203] + z[217]*z[230]*z[257] - z[230]*z[266]);
  ar[27] = z[246];
  ar[28] = z[173];
  ar[29] = z[245];
  ar[30] = z[173];
  ar[31] = z[115]*z[169];
  ar[32] = z[181];
  ar[33] = z[245];
  ar[34] = z[181];
  ar[35] = z[246];
  ar[36] = z[116]*z[172];
  ar[37] = z[182];
  ar[38] = z[183];
  ar[39] = z[182];
  ar[40] = z[215];
  ar[41] = z[224];
  ar[42] = z[183];
  ar[43] = z[224];
  ar[44] = z[215];
  ar[45] = -z[126]*(-z[115]*z[213] + z[122]*z[195] + z[82]);
  ar[46] = z[99];
  ar[47] = z[126]*z[266]*(z[123]*z[66] + z[73]);
  ar[48] = z[99];
  ar[49] = z[126]*(z[1]*z[154]*z[266]*z[38] + z[115]*z[213] - z[122]*z[195] - z[123]*z[258] - z[152]*z[257]*z[259] - z[266]*z[295]);
  ar[50] = -z[123]*z[266]*(z[158]*z[52] + z[71]);
  ar[51] = z[126]*z[266]*(z[210]*z[27] - z[214]*z[29] + z[73]);
  ar[52] = -z[123]*z[266]*(z[136]*z[229] - z[185]*z[29] + z[71]);
  ar[53] = z[144]*z[266]*(z[216] + z[217]*z[289] + z[31]);
  ar[54] = 0;
  ar[55] = 0;
  ar[56] = 0;
  ar[57] = 0;
  ar[58] = z[192];
  ar[59] = z[189];
  ar[60] = 0;
  ar[61] = z[189];
  ar[62] = z[192];
  ar[63] = z[240];
  ar[64] = z[196];
  ar[65] = z[238];
  ar[66] = z[196];
  ar[67] = z[139]*z[141]/z[186];
  ar[68] = z[205];
  ar[69] = z[238];
  ar[70] = z[205];
  ar[71] = z[240];
  ar[72] = z[24];
  ar[73] = z[162];
  ar[74] = z[26];
  ar[75] = z[162];
  ar[76] = z[164];
  ar[77] = z[165];
  ar[78] = z[26];
  ar[79] = z[165];
  ar[80] = z[24];
  ar[81] = -z[269]*(z[128]*z[217]*z[293] + z[128]*z[294] + z[201]*z[217]*z[291] - z[201]*z[286] + z[201]*z[292] - z[201] - z[209]*z[264]*z[27]*z[29] - z[213]*z[217]*z[263] + z[213]);
  ar[82] = (-z[10]*z[158]*z[252]*z[263] - z[131]*z[160]*z[27]*z[277] - z[136]*z[160]*z[292] + z[137]*z[244]*z[282]*z[51] - z[140]*z[290]*z[291] + z[178]*z[197]*z[278] + z[90])/z[47];
  ar[83] = -z[267]*(z[122]*z[256] + z[199]*z[252] + z[201]*z[255] - z[211]*z[33] + z[89]);
  ar[84] = (-z[127]*z[199]*z[291]*z[50] - z[127]*z[201]*z[282]*z[29]*z[50] + z[137]*z[278]*z[280] - z[140]*z[280]*z[283] + z[90])/z[47];
  ar[85] = (z[126]*z[263]*z[297]*z[30] + z[129]*z[223]*z[305] - z[133]*z[30]*z[307] + z[137]*z[213]*z[318] + z[137]*z[30]*z[322] - z[137]*z[30] - z[140]*z[27] + z[140]*z[282]*z[309])/z[47];
  ar[86] = (z[127]*z[201]*z[305]*z[54] - z[127]*z[213]*z[305]*z[54] - z[133]*z[296] + z[135]*z[299] + z[137]*z[30]*z[62] + z[140]*z[27]*z[62])/z[48];
  ar[87] = -z[267]*(-z[201]*z[65] + z[213]*z[65] + z[89]);
  ar[88] = -(-z[128]*z[152]*z[212]*z[300]*z[54] + z[133]*z[296] - z[135]*z[299] - z[152]*z[253]*z[278]*z[54] - z[157]*z[30]*z[61] - z[160]*z[27]*z[61])/z[48];
  ar[89] = z[267]*(z[201]*z[263]*z[279] - z[201]*z[64] - z[213]*z[263]*z[279] + z[213]*z[64]);
  ar[90] = -(-z[1]*z[249] - z[1]*z[252] + z[128]*z[152]*z[221]*z[291] - z[128]*z[157]*z[286] + z[128]*z[157]*z[292] - z[217]*z[252]*z[263] + z[217]*z[293]*z[30] - z[228]*z[249]*z[263] - z[278]*z[34])/z[47];
  ar[91] = -z[269]*(z[106] - z[131]*z[251]*z[283] - z[142]*z[178]*z[263]*z[29] + z[178]*z[236]*z[263] - z[234]*z[292]);
  ar[92] = (z[1]*z[250] - z[1]*z[27]*z[29] + z[152]*z[212]*z[301]/z[49] - z[157]*z[199]*z[278] + z[157]*z[211]*z[283] + z[178]*z[27]*z[277] - z[180]*z[27]*z[277] - z[219]*z[27]*z[277] + z[244]*z[262]*z[33]*z[54] - z[244]*z[314] + z[250]*z[292] + z[255]*z[314] + z[277]*z[34])/z[47];
  ar[93] = -z[269]*(-z[10]*z[160]*z[312] + z[106] + z[131]*z[244]*z[283] - z[201]*z[283]*z[53]);
  ar[94] = (-z[128]*z[157]*z[322] + z[129]*z[132]*z[283]*z[50] - 4*z[133]*z[140]*z[305] + z[141]*z[201] + z[141]*z[213] - z[143]*z[150] - z[143]*z[176] - z[143]*z[9] - z[160]*z[263]*z[297] + z[167]*z[30]*z[307] + z[201]*z[283]*z[60] + z[252]*z[322])/z[47];
  ar[95] = z[114];
  ar[96] = -(-z[1]*z[250] + z[1]*z[27]*z[29] - z[128]*z[157]*z[320] - z[152]*z[212]*z[301]/z[49] - z[178]*z[27]*z[277] + z[180]*z[27]*z[277] - z[244]*z[262]*z[33]*z[54] + z[244]*z[314] + z[252]*z[320] - z[255]*z[314] + z[256]*z[283] - z[277]*z[34])/z[47];
  ar[97] = z[114];
  ar[98] = (z[122]*z[128]*z[152]*z[315] - z[128]*z[157]*z[319] + 4*z[128]*z[157] - z[14]*z[151]*z[314] + z[148]*z[271]*z[54] - z[219]*z[314] - z[228]*z[314] + z[252]*z[262]*z[56] + z[252]*z[319] - 4*z[252])/z[47];
  ar[99] = z[25];
  ar[100] = z[168];
  ar[101] = z[27];
  ar[102] = z[168];
  ar[103] = z[170];
  ar[104] = z[171];
  ar[105] = z[27];
  ar[106] = z[171];
  ar[107] = z[25];
  ar[108] = z[243];
  ar[109] = z[261];
  ar[110] = z[242];
  ar[111] = z[261];
  ar[112] = z[243];
  ar[113] = z[241];
  ar[114] = z[242];
  ar[115] = z[241];
  ar[116] = -z[144]*z[36];
  ar[117] = -rear_.R*z[1]*z[133]*z[177]/sqrt(z[12]) - rear_.R*z[146]*z[27]/pow(z[12], 3.0/2.0) - z[1]*z[193] - z[1]*z[200]*z[266]*z[55] + z[120]*z[129]*z[150]*z[266]*z[55] + z[149]*z[174]*z[197] - z[160]*z[317] + z[174]*z[27] - z[185]*z[266]*z[63] + z[208]*z[257]*z[284] - z[208]*z[266]*z[63] - z[70];
  ar[118] = z[113];
  ar[119] = -z[109] + z[185]*z[266]*z[65] + z[198]*z[250]*z[266] + z[208]*z[266]*z[65];
  ar[120] = z[113];
  ar[121] = z[117] - z[124]*z[229]*z[266]*z[38] + z[128]*z[153]*z[257]*z[259] - z[129]*z[154]*z[248]*z[266] + z[134]*z[266]*z[308] - z[139]*z[258]*z[9] - z[141]*z[202] - z[145] + z[150]*z[159]*z[266]*z[58] + z[152]*z[154]*z[25]*z[257]*z[40] - z[193] - z[208]*z[258];
  ar[122] = z[126]*(z[125]*z[198]*z[257]*z[276] - z[134]*z[25]*z[266]*z[52] + z[134]*z[266]*z[272] + z[142]*z[28] - z[152]*z[159]*z[249]*z[257]*z[38] + z[157]*z[247]*z[266] + z[159]*z[266]*z[275] - z[169]*z[258] + z[170]*z[249]*z[266] - z[260]*z[266] + z[288] - z[35]);
  ar[123] = -z[1]*z[198]*z[250]*z[266] - z[109] + z[185]*z[244]*z[266] - z[185]*z[255]*z[266] + z[223]*z[266]*z[31];
  ar[124] = -z[126]*(-z[125]*z[198]*z[257]*z[276] - z[134]*z[266]*z[272] - z[142]*z[28] + z[152]*z[159]*z[249]*z[257]*z[38] - z[157]*z[159]*z[25]*z[266] - z[157]*z[247]*z[266] + z[169]*z[258] - z[169]*z[266]*z[31] + z[179]*z[220]*z[266] + z[260]*z[266] - z[288] + z[35]);
  ar[125] = -z[121]*z[217]*z[257]*z[32] + z[121]*z[266]*z[32] + z[125]*z[160]*z[216]*z[257]*z[31] - z[145] - z[185]*z[266]*z[31] - z[193] + z[208]*z[217]*z[266] - z[70] - z[72];
  ar[126] = -z[137]*(z[123]*z[15] + z[82]);
  ar[127] = z[325];
  ar[128] = -z[126]*(-z[125]*z[209]*z[257]*z[298] + z[128]*z[18] - z[136]*z[266]*z[66] - z[231]*z[266]*z[29] + z[69]);
  ar[129] = z[325];
  ar[130] = -z[171]*z[80];
  ar[131] = -z[123]*(-z[136]*z[266]*z[275] + z[83]);
  ar[132] = z[126]*(z[125]*z[209]*z[257]*z[298] - z[136]*z[255]*z[266] + z[142]*z[15] + z[231]*z[266]*z[29] + z[234]*z[266]*z[29] - z[69]);
  ar[133] = -z[123]*(-z[10]*z[158]*z[25]*z[266] - z[136]*z[160]*z[266]*z[29] + z[83]);
  ar[134] = -z[144]*(z[122]*z[217]*z[257]*z[31] - z[122]*z[258] - z[122]*z[266]*z[31] - z[129]*z[249]*z[266] - z[202] - z[221]*z[266]);
  ar[135] = -z[92];
  ar[136] = z[327];
  ar[137] = z[25]*z[266]*z[65] - z[316] - z[81];
  ar[138] = z[327];
  ar[139] = z[86];
  ar[140] = z[324];
  ar[141] = -z[98];
  ar[142] = z[323];
  ar[143] = -z[79];
  ar[144] = -z[116]*z[171];
  ar[145] = z[21];
  ar[146] = z[184];
  ar[147] = z[21];
  ar[148] = z[226];
  ar[149] = z[225];
  ar[150] = z[184];
  ar[151] = z[225];
  ar[152] = z[226];
  ar[153] = 0;
  ar[154] = 0;
  ar[155] = 0;
  ar[156] = 0;
  ar[157] = 0;
  ar[158] = 0;
  ar[159] = 0;
  ar[160] = 0;
  ar[161] = 0;
  ar[162] = 0;
  ar[163] = 0;
  ar[164] = 0;
  ar[165] = 0;
  ar[166] = z[191];
  ar[167] = z[190];
  ar[168] = 0;
  ar[169] = z[190];
  ar[170] = z[191];
  ar[171] = z[239];
  ar[172] = z[204];
  ar[173] = z[237];
  ar[174] = z[204];
  ar[175] = -z[136]*z[141]/z[186];
  ar[176] = z[206];
  ar[177] = z[237];
  ar[178] = z[206];
  ar[179] = z[239];
  ar[180] = z[29];
  ar[181] = z[167];
  ar[182] = z[30];
  ar[183] = z[167];
  ar[184] = z[169];
  ar[185] = z[166];
  ar[186] = z[30];
  ar[187] = z[166];
  ar[188] = z[29];
  ar[189] = 0;
  ar[190] = 0;
  ar[191] = 0;
  ar[192] = 0;
  ar[193] = 0;
  ar[194] = 0;
  ar[195] = 0;
  ar[196] = 0;
  ar[197] = 0;
  ar[198] = -(z[1]*z[216] - z[10]*z[152]*z[216]*z[291] - z[178]*z[286] + z[178]*z[292] + z[217]*pow(z[27], 3)*z[282] + z[228] + pow(z[27], 3)*z[283] - 5*z[286]*z[33])/z[47];
  ar[199] = (-z[123]*z[27]*z[273] + z[127]*z[131]*z[303] - z[171]*z[294] + z[178]*z[282]*z[290] + z[197]*z[273] + z[290]*z[293] + z[75])/z[47];
  ar[200] = (-z[0]*z[244]*z[292] + z[101] - z[178]*z[244]*z[263] + z[178]*z[255]*z[263] - z[25]*z[294])/z[47];
  ar[201] = (-z[10]*z[152]*z[282]*z[29]*z[50] + z[167]*z[228]*z[277] - z[178]*z[263]*z[280] - z[262]*z[29]*z[34]*z[50] + z[280]*z[292] + z[75])/z[47];
  ar[202] = z[122]*(-z[1]*z[141]*z[27] + z[11]*z[153]*pow(-z[39], -z[1])/z[49] + 4*z[121]*z[178]*z[300] - z[122]*z[147] + z[122]*z[151] - z[122]*z[152]*z[291]*pow(-z[39], -z[1]) + z[131]*z[254]*z[265]*z[27] + z[146]*z[157] + z[178]*z[318] + z[292]*z[60])/z[47];
  ar[203] = z[111];
  ar[204] = (z[101] + z[178]*z[321] + z[228]*z[244]*z[263] + z[292]*z[66])/z[47];
  ar[205] = z[111];
  ar[206] = -(z[10]*z[152]*z[315] + z[128]*z[157]*z[265]*z[54] + z[14]*z[151] + z[148]*z[150] + z[178]*z[319] + z[219] + z[228] - 4*z[252]*z[314] + z[262]*z[33]*z[56] + z[292]*z[64])/z[47];
  ar[207] = z[22];
  ar[208] = z[161];
  ar[209] = z[23];
  ar[210] = z[161];
  ar[211] = z[163];
  ar[212] = z[172];
  ar[213] = z[23];
  ar[214] = z[172];
  ar[215] = z[22];
  ar[216] = front_.c*z[29] - z[1]*z[249]*z[258] - z[1]*z[252]*z[258] - z[1]*z[255]*z[266]*z[55] + z[119] - z[123]*z[141]*z[174] - z[249]*z[257]*z[284] + z[249]*z[266]*z[63] + z[251]*z[266]*z[55];
  ar[217] = z[112];
  ar[218] = -z[1]*z[250]*z[258] + z[1]*z[27]*z[288] - z[194] + z[216]*z[250]*z[266] + z[216]*z[266]*z[55] - z[217]*z[257]*z[302] - z[249]*z[266]*z[66] + z[260]*z[266]*z[27] + z[266]*z[302];
  ar[219] = z[112];
  ar[220] = -z[123]*(z[117]*z[122] - z[124]*z[128]*z[157]*z[258] + z[124]*z[157]*z[266]*z[274] - z[124]*z[160]*z[266]*z[272] + z[125]*z[229]*z[257]*z[29]*z[40] + z[141]*z[174] + z[233]*z[258] - z[235]*z[258] - z[249]*z[266]*z[58]);
  ar[221] = -z[144]*(front_.c*z[7] + z[1]*z[122]*z[288] + z[122]*z[260]*z[266] - z[129]*z[287] - z[211]*z[216]*z[266] - z[249]*z[266]*z[52] + z[77]);
  ar[222] = -z[1]*z[216]*z[250]*z[266] - z[1]*z[250]*z[258] - z[1]*z[260]*z[266]*z[27] + z[1]*z[27]*z[288] - z[194] + z[216]*z[266]*z[55] - z[217]*z[257]*z[302] + z[266]*z[302];
  ar[223] = -z[144]*(-z[129]*z[216]*z[25]*z[266] + z[74] + z[77]);
  ar[224] = z[29]*(front_.c + z[0]*z[266]*z[32] + z[217]*z[25]*z[266] + z[217]*z[257]*z[32] - 4*z[287]);
  ar[225] = -z[126]*(-z[1]*z[201]*z[266]*z[55] - z[120]*z[174] + z[120]*z[28] + z[209]*z[257]*z[284] - z[209]*z[258] - z[209]*z[266]*z[63]);
  ar[226] = z[108];
  ar[227] = z[126]*z[258]*(z[201]*z[249]/z[41] + z[209]*z[65]/z[41] + z[87]);
  ar[228] = z[108];
  ar[229] = z[126]*(-z[118] - z[12]*z[152]*z[209]*z[257]*z[40] + z[120]*z[174] - z[120]*z[28] + z[124]*z[235]*z[266]*z[38] + z[125]*z[128]*z[133]*z[258] - z[136]*z[266]*z[308] + z[143]*z[179]*z[266]*z[38] + z[209]*z[258]);
  ar[230] = z[104] - z[136]*z[160]*z[249]*z[266] + z[136]*z[229]*z[266]*z[52];
  ar[231] = z[126]*z[258]*(-z[1]*z[201]*z[249]/z[41] - z[212]*z[289] + z[87]);
  ar[232] = z[10]*z[158]*z[266]*z[31] + z[104] - z[124]*z[157]*z[199]*z[25]*z[266];
  ar[233] = -z[126]*(z[1]*z[209]*z[258] + z[118] - z[122]*z[217]*z[257]*z[32] + z[122]*z[266]*z[32] + z[129]*z[260]*z[266] - z[129]*z[288] + z[209]*z[217]*z[266]);
  ar[234] = -z[121]*z[19] + z[129]*z[266]*z[30]*z[55] - z[211]*z[257]*z[284] + z[211]*z[258] + z[211]*z[266]*z[63];
  ar[235] = -z[126]*(z[120]*z[14]*z[258] - z[123]*z[266]*z[285] + z[125]*z[211]*z[257]*z[311] - z[139]*z[266]*z[30]*z[38] + z[18] - z[211]*z[266]*z[59]);
  ar[236] = z[258]*(z[199]*z[250]/z[41] + z[211]*z[66]/z[41] + z[88]);
  ar[237] = z[126]*(-z[120]*z[14]*z[258] - z[120]*z[15] + z[123]*z[266]*z[285] - z[125]*z[211]*z[257]*z[311] + z[139]*z[266]*z[30]*z[38] + z[211]*z[266]*z[59]);
  ar[238] = z[123]*(-z[121]*z[14]*z[258] - z[121]*z[28] + z[124]*z[180]*z[266]*z[38] + z[125]*z[160]*z[25]*z[257]*z[40] + z[211]*z[266]*z[58]);
  ar[239] = -z[144]*z[258]*(z[211]*z[52]/z[41] - z[220]*z[281] + z[78]);
  ar[240] = z[258]*(z[129]*z[244]*z[281] - z[213]*z[289] + z[88]);
  ar[241] = -z[144]*z[258]*(z[1]*z[14]*z[249]/z[41] - z[122]*z[230]/z[41] + z[78]);
  ar[242] = z[128]*z[217]*z[257]*z[32] - z[128]*z[266]*z[32] - z[211]*z[217]*z[266] - z[74];
  ar[243] = 0;
  ar[244] = 0;
  ar[245] = 0;
  ar[246] = 0;
  ar[247] = 0;
  ar[248] = 0;
  ar[249] = 0;
  ar[250] = 0;
  ar[251] = 0;
  ar[252] = -z[116]*z[134];
  ar[253] = z[17];
  ar[254] = 0;
  ar[255] = z[17];
  ar[256] = z[134]*z[20];
  ar[257] = 0;
  ar[258] = 0;
  ar[259] = 0;
  ar[260] = 0;
  ar[261] = z[92];
  ar[262] = z[100];
  ar[263] = -z[25]*z[266]*z[66] + z[316] + z[81];
  ar[264] = z[100];
  ar[265] = -z[86];
  ar[266] = -z[324];
  ar[267] = z[98];
  ar[268] = -z[323];
  ar[269] = z[79];
  ar[270] = 0;
  ar[271] = 0;
  ar[272] = 0;
  ar[273] = 0;
  ar[274] = -z[134]/z[186];
  ar[275] = 0;
  ar[276] = 0;
  ar[277] = 0;
  ar[278] = 0;
  ar[279] = z[188];
  ar[280] = z[187];
  ar[281] = 0;
  ar[282] = z[187];
  ar[283] = z[188];
  ar[284] = 0;
  ar[285] = 0;
  ar[286] = 0;
  ar[287] = 0;
  ar[288] = z[144];
  ar[289] = z[130];
  ar[290] = 0;
  ar[291] = z[130];
  ar[292] = z[144];
  ar[293] = 0;
  ar[294] = 0;
  ar[295] = 0;
  ar[296] = 0;
  ar[297] = -(z[121]*z[217]*z[293] + z[121]*z[294] + z[124]*z[310] - z[131]*z[150] + z[131]*z[152]*z[216]*z[291] - z[131]*z[216]*z[271] - z[131]*z[271]*z[33] + z[217]*z[223]*z[263] - z[223])/z[47];
  ar[298] = -z[269]*(z[10]*z[158]*z[222]*z[263] + z[10]*z[176]*z[277] - z[169]*z[292] + z[96]);
  ar[299] = -(z[102] - z[131]*z[229]*z[283] + z[131]*z[244]*z[271] + z[198]*z[252]*z[264] - z[208]*z[292])/z[47];
  ar[300] = -z[269]*(z[120]*z[178]*z[312] - z[133]*z[283]*z[53] - z[212]*z[232]*z[263] + z[96]);
  ar[301] = (-z[120]*z[178]*z[318] - z[126]*z[27]*z[307] - z[131]*z[150]*z[322] + z[131]*z[9] + z[133]*z[283]*z[60] + z[137]*z[141]*z[307] - z[223]*z[322] + z[223])/z[47];
  ar[302] = (z[105] - z[131]*z[152]*z[304]*z[54] + z[223]*z[262]*z[50]*z[54])/z[47];
  ar[303] = -(z[102] + z[131]*z[271]*z[65] - z[198]*z[252]*z[263] - z[223]*z[320])/z[47];
  ar[304] = (z[105] + z[131]*z[150]*z[306]*z[54] + z[223]*z[306]*z[54])/z[47];
  ar[305] = (z[120]*z[129]*z[271]*z[54] + z[131]*z[150] + z[131]*z[152]*z[315] + z[131]*z[271]*z[64] - z[200]*z[264]*z[54] - z[223]*z[262]*z[56] - z[223]*z[319] + z[223])/z[47];
  ar[306] = z[269]*(z[1]*z[222] + z[120]*z[217]*z[293] + z[120]*z[294] + z[124]*z[29] + z[124]*z[303] + z[133]*z[217]*z[291] - z[133]*z[286] + z[133]*z[292] + z[217]*z[222]*z[263]);
  ar[307] = -(z[107] - z[131]*z[158]*z[292] - z[134]*z[178]*z[263]*z[27] - z[146]*z[310] + z[178]*z[232]*z[263])/z[47];
  ar[308] = z[269]*(z[103] + z[133]*z[244]*z[263] + z[197]*z[252]*z[264] - z[207]*z[292] - z[235]*z[283]);
  ar[309] = -(z[107] + z[121]*z[178]*z[312] + z[131]*z[27]*z[271]*z[53] + z[157]*z[27]*z[270]*z[29])/z[47];
  ar[310] = (-z[121]*z[268]*z[297] + z[122]*z[147]*z[305] - z[122]*z[151]*z[305] - z[126]*z[133]*z[306]*z[50] + 4*z[126]*z[133] + z[127]*z[133]*z[8] + z[132]*z[27] - z[132]*z[282]*z[309] - z[141]*z[27]*z[307] - z[146]*z[157]*z[305] + z[167]*z[283]*z[60])/z[47];
  ar[311] = -(-z[121]*z[152]*z[253]*z[313] + z[131]*z[152]*z[282]*z[39]*z[54] + z[131]*z[254]*z[278] - z[133]*z[160]*z[300] - z[133]*z[271]*z[61] - z[141]*z[283]*z[54] - z[141]*z[30] - z[155]*z[314] + z[156] - z[157]*z[270]*z[54] + z[157]*z[314] + z[160]*z[8] - z[160] - z[222]*z[271]*z[61])/z[47];
  ar[312] = z[269]*(z[103] - z[133]*z[321] - z[197]*z[252]*z[263] - z[222]*z[321]);
  ar[313] = (z[126]*z[133]*z[313]*z[51] - z[132]*z[278]*z[50] + z[132]*z[282]*z[51]*z[54] - z[132]*z[283]*z[62] + z[133]*z[268]*z[62] + z[135]*z[268]*z[50] + z[141]*z[283]*z[54] + z[141]*z[30] + z[155]*z[314] - z[156] + z[157]*z[270]*z[54] - z[157]*z[314] - z[160]*z[8] + z[160])/z[47];
  ar[314] = -z[269]*(z[120]*z[264]*z[296] - z[121]*z[129]*z[314] - z[133]*z[262]*z[56] - z[133]*z[319] - z[222]*z[262]*z[56] - z[222]*z[319] - z[39]);
  ar[315] = z[138];
  ar[316] = z[141];
  ar[317] = 0;
  ar[318] = z[141];
  ar[319] = z[138];
  ar[320] = 0;
  ar[321] = 0;
  ar[322] = 0;
  ar[323] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (8)
 *
 * @param[out] a C-array of with 8 elements
 */
//  void Bicycle::f_1(double ar[8]) const;
void Bicycle::f_1(double ar[8]) const
{
  double * z = new double[13];

  z[0] = sin(state_[0]);
  z[1] = sin(state_[1]);
  z[2] = cos(state_[0]);
  z[3] = cos(state_[1]);
  z[4] = state_[10] + state_[12];
  z[5] = pow(z[1], 2);
  z[6] = sqrt(pow(z[3], 2));
  z[7] = rear_.R/z[6] + rear_.r;
  z[8] = z[1]*(rear_.R*state_[9]*z[1]/z[6] - state_[9]*z[1]*z[7]) - z[3]*(rear_.R*state_[9]*z[5]/(z[3]*z[6]) + state_[9]*z[3]*z[7]);
  z[9] = -state_[9];
  z[10] = rear_.R/z[6];
  z[11] = z[3]*z[7];
  z[12] = -z[3]*z[9]*(z[3] + z[5]/z[3]);

  ar[0] = -state_[8];
  ar[1] = z[9];
  ar[2] = -state_[10];
  ar[3] = -state_[11];
  ar[4] = -state_[12];
  ar[5] = -state_[13];
  ar[6] = -z[0]*z[10]*z[12] - z[0]*z[8] + z[11]*z[2]*z[4];
  ar[7] = z[0]*z[11]*z[4] + z[10]*z[12]*z[2] + z[2]*z[8];

  delete [] z;
}

/** Computes the n-d array of shape (8, 8)
 *
 * @param[out] a C-array of with 64 elements
 */
//  void Bicycle::f_1_dq(double ar[64]) const;
void Bicycle::f_1_dq(double ar[64]) const
{
  double * z = new double[22];

  z[0] = sin(state_[0]);
  z[1] = sin(state_[1]);
  z[2] = cos(state_[1]);
  z[3] = state_[10] + state_[12];
  z[4] = pow(z[1], 2);
  z[5] = pow(z[2], 2);
  z[6] = sqrt(z[5]);
  z[7] = z[4]/z[5] + 1;
  z[8] = z[2] + z[4]/z[2];
  z[9] = -rear_.R/z[6] - rear_.r;
  z[10] = rear_.R*state_[9]*z[1]/z[6] + state_[9]*z[1]*z[9];
  z[11] = rear_.R*state_[9]*z[4]/(z[2]*z[6]) - state_[9]*z[2]*z[9];
  z[12] = z[1]*z[10] - z[11]*z[2];
  z[13] = z[1]*z[11] + z[1]*(rear_.R*state_[9]*z[2]/z[6] + state_[9]*z[2]*z[9]) + z[10]*z[2] - z[2]*(2*rear_.R*state_[9]*pow(z[1], 3)/pow(z[5], 3.0/2.0) + 3*rear_.R*state_[9]*z[1]/z[6] + state_[9]*z[1]*z[9]);
  z[14] = state_[9]*z[1];
  z[15] = state_[9]*z[2];
  z[16] = -cos(state_[0]);
  z[17] = -z[2];
  z[18] = z[1]*z[3];
  z[19] = -z[17]*z[3];
  z[20] = rear_.R/z[6];
  z[21] = z[0]*z[8];

  ar[0] = 0;
  ar[1] = 0;
  ar[2] = 0;
  ar[3] = 0;
  ar[4] = 0;
  ar[5] = 0;
  ar[6] = 0;
  ar[7] = 0;
  ar[8] = 0;
  ar[9] = 0;
  ar[10] = 0;
  ar[11] = 0;
  ar[12] = 0;
  ar[13] = 0;
  ar[14] = 0;
  ar[15] = 0;
  ar[16] = 0;
  ar[17] = 0;
  ar[18] = 0;
  ar[19] = 0;
  ar[20] = 0;
  ar[21] = 0;
  ar[22] = 0;
  ar[23] = 0;
  ar[24] = 0;
  ar[25] = 0;
  ar[26] = 0;
  ar[27] = 0;
  ar[28] = 0;
  ar[29] = 0;
  ar[30] = 0;
  ar[31] = 0;
  ar[32] = 0;
  ar[33] = 0;
  ar[34] = 0;
  ar[35] = 0;
  ar[36] = 0;
  ar[37] = 0;
  ar[38] = 0;
  ar[39] = 0;
  ar[40] = 0;
  ar[41] = 0;
  ar[42] = 0;
  ar[43] = 0;
  ar[44] = 0;
  ar[45] = 0;
  ar[46] = 0;
  ar[47] = 0;
  ar[48] = z[0]*z[19]*z[9] + z[12]*z[16] + z[15]*z[16]*z[20]*z[8];
  ar[49] = -z[0]*z[13] + 2*z[0]*z[14]*z[17]*z[20]*z[7] + z[14]*z[20]*z[21] - z[16]*z[18]*z[20] - z[16]*z[18]*z[9];
  ar[50] = 0;
  ar[51] = 0;
  ar[52] = 0;
  ar[53] = 0;
  ar[54] = 0;
  ar[55] = 0;
  ar[56] = -z[0]*z[12] - z[15]*z[20]*z[21] + z[16]*z[19]*z[9];
  ar[57] = z[0]*z[18]*z[20] + z[0]*z[18]*z[9] - z[13]*z[16] + 2*z[14]*z[16]*z[17]*z[20]*z[7] + z[14]*z[16]*z[20]*z[8];
  ar[58] = 0;
  ar[59] = 0;
  ar[60] = 0;
  ar[61] = 0;
  ar[62] = 0;
  ar[63] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (8, 12)
 *
 * @param[out] a C-array of with 96 elements
 */
//  void Bicycle::f_1_du(double ar[96]) const;
void Bicycle::f_1_du(double ar[96]) const
{
  double * z = new double[11];

  z[0] = sin(state_[0]);
  z[1] = sin(state_[1]);
  z[2] = cos(state_[0]);
  z[3] = cos(state_[1]);
  z[4] = pow(z[1], 2);
  z[5] = sqrt(pow(z[3], 2));
  z[6] = rear_.R/z[5] + rear_.r;
  z[7] = rear_.R*z[3]*(z[3] + z[4]/z[3])/z[5] + z[1]*(rear_.R*z[1]/z[5] - z[1]*z[6]) - z[3]*(rear_.R*z[4]/(z[3]*z[5]) + z[3]*z[6]);
  z[8] = z[3]*z[6];
  z[9] = z[0]*z[8];
  z[10] = z[2]*z[8];

  ar[0] = -1;
  ar[1] = 0;
  ar[2] = 0;
  ar[3] = 0;
  ar[4] = 0;
  ar[5] = 0;
  ar[6] = 0;
  ar[7] = 0;
  ar[8] = 0;
  ar[9] = 0;
  ar[10] = 0;
  ar[11] = 0;
  ar[12] = 0;
  ar[13] = -1;
  ar[14] = 0;
  ar[15] = 0;
  ar[16] = 0;
  ar[17] = 0;
  ar[18] = 0;
  ar[19] = 0;
  ar[20] = 0;
  ar[21] = 0;
  ar[22] = 0;
  ar[23] = 0;
  ar[24] = 0;
  ar[25] = 0;
  ar[26] = -1;
  ar[27] = 0;
  ar[28] = 0;
  ar[29] = 0;
  ar[30] = 0;
  ar[31] = 0;
  ar[32] = 0;
  ar[33] = 0;
  ar[34] = 0;
  ar[35] = 0;
  ar[36] = 0;
  ar[37] = 0;
  ar[38] = 0;
  ar[39] = -1;
  ar[40] = 0;
  ar[41] = 0;
  ar[42] = 0;
  ar[43] = 0;
  ar[44] = 0;
  ar[45] = 0;
  ar[46] = 0;
  ar[47] = 0;
  ar[48] = 0;
  ar[49] = 0;
  ar[50] = 0;
  ar[51] = 0;
  ar[52] = -1;
  ar[53] = 0;
  ar[54] = 0;
  ar[55] = 0;
  ar[56] = 0;
  ar[57] = 0;
  ar[58] = 0;
  ar[59] = 0;
  ar[60] = 0;
  ar[61] = 0;
  ar[62] = 0;
  ar[63] = 0;
  ar[64] = 0;
  ar[65] = -1;
  ar[66] = 0;
  ar[67] = 0;
  ar[68] = 0;
  ar[69] = 0;
  ar[70] = 0;
  ar[71] = 0;
  ar[72] = 0;
  ar[73] = -z[0]*z[7];
  ar[74] = z[10];
  ar[75] = 0;
  ar[76] = z[10];
  ar[77] = 0;
  ar[78] = 0;
  ar[79] = 0;
  ar[80] = 0;
  ar[81] = 0;
  ar[82] = 0;
  ar[83] = 0;
  ar[84] = 0;
  ar[85] = z[2]*z[7];
  ar[86] = z[9];
  ar[87] = 0;
  ar[88] = z[9];
  ar[89] = 0;
  ar[90] = 0;
  ar[91] = 0;
  ar[92] = 0;
  ar[93] = 0;
  ar[94] = 0;
  ar[95] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (12, 12)
 *
 * @param[out] a C-array of with 144 elements
 */
//  void Bicycle::gif_dud(double ar[144]) const;
void Bicycle::gif_dud(double ar[144]) const
{
  double * z = new double[154];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = pow(front_.r, 2);
  z[7] = pow(z[0], 2);
  z[8] = pow(z[1], 2);
  z[9] = pow(z[2], 2);
  z[10] = pow(z[3], 2);
  z[11] = pow(z[4], 2);
  z[12] = sqrt(z[10]);
  z[13] = rear_.Ixx*z[4] + rear_.Ixz*z[1];
  z[14] = rear_.Ixz*z[4] + rear_.Izz*z[1];
  z[15] = rear_.a*z[4] + rear_.b*z[1];
  z[16] = rear_.Ixx*z[1] - rear_.Ixz*z[4];
  z[17] = rear_.Ixz*z[1] - rear_.Izz*z[4];
  z[18] = rear_.R/z[12] + rear_.r;
  z[19] = rear_.a*z[1] - rear_.b*z[4];
  z[20] = front_.Ixx*z[4]*z[5] + front_.Ixz*z[1];
  z[21] = front_.Ixz*z[4]*z[5] + front_.Izz*z[1];
  z[22] = pow(z[18], 2);
  z[23] = -z[18];
  z[24] = z[0]*z[5] + z[1]*z[2]*z[3];
  z[25] = rear_.a*z[3]*z[4] + rear_.b*z[1]*z[3];
  z[26] = z[0]*z[1]*z[5] + z[2]*z[3];
  z[27] = -z[0]*z[2] + z[1]*z[3]*z[5];
  z[28] = -z[27];
  z[29] = -z[0]*z[1]*z[2] + z[3]*z[5];
  z[30] = -z[29];
  z[31] = rear_.R*z[1]*z[3]/z[12] + rear_.a;
  z[32] = rear_.R*z[3]*z[4]/z[12] - rear_.b;
  z[33] = rear_.R*z[0]*z[1]*z[3]/z[12] + rear_.a*z[0];
  z[34] = rear_.R*z[0]*z[3]*z[4]/z[12] - rear_.b*z[0];
  z[35] = front_.Iyy*z[24]*z[5] + rear_.Iyy*z[0];
  z[36] = front_.Ixx*z[28] + front_.Ixz*z[3]*z[4];
  z[37] = front_.Ixz*z[28] + front_.Izz*z[3]*z[4];
  z[38] = z[19] - z[23]*z[3];
  z[39] = z[0]*z[30] - z[1]*z[2];
  z[40] = front_.a*z[3]*z[4] - front_.b*z[28];
  z[41] = z[1]*z[28] - z[11]*z[3]*z[5];
  z[42] = front_.r*z[0]*z[11]*z[5] + front_.r*z[1]*z[26];
  z[43] = front_.r*z[11]*z[9] + front_.r*pow(z[30], 2);
  z[44] = -z[0]*z[11]*z[2] - z[1]*z[30];
  z[45] = -front_.r*z[0]*z[11]*z[2] - front_.r*z[1]*z[30];
  z[46] = z[0]*z[28] + z[26]*z[3];
  z[47] = z[2]*z[26] - z[30]*z[5];
  z[48] = z[1]*z[31] + z[32]*z[4];
  z[49] = front_.R*z[3]*z[4]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.b;
  z[50] = -rear_.J + rear_.m*z[23]*z[3]*z[38];
  z[51] = -front_.r*z[2]*z[26]*z[4] + front_.r*z[30]*z[4]*z[5];
  z[52] = front_.R*z[2]*z[3]*z[4]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.b*z[2];
  z[53] = front_.R*z[3]*z[4]*z[5]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.b*z[5];
  z[54] = rear_.a*z[33] - rear_.b*z[34];
  z[55] = front_.R*z[11]*z[2]*z[3]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.b*z[2]*z[4];
  z[56] = -z[1]*z[33] - z[34]*z[4];
  z[57] = front_.R*z[28]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.a;
  z[58] = front_.R*z[28]*z[5]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.a*z[5];
  z[59] = front_.R*z[2]*z[28]*z[4]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.a*z[2]*z[4];
  z[60] = front_.R*z[24]*z[3]*z[4]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.b*z[24];
  z[61] = -(z[11]*z[2]*z[5] + z[26]*z[30])/sqrt(z[11]*z[9] + pow(z[30], 2));
  z[62] = front_.R*z[24]*z[28]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.a*z[24];
  z[63] = front_.R*z[1]*z[28]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.R*z[11]*z[3]*z[5]/sqrt(z[10]*z[11] + pow(z[28], 2));
  z[64] = rear_.R*z[0]*z[1]*z[34]/z[12] - rear_.R*z[0]*z[33]*z[4]/z[12] + z[19]*z[25];
  z[65] = front_.R*z[0]*z[28]*z[4]/sqrt(z[10]*z[11] + pow(z[28], 2)) + front_.R*z[26]*z[3]*z[4]/sqrt(z[10]*z[11] + pow(z[28], 2));
  z[66] = -front_.a*z[1] + front_.b*z[4]*z[5] + z[63];
  z[67] = z[1]*z[58] - z[2]*z[4]*z[52] - z[4]*z[5]*z[53];
  z[68] = -front_.r*z[2]*z[3]*z[4]*z[57] - z[0]*z[3]*z[4]*z[6] - z[52]*z[57];
  z[69] = -z[0]*z[4]*z[58] - z[26]*z[53] - z[30]*z[52];
  z[70] = z[1]*z[62] - z[2]*z[4]*z[40] - z[4]*z[5]*z[60];
  z[71] = front_.R*z[28]*z[59]/sqrt(z[10]*z[11] + pow(z[28], 2)) + front_.R*z[3]*z[4]*z[55]/sqrt(z[10]*z[11] + pow(z[28], 2)) + z[2]*z[4]*z[6];
  z[72] = front_.R*z[28]*z[58]/sqrt(z[10]*z[11] + pow(z[28], 2)) + front_.R*z[3]*z[4]*z[53]/sqrt(z[10]*z[11] + pow(z[28], 2)) - z[3]*z[30]*z[6];
  z[73] = -z[0]*z[4]*z[62] - z[26]*z[60] - z[30]*z[40];
  z[74] = -z[1]*z[59] + z[2]*z[4]*z[66] + z[4]*z[5]*z[55];
  z[75] = front_.R*z[28]*z[62]/sqrt(z[10]*z[11] + pow(z[28], 2)) + front_.R*z[3]*z[4]*z[60]/sqrt(z[10]*z[11] + pow(z[28], 2));
  z[76] = front_.r*z[30]*z[57] + z[1]*z[6] + z[57]*z[66];
  z[77] = z[0]*z[4]*z[59] + z[26]*z[55] + z[30]*z[66];
  z[78] = z[40]*z[52] + z[53]*z[60] + z[58]*z[62];
  z[79] = z[52]*z[66] + z[53]*z[55] + z[58]*z[59];
  z[80] = -rear_.b;
  z[81] = -front_.m;
  z[82] = -rear_.m;
  z[83] = -front_.r;
  z[84] = front_.Ixz*z[2];
  z[85] = front_.Iyy*z[2];
  z[86] = front_.J*z[5];
  z[87] = rear_.J*z[0];
  z[88] = rear_.a*z[0];
  z[89] = rear_.a*z[4];
  z[90] = -z[1]*z[80];
  z[91] = -z[4]*z[83];
  z[92] = -z[1];
  z[93] = -z[2];
  z[94] = -z[4];
  z[95] = -z[0]*z[93];
  z[96] = z[0]*z[3];
  z[97] = z[92]*z[93];
  z[98] = -z[3]*z[92];
  z[99] = -z[3]*z[93];
  z[100] = z[93]*z[94];
  z[101] = -z[3]*z[94];
  z[102] = z[3]*z[5];
  z[103] = -z[5]*z[94];
  z[104] = rear_.R/z[3];
  z[105] = -z[11]*z[83];
  z[106] = front_.J*z[100];
  z[107] = -z[11];
  z[108] = -z[107]*z[3];
  z[109] = rear_.R/z[12];
  z[110] = pow(rear_.R, 2)/z[10];
  z[111] = z[103]*z[85];
  z[112] = -1/z[12];
  z[113] = -z[112]*z[3];
  z[114] = z[7]*z[8];
  z[115] = -z[107]*z[7];
  z[116] = -z[107]*z[9];
  z[117] = -z[10]*z[107];
  z[118] = -z[23]*z[3];
  z[119] = z[19]*z[3];
  z[120] = -z[15]*z[3]*z[82];
  z[121] = front_.J*z[24];
  z[122] = -z[26]*z[83];
  z[123] = -z[30]*z[83];
  z[124] = z[10]*z[22];
  z[125] = -z[123]*z[3];
  z[126] = z[0]*z[33];
  z[127] = z[12]*z[23]*z[82];
  z[128] = -z[112]*z[15]*z[82]*z[96];
  z[129] = z[0]*z[34];
  z[130] = z[118]*z[19];
  z[131] = front_.R/sqrt(z[117] + pow(z[28], 2));
  z[132] = -z[94]/sqrt(z[116] + pow(z[30], 2));
  z[133] = pow(front_.R, 2)/(z[117] + pow(z[28], 2));
  z[134] = -z[113]*z[38]*z[82];
  z[135] = -z[49]*z[93];
  z[136] = z[0]*z[82]*(z[108]*z[109] + z[109]*z[3]*z[8] + z[19]);
  z[137] = z[39]/sqrt(z[116] + pow(z[30], 2));
  z[138] = -z[107]*z[57];
  z[139] = z[82]*z[96]*(z[15] + z[31]*z[94] - z[32]*z[92]);
  z[140] = -z[137]*z[81]*z[91];
  z[141] = -z[24]*z[57]*z[81];
  z[142] = z[113]*z[82]*(z[10]*z[15] - z[31]*z[7]*z[94] + z[32]*z[7]*z[92]);
  z[143] = z[47]*z[49];
  z[144] = -z[40]*z[57];
  z[145] = -z[49]*z[61];
  z[146] = z[40]*z[66];
  z[147] = z[59]*z[62];
  z[148] = z[24]*z[81]*(z[101]*z[57] - z[28]*z[49] + z[40]);
  z[149] = z[81]*(z[101]*z[5]*z[57] + z[135]*z[24] - z[28]*z[49]*z[5]);
  z[150] = -z[69]*z[83];
  z[151] = -z[73]*z[83];
  z[152] = z[81]*(z[100]*z[28]*z[49] - z[138]*z[99] - z[24]*z[66]);
  z[153] = -z[77]*z[83];

  ar[0] = -front_.Iyy*pow(z[24], 2) - rear_.Iyy*z[7] + z[10]*z[16]*z[92] - z[10]*z[17]*z[94] - z[101]*z[37] - z[28]*z[36] + z[81]*(pow(z[40], 2) + pow(z[60], 2) + pow(z[62], 2)) + z[82]*(pow(z[25], 2) + pow(z[33], 2) + pow(z[34], 2));
  ar[1] = -z[101]*z[14] - z[101]*z[21] + z[13]*z[98] - z[20]*z[28] - z[24]*z[85]*z[94] + z[81]*(-z[146] - z[147] + z[151] - z[55]*z[60]) + z[82]*(-z[23]*(-z[126]*z[94] + z[129]*z[92] + z[25]*z[3]) + z[64]);
  ar[2] = front_.Ixx*z[28]*z[93] - z[101]*z[84] - z[35] + z[81]*(z[3]*z[70]*z[83] + z[78]) + z[82]*(-z[118]*z[56] + z[54]);
  ar[3] = -z[37] + z[81]*(z[0]*z[70]*z[91] + z[144] - z[151]*z[92]);
  ar[4] = -z[118]*z[56]*z[82] - z[87];
  ar[5] = -z[121] + z[81]*(z[123]*z[70] + z[73]*z[91]*z[93] + z[75]);
  ar[6] = -z[0]*z[113]*z[48]*z[82];
  ar[7] = z[142];
  ar[8] = z[139];
  ar[9] = -z[81]*(-z[100]*z[73] + z[30]*z[70])/sqrt(z[116] + pow(z[30], 2));
  ar[10] = -z[81]*(z[100]*z[70] + z[30]*z[73])/sqrt(z[116] + pow(z[30], 2));
  ar[11] = z[148];
  ar[12] = z[101]*z[16] - z[103]*z[36] + z[17]*z[98] - z[24]*z[85]*z[94] + z[37]*z[92] + z[81]*(-z[0]*z[62]*z[91] - z[122]*z[60] - z[123]*z[40] - z[146] - z[147] - z[55]*z[60]) + z[82]*(z[118]*z[25] + z[126]*z[23]*z[94] - z[129]*z[23]*z[92] + z[64]);
  ar[13] = -front_.Iyy*z[116] - z[103]*z[20] + z[13]*z[94] + z[14]*z[92] + z[21]*z[92] + z[81]*(z[0]*z[59]*z[91] + z[122]*z[55] + z[123]*z[66] + z[153] + pow(z[55], 2) + pow(z[59], 2) + z[6] + pow(z[66], 2)) + z[82]*(z[109]*z[114]*z[23] + z[109]*z[115]*z[23] + z[110]*z[114] + z[110]*z[115] + z[130] + pow(z[19], 2) + z[22] + z[23]*(z[109]*z[114] + z[109]*z[115] - z[119]));
  ar[14] = -front_.Ixx*z[100]*z[5] + front_.Ixz*z[1]*z[93] - z[0]*z[82]*(z[109]*z[89] + z[109]*z[90] + z[23]*z[89] + z[23]*z[90]) + z[111] + z[81]*(-z[0]*z[58]*z[91] - z[122]*z[53] - z[123]*z[52] + z[3]*z[74]*z[83] - z[79]);
  ar[15] = -z[21] + z[81]*(z[0]*z[74]*z[91] - z[153]*z[92] + z[76]);
  ar[16] = 0;
  ar[17] = z[106] + z[81]*(-z[0]*z[131]*z[28]*z[91] + z[123]*z[74] - z[131]*z[26]*z[3]*z[91] - z[71] + z[77]*z[91]*z[93]);
  ar[18] = 0;
  ar[19] = z[113]*z[82]*(-z[109]*z[114] - z[109]*z[115] + z[119] - z[23]);
  ar[20] = z[136];
  ar[21] = z[81]*(z[100]*z[77] - z[30]*z[74] - z[91]*z[93])/sqrt(z[116] + pow(z[30], 2));
  ar[22] = -z[81]*(z[100]*z[74] + z[123] + z[30]*z[77])/sqrt(z[116] + pow(z[30], 2));
  ar[23] = z[152];
  ar[24] = -z[35] + z[36]*z[93] + z[81]*(z[102]*z[60]*z[91] + z[40]*z[91]*z[99] + z[62]*z[83]*z[98] + z[78]) + z[82]*(-z[101]*z[23]*z[34] - z[23]*z[33]*z[98] + z[54]);
  ar[25] = z[111] + z[20]*z[93] + z[81]*(-z[102]*z[55]*z[91] + z[150] - z[59]*z[83]*z[98] - z[66]*z[91]*z[99] - z[79]) - z[82]*(z[0]*z[109]*z[90] - z[109]*z[88]*z[94] + z[23]*(z[0]*z[90] - z[88]*z[94]));
  ar[26] = -front_.Ixx*z[9] - front_.Iyy*pow(z[5], 2) - rear_.Iyy + z[81]*(z[10]*z[6] + z[102]*z[53]*z[91] + z[3]*z[67]*z[83] + pow(z[52], 2) + z[52]*z[91]*z[99] + pow(z[53], 2) + pow(z[58], 2) + z[58]*z[83]*z[98]) + z[82]*(pow(rear_.a, 2) + rear_.a*z[1]*z[118] - z[118]*z[80]*z[94] + z[124] + z[130] + pow(z[80], 2));
  ar[27] = z[81]*(z[0]*z[67]*z[91] - z[150]*z[92] + z[68]) - z[84];
  ar[28] = z[50];
  ar[29] = z[81]*(z[10]*z[105]*z[131]*z[5] + z[123]*z[67] + z[131]*z[28]*z[83]*z[98] + z[69]*z[91]*z[93] + z[72]) - z[86];
  ar[30] = z[134];
  ar[31] = z[128];
  ar[32] = z[120];
  ar[33] = -z[81]*(-z[100]*z[69] + z[125] + z[30]*z[67])/sqrt(z[116] + pow(z[30], 2));
  ar[34] = z[81]*(-z[100]*z[67] - z[30]*z[69] + z[91]*z[99])/sqrt(z[116] + pow(z[30], 2));
  ar[35] = z[149];
  ar[36] = -z[37] + z[81]*(z[144] + z[40]*z[45] - z[42]*z[60]);
  ar[37] = -z[21] + z[81]*(z[42]*z[55] - z[45]*z[66] + z[76]);
  ar[38] = z[81]*(-z[42]*z[53] + z[45]*z[52] + z[68]) - z[84];
  ar[39] = -front_.Izz + z[81]*(z[105]*z[57]*z[95] + z[115]*z[6] - z[123]*z[57]*z[92] - z[45]*z[57] + pow(z[57], 2) + z[6]*z[8]);
  ar[40] = 0;
  ar[41] = -z[81]*z[91]*(-z[0]*z[123] + z[131]*z[3]*(-z[0]*z[107]*z[5] - z[26]*z[92]) - z[83]*z[97]);
  ar[42] = 0;
  ar[43] = 0;
  ar[44] = 0;
  ar[45] = z[140];
  ar[46] = -z[81]*(z[116]*z[57] + pow(z[30], 2)*z[57] - z[45])/sqrt(z[116] + pow(z[30], 2));
  ar[47] = z[141];
  ar[48] = -z[118]*z[56]*z[82] - z[87];
  ar[49] = 0;
  ar[50] = z[50];
  ar[51] = 0;
  ar[52] = -rear_.J + z[124]*z[82];
  ar[53] = 0;
  ar[54] = z[127];
  ar[55] = 0;
  ar[56] = 0;
  ar[57] = 0;
  ar[58] = 0;
  ar[59] = 0;
  ar[60] = -z[121] + z[81]*(-z[45]*z[62] - z[51]*z[60] + z[75]);
  ar[61] = z[106] + z[81]*(z[45]*z[59] + z[51]*z[55] + z[65]*z[83] - z[71]);
  ar[62] = z[81]*(z[3]*z[63]*z[83] - z[45]*z[58] - z[51]*z[53] + z[72]) - z[86];
  ar[63] = z[81]*z[91]*(z[0]*z[123] + z[0]*z[131]*z[41] + z[131]*z[46]*z[92] + z[83]*z[97]);
  ar[64] = 0;
  ar[65] = -front_.J + z[81]*(-z[101]*z[131]*z[51] + z[116]*z[6] + z[117]*z[133] + z[123]*z[63] - z[131]*z[28]*z[45] + z[133]*pow(z[28], 2) + pow(z[30], 2)*z[6] - z[65]*z[91]*z[93]);
  ar[66] = 0;
  ar[67] = 0;
  ar[68] = 0;
  ar[69] = -z[81]*(z[107]*z[131]*z[46]*z[93] + z[131]*z[30]*z[41] + z[43])/sqrt(z[116] + pow(z[30], 2));
  ar[70] = z[131]*z[132]*z[81]*(z[30]*z[46] + z[41]*z[93]);
  ar[71] = 0;
  ar[72] = z[112]*z[48]*z[82]*z[96];
  ar[73] = 0;
  ar[74] = z[134];
  ar[75] = 0;
  ar[76] = z[127];
  ar[77] = 0;
  ar[78] = z[82];
  ar[79] = 0;
  ar[80] = 0;
  ar[81] = 0;
  ar[82] = 0;
  ar[83] = 0;
  ar[84] = z[142];
  ar[85] = -z[82]*(z[104]*z[114] + z[104]*z[115] + z[113]*z[23] - z[12]*z[19]);
  ar[86] = z[128];
  ar[87] = 0;
  ar[88] = 0;
  ar[89] = 0;
  ar[90] = 0;
  ar[91] = z[82];
  ar[92] = 0;
  ar[93] = 0;
  ar[94] = 0;
  ar[95] = 0;
  ar[96] = z[139];
  ar[97] = z[136];
  ar[98] = z[120];
  ar[99] = 0;
  ar[100] = 0;
  ar[101] = 0;
  ar[102] = 0;
  ar[103] = 0;
  ar[104] = z[82];
  ar[105] = 0;
  ar[106] = 0;
  ar[107] = 0;
  ar[108] = -z[24]*z[81]*(-z[143]*z[94] - z[44]*z[57])/sqrt(z[116] + pow(z[30], 2));
  ar[109] = z[100]*z[81]*(z[132]*z[47]*z[49] - z[44]*z[57]/sqrt(z[116] + pow(z[30], 2)) - z[83]/sqrt(z[116] + pow(z[30], 2)));
  ar[110] = -z[81]*(z[103]*z[143] + z[125] - z[44]*z[5]*z[57])/sqrt(z[116] + pow(z[30], 2));
  ar[111] = z[140];
  ar[112] = 0;
  ar[113] = -z[81]*(z[108]*z[131]*z[47] - z[131]*z[28]*z[44] + z[43])/sqrt(z[116] + pow(z[30], 2));
  ar[114] = 0;
  ar[115] = 0;
  ar[116] = 0;
  ar[117] = z[81];
  ar[118] = 0;
  ar[119] = 0;
  ar[120] = z[81]*(z[132]*z[24]*z[39]*z[57] + z[145]*z[24] + z[40]*sqrt(z[116] + pow(z[30], 2)));
  ar[121] = z[81]*(z[100]*z[49]*(-z[107]*z[5]*z[93] - z[26]*z[30])/sqrt(z[116] + pow(z[30], 2)) - z[123]/sqrt(z[116] + pow(z[30], 2)) + z[137]*z[138]*z[93] - z[66]*sqrt(z[116] + pow(z[30], 2)));
  ar[122] = z[81]*(z[103]*z[137]*z[57] + z[135]*sqrt(z[116] + pow(z[30], 2)) + z[145]*z[5] + z[91]*z[99]/sqrt(z[116] + pow(z[30], 2)));
  ar[123] = z[81]*(-z[105]*z[95]/sqrt(z[116] + pow(z[30], 2)) + z[123]*z[92]/sqrt(z[116] + pow(z[30], 2)) - z[57]*sqrt(z[116] + pow(z[30], 2)));
  ar[124] = 0;
  ar[125] = -z[131]*z[81]*z[94]*(z[137]*z[28] - z[3]*z[61]);
  ar[126] = 0;
  ar[127] = 0;
  ar[128] = 0;
  ar[129] = 0;
  ar[130] = z[81];
  ar[131] = 0;
  ar[132] = z[148];
  ar[133] = z[152];
  ar[134] = z[149];
  ar[135] = z[141];
  ar[136] = 0;
  ar[137] = 0;
  ar[138] = 0;
  ar[139] = 0;
  ar[140] = 0;
  ar[141] = 0;
  ar[142] = 0;
  ar[143] = z[81];

  delete [] z;
}

/** Computes the n-d array of shape (12, 12, 3)
 *
 * @param[out] a C-array of with 432 elements
 */
//  void Bicycle::gif_dud_dq(double ar[432]) const;
void Bicycle::gif_dud_dq(double ar[432]) const
{
  double * z = new double[516];

  z[0] = -2;
  z[1] = sin(state_[1]);
  z[2] = sin(state_[2]);
  z[3] = sin(state_[3]);
  z[4] = cos(state_[1]);
  z[5] = cos(state_[2]);
  z[6] = cos(state_[3]);
  z[7] = pow(front_.R, -z[0]);
  z[8] = pow(rear_.R, -z[0]);
  z[9] = pow(front_.r, -z[0]);
  z[10] = pow(z[1], -z[0]);
  z[11] = pow(z[1], 3);
  z[12] = pow(z[2], -z[0]);
  z[13] = pow(z[3], -z[0]);
  z[14] = pow(z[3], 3);
  z[15] = pow(z[4], -z[0]);
  z[16] = pow(z[4], 3);
  z[17] = pow(z[5], -z[0]);
  z[18] = pow(z[5], 3);
  z[19] = pow(z[6], -z[0]);
  z[20] = sqrt(z[15]);
  z[21] = rear_.Ixx*z[5] + rear_.Ixz*z[2];
  z[22] = rear_.Ixz*z[5] + rear_.Izz*z[2];
  z[23] = rear_.a*z[5] + rear_.b*z[2];
  z[24] = rear_.Ixx*z[2] - rear_.Ixz*z[5];
  z[25] = rear_.Ixz*z[2] - rear_.Izz*z[5];
  z[26] = rear_.a*z[2] - rear_.b*z[5];
  z[27] = front_.r*z[4]*z[5]*z[6];
  z[28] = front_.Ixz*z[5]*z[6] + front_.Izz*z[2];
  z[29] = front_.a*z[2] - front_.b*z[5]*z[6];
  z[30] = front_.Ixx*z[2]*z[6] - front_.Ixz*z[5];
  z[31] = -front_.Ixz*z[2]*z[6] + front_.Izz*z[5];
  z[32] = -z[31];
  z[33] = -rear_.R/z[20] - rear_.r;
  z[34] = -front_.Ixx*z[5]*z[6] - front_.Ixz*z[2];
  z[35] = rear_.a*z[1]*z[5] + rear_.b*z[1]*z[2];
  z[36] = z[1]*z[3] - z[2]*z[4]*z[6];
  z[37] = rear_.a*z[2]*z[4] - rear_.b*z[4]*z[5];
  z[38] = z[1]*z[2]*z[3] - z[4]*z[6];
  z[39] = rear_.R*z[2]*z[4]/z[20] + rear_.a;
  z[40] = -z[1]*z[6] - z[2]*z[3]*z[4];
  z[41] = -z[0]*z[1]*z[6] - z[0]*z[2]*z[3]*z[4];
  z[42] = -rear_.a*z[4]*z[5] - rear_.b*z[2]*z[4];
  z[43] = -z[1]*z[2]*z[6] - z[3]*z[4];
  z[44] = -z[0]*z[1]*z[2]*z[6] - z[0]*z[3]*z[4];
  z[45] = front_.Ixz*z[4]*z[5]*z[6] + front_.Izz*z[2]*z[4];
  z[46] = pow(z[36], -z[0]);
  z[47] = front_.a*z[2]*z[4] - front_.b*z[4]*z[5]*z[6];
  z[48] = pow(z[38], -z[0]);
  z[49] = pow(z[38], 3);
  z[50] = rear_.R*z[4]*z[5]/z[20] - rear_.b;
  z[51] = rear_.R*z[2]*z[20] + rear_.a*z[4];
  z[52] = rear_.R*z[1]*z[2]*z[4]/z[20] + rear_.a*z[1];
  z[53] = rear_.R*z[20]*z[5] - rear_.b*z[4];
  z[54] = rear_.R*z[1]*z[4]*z[5]/z[20] - rear_.b*z[1];
  z[55] = front_.Ixx*z[36] + front_.Ixz*z[4]*z[5];
  z[56] = -front_.Ixx*z[43] - front_.Ixz*z[1]*z[5];
  z[57] = front_.Ixz*z[36] + front_.Izz*z[4]*z[5];
  z[58] = -front_.Ixz*z[43] - front_.Izz*z[1]*z[5];
  z[59] = z[2]*z[4] + z[36]*z[6];
  z[60] = z[1]*z[38] - z[2]*z[3];
  z[61] = -front_.Iyy*z[38]*z[6] + rear_.Iyy*z[4];
  z[62] = -front_.a*z[1]*z[5] + front_.b*z[43];
  z[63] = front_.a*z[4]*z[5] - front_.b*z[36];
  z[64] = z[15]*z[17] + z[46];
  z[65] = z[13]*z[17] + z[48];
  z[66] = rear_.R/z[4] + z[33]*z[4]/z[20];
  z[67] = rear_.R*rear_.a*z[1]*z[5]/z[20] + rear_.R*rear_.b*z[1]*z[2]/z[20];
  z[68] = -front_.Ixx*z[13]*z[5] + front_.Iyy*z[13]*z[5] - front_.Iyy*z[19]*z[5];
  z[69] = -z[17]*z[4]*z[6] + z[2]*z[36];
  z[70] = -z[17]*z[3]*z[4] + z[2]*z[40];
  z[71] = -z[1]*z[17]*z[6] + z[2]*z[43];
  z[72] = sqrt(z[64]);
  z[73] = pow(z[64], 3.0/2.0);
  z[74] = sqrt(z[65]);
  z[75] = pow(z[65], 3.0/2.0);
  z[76] = -z[1]*z[17]*z[3] - z[2]*z[38];
  z[77] = front_.r*z[1]*z[17]*z[3] + front_.r*z[2]*z[38];
  z[78] = -front_.r*z[1]*z[2]*z[5]*z[6] - front_.r*z[43]*z[5];
  z[79] = rear_.R*z[12]*z[4]/z[20] + rear_.R*z[17]*z[4]/z[20];
  z[80] = front_.r*z[70];
  z[81] = -front_.r*z[17]*z[3]*z[4] + front_.r*z[2]*z[40];
  z[82] = -front_.r*z[1]*z[2]*z[3]*z[5] + front_.r*z[38]*z[5];
  z[83] = -front_.r*z[1]*z[17]*z[6] + front_.r*z[2]*z[43];
  z[84] = front_.r*z[76];
  z[85] = -z[3]*z[5]*z[60];
  z[86] = -z[77];
  z[87] = -z[77];
  z[88] = z[15]*z[2]*z[5] + z[36]*z[4]*z[5]*z[6];
  z[89] = -front_.r*z[69];
  z[90] = z[0]*z[3]*z[5]*z[60];
  z[91] = -z[1]*z[3]*z[38]*z[5] + z[13]*z[2]*z[5];
  z[92] = -z[0]*z[1]*z[3]*z[38]*z[5] + z[0]*z[13]*z[2]*z[5];
  z[93] = z[91];
  z[94] = z[1]*z[36] - z[4]*z[43];
  z[95] = z[3]*z[36] - z[40]*z[6];
  z[96] = z[3]*z[43] + z[38]*z[6];
  z[97] = z[2]*z[39] + z[5]*z[50];
  z[98] = -z[2]*z[50] + z[39]*z[5];
  z[99] = front_.R*z[4]*z[5]/z[72] - front_.b;
  z[100] = rear_.R*z[0]*z[33]*z[4]/z[20] + z[0]*z[4]*pow(-z[33], -z[0]);
  z[101] = -z[1]*z[17]*z[4] - z[36]*z[43];
  z[102] = -rear_.R*z[10]*z[12]*z[4]/z[20] - rear_.R*z[10]*z[17]*z[4]/z[20];
  z[103] = -z[17]*z[3]*z[6] + z[38]*z[43];
  z[104] = z[0]*z[1]*z[17]*z[4] + z[36]*z[44];
  z[105] = -z[0]*z[17]*z[3]*z[6] + z[38]*z[44];
  z[106] = rear_.R*z[26]/z[20] + z[26]*z[33];
  z[107] = -front_.r*z[2]*z[3]*z[43] - front_.r*z[2]*z[38]*z[6];
  z[108] = front_.r*z[3]*z[43]*z[5] + front_.r*z[38]*z[5]*z[6];
  z[109] = -z[1]*z[17]*z[4] + z[36]*z[44]/2;
  z[110] = front_.R*z[3]*z[4]*z[5]/z[72] - front_.b*z[3];
  z[111] = front_.R*z[4]*z[5]*z[6]/z[72] - front_.b*z[6];
  z[112] = rear_.a*z[51] - rear_.b*z[53];
  z[113] = front_.R*z[17]*z[3]*z[4]/z[72] - front_.b*z[3]*z[5];
  z[114] = -front_.R*z[17]*z[4]*z[6]/z[72] + front_.b*z[5]*z[6];
  z[115] = z[23] - z[98];
  z[116] = z[46]/z[64] - 1;
  z[117] = -z[1]*z[2]*z[38] + z[10]*z[17]*z[3] + z[12]*z[3] - z[17]*z[3];
  z[118] = -z[2]*z[51] - z[5]*z[53];
  z[119] = -z[2]*z[52] - z[5]*z[54];
  z[120] = front_.R*z[36]/z[72] - front_.a;
  z[121] = front_.r*z[1]*z[2]*z[38] - front_.r*z[10]*z[17]*z[3] - front_.r*z[12]*z[3] + front_.r*z[17]*z[3];
  z[122] = front_.R*z[36]*z[6]/z[72] - front_.a*z[6];
  z[123] = rear_.R*rear_.a*z[2]/z[20] - rear_.R*rear_.b*z[5]/z[20] + rear_.a*z[2]*z[33] - rear_.b*z[33]*z[5];
  z[124] = -front_.Ixx*z[3]*z[40] + front_.Iyy*z[3]*z[40] - front_.Iyy*z[36]*z[6];
  z[125] = front_.R*z[3]*z[36]*z[5]/z[72] - front_.a*z[3]*z[5];
  z[126] = z[76]/z[74];
  z[127] = -front_.R*z[4]*z[40]*z[5]/z[72] + front_.b*z[40];
  z[128] = -z[2] + z[5]*z[88]/z[64];
  z[129] = -z[5]*z[96]/z[74];
  z[130] = z[103]/z[74];
  z[131] = -front_.R*z[36]*z[40]/z[72] + front_.a*z[40];
  z[132] = -z[1] - z[101]*z[4]/z[64];
  z[133] = -z[0]*z[1] + z[104]*z[4]/z[64];
  z[134] = z[13]*z[17]/z[65] + z[48]/z[65];
  z[135] = z[36]*z[88]/z[64] - z[4]*z[5]*z[6];
  z[136] = -front_.R*z[1]*z[17]*z[6]/z[72] + front_.R*z[2]*z[43]/z[72];
  z[137] = -z[0] - z[134];
  z[138] = front_.R*z[4]*z[5]*pow(-z[40], -z[0])/z[73] + z[99];
  z[139] = -z[110]*z[5]*z[6] + z[111]*z[3]*z[5];
  z[140] = z[101]*z[36]/z[64] + z[43];
  z[141] = -front_.R*z[17]*z[4]*z[6]/z[72] + front_.R*z[2]*z[36]/z[72] - z[29];
  z[142] = front_.R*z[3]*z[36]/z[72] + front_.R*z[40]*z[6]/z[72] - front_.a*z[3];
  z[143] = -front_.R*z[40]*z[46]/z[73] + front_.R*z[40]/z[72];
  z[144] = front_.R*z[3]*z[40]*z[5]/z[72] - front_.R*z[36]*z[5]*z[6]/z[72] + front_.a*z[5]*z[6];
  z[145] = -front_.R*z[2]*z[3]*z[4]/z[72] + front_.R*z[3]*z[4]*z[5]*z[88]/z[73];
  z[146] = -front_.R*z[2]*z[4]*z[6]/z[72] + front_.R*z[4]*z[5]*z[6]*z[88]/z[73];
  z[147] = -front_.R*z[36]*z[4]*z[40]*z[5]*z[6]/z[73] + z[110];
  z[148] = front_.R*z[36]*z[4]*z[41]*z[5]*z[6]/(2*z[73]) + z[110];
  z[149] = -front_.R*z[0]*z[3]*z[4]*z[5]/z[72] + front_.R*z[36]*z[4]*z[41]*z[5]*z[6]/z[73] + front_.b*z[0]*z[3];
  z[150] = front_.R*z[0]*z[2]*z[4]*z[5]/z[72] + front_.R*z[17]*z[4]*z[88]/z[73] + front_.b*z[2];
  z[151] = front_.R*z[46]/z[72] - front_.R*pow(-z[40], -z[0])/z[72] - front_.a*z[36];
  z[152] = -front_.R*z[17]*z[3]*z[36]*z[4]*z[40]/z[73] + z[114];
  z[153] = front_.R*z[1]*z[5]*z[6]/z[72] + front_.R*z[101]*z[4]*z[5]*z[6]/z[73];
  z[154] = front_.R*z[36]*z[88]/z[73] - front_.R*z[4]*z[5]*z[6]/z[72];
  z[155] = -front_.R*z[1]*z[40]*z[5]/z[72] + front_.R*z[38]*z[4]*z[5]/z[72] - front_.b*z[38];
  z[156] = -front_.R*z[133]*z[3]*z[5]/(2*z[72]);
  z[157] = -front_.R*z[1]*z[3]*z[5]/z[72] - front_.R*z[101]*z[3]*z[4]*z[5]/z[73];
  z[158] = front_.R*z[17]*z[3]*z[36]*z[4]*z[41]/(2*z[73]) + z[114];
  z[159] = front_.R*z[0]*z[17]*z[4]*z[6]/z[72] + front_.R*z[17]*z[3]*z[36]*z[4]*z[41]/z[73] - front_.b*z[0]*z[5]*z[6];
  z[160] = z[110]*z[43] + z[111]*z[38];
  z[161] = front_.R*z[0]*z[2]*z[3]*z[4]*z[5]/z[72] + front_.R*z[17]*z[3]*z[4]*z[88]/z[73] + front_.b*z[2]*z[3];
  z[162] = -front_.R*z[133]*z[17]*z[3]/(2*z[72]);
  z[163] = -front_.R*z[1]*z[3]*z[5]/z[72] - front_.R*z[109]*z[3]*z[4]*z[5]/z[73];
  z[164] = -front_.R*z[19]*z[4]*z[5]/z[72] + front_.R*z[36]*z[6]*z[88]/z[73];
  z[165] = -front_.R*z[1]*z[17]*z[3]/z[72] - front_.R*z[101]*z[17]*z[3]*z[4]/z[73];
  z[166] = -front_.R*z[1]*z[17]*z[3]/z[72] - front_.R*z[109]*z[17]*z[3]*z[4]/z[73];
  z[167] = front_.Iyy*z[13]*z[17]*z[4] + front_.Iyy*z[2]*z[3]*z[40] + z[2]*z[22]*z[4] - z[2]*z[24]*z[4] + z[2]*z[28]*z[4] + z[21]*z[4]*z[5] + z[25]*z[4]*z[5] - z[34]*z[4]*z[5]*z[6];
  z[168] = front_.R*z[36]*z[4]*z[5]*pow(-z[40], -z[0])/z[73] + front_.R*z[36]*z[4]*z[5]/z[72] - front_.b*z[36];
  z[169] = -front_.R*z[101]*z[36]*z[6]/z[73] - front_.R*z[43]*z[6]/z[72];
  z[170] = front_.R*z[36]*z[38]/z[72] - front_.R*z[40]*z[43]/z[72] - front_.a*z[38];
  z[171] = front_.R*z[101]*z[3]*z[36]*z[5]/z[73] + front_.R*z[3]*z[43]*z[5]/z[72];
  z[172] = -front_.R*z[109]*z[36]*z[6]/z[73] - front_.R*z[43]*z[6]/z[72];
  z[173] = front_.R*z[109]*z[3]*z[36]*z[5]/z[73] + front_.R*z[3]*z[43]*z[5]/z[72];
  z[174] = -z[110]*z[3]*z[5] - z[111]*z[5]*z[6] + z[122]*z[2];
  z[175] = z[174];
  z[176] = rear_.R*z[1]*z[2]*z[53]/z[20] - rear_.R*z[1]*z[5]*z[51]/z[20] + rear_.R*z[2]*z[4]*z[54]/z[20] - rear_.R*z[4]*z[5]*z[52]/z[20] - z[26]*z[35];
  z[177] = z[1]*z[40]*z[48]/z[65] - z[1]*z[40] - z[2]*z[3]*z[38]*z[40]/z[65] + z[38]*z[4];
  z[178] = -front_.R*z[3]*z[40]*z[46]/z[73] + front_.R*z[3]*z[40]/z[72] - z[122];
  z[179] = -front_.R*z[40]*z[46]*z[6]/z[73] + z[142];
  z[180] = -front_.m*(front_.R*z[116]*pow(-z[40], -z[0])/z[72] + z[120]*z[36]);
  z[181] = -front_.r*z[1]*z[110]*z[3]*z[5] - front_.r*z[1]*z[111]*z[5]*z[6] + front_.r*z[1]*z[122]*z[2];
  z[182] = front_.R*z[41]*z[46]*z[6]/(2*z[73]) + z[142];
  z[183] = -front_.R*z[0]*z[3]*z[36]/z[72] - front_.R*z[0]*z[40]*z[6]/z[72] + front_.R*z[41]*z[46]*z[6]/z[73] + front_.a*z[0]*z[3];
  z[184] = -z[1]*z[40]*z[46]/z[64] + z[1]*z[40] + z[36]*z[4]*z[40]*z[43]/z[64] + z[38]*z[4];
  z[185] = -front_.R*z[3]*z[40]*z[46]*z[5]/z[73] + z[144];
  z[186] = -front_.R*z[17]*z[4]*z[6]/z[72] - front_.R*z[2]*z[36]/z[72] + front_.R*z[36]*z[5]*z[88]/z[73] + front_.a*z[2];
  z[187] = front_.R*z[2]*z[40]/z[72] - front_.R*z[40]*z[5]*z[88]/z[73] + z[113];
  z[188] = front_.R*z[3]*z[41]*z[46]*z[5]/(2*z[73]) + z[144];
  z[189] = -front_.R*z[0]*z[3]*z[40]*z[5]/z[72] + front_.R*z[0]*z[36]*z[5]*z[6]/z[72] + front_.R*z[3]*z[41]*z[46]*z[5]/z[73] - front_.a*z[0]*z[5]*z[6];
  z[190] = -front_.R*z[46]*pow(-z[40], -z[0])/z[73] - z[151];
  z[191] = -front_.r*z[0]*z[1]*z[3]*z[38]*z[5] + front_.r*z[0]*z[13]*z[2]*z[5] - front_.r*z[14]*z[18]*z[60]/z[65] - front_.r*z[3]*z[48]*z[5]*z[60]/z[65];
  z[192] = -z[17]*z[4]*z[6]*z[88]/z[64] + z[2]*z[36]*z[88]/z[64] + z[2]*z[4]*z[5]*z[6] + z[36]*z[5];
  z[193] = -z[1]*z[122]*z[5] - z[110]*z[38] + z[111]*z[43];
  z[194] = -z[113]*z[38] - z[141]*z[43];
  z[195] = -z[1]*z[122]*z[5] - z[110]*z[38] + z[111]*z[43];
  z[196] = -z[1]*z[17]*z[3]*z[91]/z[65] + z[1]*z[2]*z[3]*z[5] - z[2]*z[38]*z[91]/z[65] - z[38]*z[5];
  z[197] = -front_.R*z[17]*z[3]*z[4]*z[6]/z[72] - front_.R*z[2]*z[3]*z[36]/z[72] + front_.R*z[3]*z[36]*z[5]*z[88]/z[73] + front_.a*z[2]*z[3];
  z[198] = front_.R*z[15]*z[17]*z[3]/z[72] + front_.R*z[2]*z[4]*z[40]/z[72] - front_.R*z[4]*z[40]*z[5]*z[88]/z[73] - front_.b*z[3]*z[4]*z[5];
  z[199] = -z[127]*z[5]*z[6] + z[131]*z[2] - z[3]*z[5]*z[63];
  z[200] = z[1]*z[103]*z[38]/z[65] - z[1]*z[43] - z[103]*z[2]*z[3]/z[65] - z[2]*z[6];
  z[201] = z[199];
  z[202] = z[13]*z[17]*z[91]/z[65] + z[48]*z[91]/z[65] + z[92];
  z[203] = -(z[1]*z[17]*z[3]*z[38]*z[40]/z[65] + z[2]*z[40]*z[48]/z[65] - z[70])/z[74];
  z[204] = -z[1]*z[103]*z[17]*z[3]/z[65] - z[103]*z[2]*z[38]/z[65] + z[71];
  z[205] = front_.R*z[40]*z[41]*z[46]/(2*z[73]) - z[151];
  z[206] = -z[101]*z[17]*z[4]*z[6]/z[64] + z[101]*z[2]*z[36]/z[64] + z[71];
  z[207] = -front_.b*z[120]*z[40] + z[143]*z[63];
  z[208] = -z[17]*z[3]*z[38]*z[40]*z[6]/z[65] + z[36]*z[38] + z[40]*z[43]*z[48]/z[65] - z[40]*z[43];
  z[209] = -z[1]*z[2]*z[36] + z[1]*z[36]*z[5]*z[88]/z[64] + z[2]*z[4]*z[43] - z[4]*z[43]*z[5]*z[88]/z[64];
  z[210] = z[1]*z[38]*z[5]*z[93]/z[65] + z[117] - z[2]*z[3]*z[5]*z[93]/z[65];
  z[211] = z[2]*z[3]*z[43] + z[2]*z[38]*z[6] - z[3]*z[43]*z[5]*z[91]/z[65] - z[38]*z[5]*z[6]*z[91]/z[65];
  z[212] = front_.R*z[3]*z[36]*z[4]*z[5]/z[72] - front_.R*z[36]*z[40]*z[88]/z[73] + front_.R*z[4]*z[40]*z[5]*z[6]/z[72] - front_.a*z[3]*z[4]*z[5];
  z[213] = -z[5]*(z[3]*z[38]*z[40]*z[43]/z[65] + z[40]*z[48]*z[6]/z[65] + z[95])/z[74];
  z[214] = -z[1]*z[131]*z[5] + z[127]*z[43] - z[38]*z[63];
  z[215] = -front_.R*z[101]*z[4]*z[40]*z[5]/z[73] + z[155];
  z[216] = -z[1]*z[131]*z[5] + z[127]*z[43] - z[38]*z[63];
  z[217] = -front_.R*z[109]*z[4]*z[40]*z[5]/z[73] + z[155];
  z[218] = rear_.R*z[1]*z[2]*z[52]/z[20] + rear_.R*z[1]*z[5]*z[54]/z[20] + z[1]*z[2]*z[33]*z[52] + z[1]*z[33]*z[5]*z[54] - z[2]*z[33]*z[4]*z[51] - z[33]*z[4]*z[5]*z[53];
  z[219] = z[196]/z[74];
  z[220] = z[120]*z[47] - z[154]*z[63];
  z[221] = -front_.m*(-front_.R*z[140]*z[40]/z[72] + z[120]*z[38]);
  z[222] = z[113]*z[5]*z[6] - z[125]*z[2] + z[141]*z[3]*z[5];
  z[223] = -front_.R*z[17]*z[36]*z[4]*z[40]*z[6]/z[73] + front_.R*z[2]*z[40]*z[46]/z[73] - front_.R*z[2]*z[40]/z[72] + z[113];
  z[224] = -z[103]*z[17]*z[3]*z[6]/z[65] + z[103]*z[38]*z[43]/z[65] - z[17]*z[19] + z[65] - pow(-z[43], -z[0]);
  z[225] = front_.r*z[1]*z[113]*z[5]*z[6] - front_.r*z[1]*z[125]*z[2] + front_.r*z[1]*z[141]*z[3]*z[5];
  z[226] = front_.R*z[17]*z[36]*z[4]*z[41]*z[6]/(2*z[73]) - front_.R*z[2]*z[40]/z[72] - front_.R*z[2]*z[41]*z[46]/(2*z[73]) + z[113];
  z[227] = -front_.R*z[0]*z[17]*z[3]*z[4]/z[72] + front_.R*z[0]*z[2]*z[40]/z[72] + front_.R*z[17]*z[36]*z[4]*z[41]*z[6]/z[73] - front_.R*z[2]*z[41]*z[46]/z[73] + front_.b*z[0]*z[3]*z[5];
  z[228] = -z[120]*z[62] + z[63]*(front_.R*z[101]*z[36]/z[73] + front_.R*z[43]/z[72]);
  z[229] = -front_.R*(-z[0]*z[1]*z[17]*z[6] + z[0]*z[2]*z[43] + z[104]*z[17]*z[4]*z[6]/z[64] - z[104]*z[2]*z[36]/z[64])/(2*z[72]);
  z[230] = z[211]/z[74];
  z[231] = z[215]*z[5]*z[6] - z[3]*z[5]*z[62];
  z[232] = front_.R*z[109]*z[36]*z[40]/z[73] - z[170];
  z[233] = z[1]*z[125]*z[5] - z[113]*z[43] + z[141]*z[38];
  z[234] = -(z[105]*z[13]*z[17]/z[65] + z[105]*z[48]/z[65] - 4*z[17]*z[3]*z[6] + 4*z[38]*z[43])/(2*z[74]);
  z[235] = -(z[0]*z[2]*z[3]*z[5]*z[6] - z[1]*z[3]*z[43]*z[5] + z[1]*z[38]*z[5]*z[6] + z[17]*z[3]*z[6]*z[91]/z[65] - z[38]*z[43]*z[91]/z[65])/z[74];
  z[236] = -front_.R*z[17]*z[4]*z[6]*z[88]/z[73] + front_.R*z[2]*z[36]*z[88]/z[73] + front_.R*z[2]*z[4]*z[5]*z[6]/z[72] + front_.R*z[36]*z[5]/z[72] - front_.a*z[5] - front_.b*z[2]*z[6];
  z[237] = -front_.R*z[101]*z[17]*z[4]*z[6]/z[73] + front_.R*z[101]*z[2]*z[36]/z[73] + z[136];
  z[238] = -front_.b*z[3]*z[40]*z[5] + z[127]*z[3]*z[5] + z[168]*z[5]*z[6] - z[5]*z[6]*z[63];
  z[239] = -front_.R*z[109]*z[17]*z[4]*z[6]/z[73] + front_.R*z[109]*z[2]*z[36]/z[73] + z[136];
  z[240] = -front_.b*z[38]*z[40] + z[127]*z[38] - z[168]*z[43] + z[43]*z[63];
  z[241] = z[110]*z[40] + z[111]*z[36] - z[122]*z[4]*z[5] - z[153]*z[43];
  z[242] = z[153]*z[5]*z[6] - z[157]*z[3]*z[5] + z[169]*z[2];
  z[243] = z[153]*z[5]*z[6] - z[163]*z[3]*z[5] + z[172]*z[2];
  z[244] = z[190]*z[2] + z[238];
  z[245] = z[2]*z[205] + z[238];
  z[246] = z[127]*z[36] - z[131]*z[4]*z[5] - z[215]*z[43] - z[38]*z[62] + z[40]*z[63];
  z[247] = z[2]*(front_.R*z[101]*z[36]*z[40]/z[73] - z[170]) + z[231];
  z[248] = -z[1]*z[190]*z[5] + z[240];
  z[249] = -front_.r*z[120]*z[4]*z[5]*z[6] + front_.r*z[143]*z[3]*z[4]*z[5] + z[110]*z[143] + z[120]*(-front_.R*z[3]*z[36]*z[4]*z[40]*z[5]/z[73] - z[111]);
  z[250] = z[139] + z[147]*z[5]*z[6] - z[179]*z[2] + z[3]*z[5]*(-front_.R*z[3]*z[36]*z[4]*z[40]*z[5]/z[73] - z[111]);
  z[251] = -z[1]*z[205]*z[5] + z[240];
  z[252] = front_.R*front_.r*z[135]*z[3]*z[4]*z[5]/z[72] + front_.R*z[120]*z[128]*z[3]*z[4]/z[72] + front_.R*z[135]*z[3]*z[99]/z[72] - front_.r*z[120]*z[2]*z[3]*z[4] - z[1]*z[2]*z[4]*z[9];
  z[253] = z[110]*z[2]*z[3] + z[111]*z[2]*z[6] + z[122]*z[5] - z[145]*z[3]*z[5] - z[146]*z[5]*z[6] + z[164]*z[2];
  z[254] = z[165]*z[5]*z[6] + z[171]*z[2] - z[237]*z[3]*z[5];
  z[255] = z[1]*z[179]*z[5] - z[147]*z[43] + z[160] + z[38]*(-front_.R*z[3]*z[36]*z[4]*z[40]*z[5]/z[73] - z[111]);
  z[256] = -z[1]*z[110]*z[3]*z[5] - z[1]*z[111]*z[5]*z[6] + z[1]*z[122]*z[2] - z[1]*z[164]*z[5] - z[145]*z[38] + z[146]*z[43];
  z[257] = z[166]*z[5]*z[6] + z[173]*z[2] - z[239]*z[3]*z[5];
  z[258] = front_.R*front_.r*z[140]*z[3]*z[4]*z[5]/z[72] + front_.R*z[140]*z[3]*z[99]/z[72] + front_.r*z[1]*z[120]*z[3]*z[5] + z[10]*z[5]*z[9] - z[120]*z[156] - z[15]*z[5]*z[9];
  z[259] = -z[1]*z[169]*z[5] - z[157]*z[38] + z[241];
  z[260] = -z[1]*z[172]*z[5] - z[163]*z[38] + z[241];
  z[261] = z[127]*z[2]*z[6] + z[131]*z[5] - z[198]*z[5]*z[6] + z[2]*z[212] + z[2]*z[3]*z[63] + z[3]*z[47]*z[5];
  z[262] = -z[1]*z[127]*z[5]*z[6] + z[1]*z[131]*z[2] - z[1]*z[212]*z[5] - z[1]*z[3]*z[5]*z[63] + z[198]*z[43] + z[38]*z[47];
  z[263] = front_.R*z[120]*z[19]*z[4]*z[5]/z[72] - front_.R*z[120]*z[36]*z[4]*z[5]*z[59]*z[6]/z[73] - front_.R*z[15]*z[17]*z[59]*z[6]*z[99]/z[73] + front_.R*z[2]*z[4]*z[6]*z[99]/z[72] + z[1]*z[3]*z[4]*z[5]*z[9] - z[128]*z[15]*z[5]*z[6]*z[7]/z[64] - z[135]*z[36]*z[6]*z[7]/z[64];
  z[264] = -front_.r*z[120]*z[43] - front_.r*z[143]*z[38] + z[120]*z[223] - z[141]*z[143];
  z[265] = -z[113]*z[3]*z[5] + z[141]*z[5]*z[6] - z[152]*z[5]*z[6] + z[185]*z[2] + z[223]*z[3]*z[5];
  z[266] = -front_.R*z[111]*z[36]*z[4]*z[40]*z[5]/z[73] - front_.R*z[122]*z[40]*z[46]/z[73] + front_.R*z[122]*z[40]/z[72] + front_.R*z[149]*z[4]*z[5]/(2*z[72]) + front_.R*z[183]*z[36]/(2*z[72]) - z[4]*z[43]*z[9];
  z[267] = -z[1]*z[5]*(front_.R*z[101]*z[36]*z[40]/z[73] - z[170]) + z[246];
  z[268] = -front_.R*z[113]*z[36]*z[4]*z[40]*z[5]/z[73] - front_.R*z[125]*z[40]*z[46]/z[73] + front_.R*z[125]*z[40]/z[72] + front_.R*z[152]*z[4]*z[5]/z[72] + front_.R*z[185]*z[36]/z[72] - z[5]*z[6]*z[9];
  z[269] = front_.r*z[1]*z[120]*z[3]*z[5] + front_.r*z[154]*z[38] + z[120]*z[236] + z[141]*z[154] + z[5]*z[9];
  z[270] = -z[1]*z[185]*z[5] + z[152]*z[43] + z[194] + z[223]*z[38];
  z[271] = front_.R*z[1]*z[5]*z[6]*z[99]/z[72] + front_.R*z[101]*z[120]*z[36]*z[6]/z[73] + front_.R*z[101]*z[4]*z[5]*z[6]*z[99]/z[73] + front_.R*z[120]*z[43]*z[6]/z[72] - z[1]*z[38]*z[9] - z[132]*z[17]*z[4]*z[6]*z[7]/z[64] + z[140]*z[36]*z[6]*z[7]/z[64] - z[4]*z[40]*z[9];
  z[272] = -z[1]*z[188]*z[5] + z[158]*z[43] + z[194] + z[226]*z[38];
  z[273] = -z[113]*z[2]*z[6] - z[125]*z[5] - z[141]*z[2]*z[3] + z[161]*z[5]*z[6] - z[197]*z[2] + z[236]*z[3]*z[5];
  z[274] = front_.R*z[127]*z[36]*z[4]*z[40]*z[5]/z[73] + front_.R*z[131]*z[40]*z[46]/z[73] - front_.R*z[131]*z[40]/z[72] - front_.R*z[168]*z[4]*z[5]/z[72] + front_.R*z[205]*z[36]/z[72];
  z[275] = -z[1]*z[171]*z[5] - z[113]*z[36] + z[125]*z[4]*z[5] - z[141]*z[40] - z[165]*z[43] - z[237]*z[38];
  z[276] = -z[1]*z[173]*z[5] - z[113]*z[36] + z[125]*z[4]*z[5] - z[141]*z[40] - z[166]*z[43] - z[239]*z[38];
  z[277] = z[1]*z[113]*z[5]*z[6] - z[1]*z[125]*z[2] + z[1]*z[141]*z[3]*z[5] + z[1]*z[197]*z[5] - z[161]*z[43] + z[236]*z[38];
  z[278] = front_.R*z[113]*z[2]*z[4]/z[72] - front_.R*z[113]*z[4]*z[5]*z[88]/z[73] - front_.R*z[125]*z[36]*z[88]/z[73] + front_.R*z[125]*z[4]*z[5]*z[6]/z[72] - front_.R*z[161]*z[4]*z[5]/z[72] - front_.R*z[197]*z[36]/z[72] + z[2]*z[3]*z[9];
  z[279] = -front_.R*z[127]*z[2]*z[4]/z[72] + front_.R*z[127]*z[4]*z[5]*z[88]/z[73] + front_.R*z[131]*z[36]*z[88]/z[73] - front_.R*z[131]*z[4]*z[5]*z[6]/z[72] + front_.R*z[198]*z[4]*z[5]/z[72] + front_.R*z[212]*z[36]/z[72];
  z[280] = -front_.b*z[141]*z[40] + z[113]*z[168] + z[127]*z[152] + z[131]*z[185] - z[223]*z[63];
  z[281] = front_.b*z[110]*z[40] - z[111]*z[168] + z[122]*z[190] - z[127]*z[147] - z[131]*z[179] - z[63]*(-front_.R*z[3]*z[36]*z[4]*z[40]*z[5]/z[73] - z[111]);
  z[282] = -z[110]*z[47] + z[111]*z[198] + z[122]*z[212] + z[127]*z[146] + z[131]*z[164] + z[145]*z[63];
  z[283] = front_.R*z[1]*z[127]*z[5]/z[72] + front_.R*z[104]*z[127]*z[4]*z[5]/(2*z[73]) + front_.R*z[104]*z[131]*z[36]/(2*z[73]) + front_.R*z[131]*z[43]/z[72] + front_.R*z[217]*z[4]*z[5]/z[72] - front_.R*z[36]*(front_.R*z[109]*z[36]*z[40]/z[73] - z[170])/z[72];
  z[284] = z[110]*z[62] - z[111]*z[215] + z[122]*(front_.R*z[101]*z[36]*z[40]/z[73] - z[170]) - z[127]*z[153] + z[131]*z[169] + z[157]*z[63];
  z[285] = z[110]*z[237] - z[111]*z[165] + z[113]*z[153] + z[122]*z[171] - z[125]*z[169] - z[141]*z[157];
  z[286] = -z[110]*z[223] + z[111]*z[152] + z[113]*z[147] + z[122]*z[185] + z[125]*z[179] + z[141]*(-front_.R*z[3]*z[36]*z[4]*z[40]*z[5]/z[73] - z[111]);
  z[287] = -z[110]*z[236] - z[111]*z[161] - z[113]*z[146] - z[122]*z[197] - z[125]*z[164] - z[141]*z[145];
  z[288] = z[113]*z[198] + z[125]*z[212] + z[127]*z[161] + z[131]*z[197] - z[141]*z[47] + z[236]*z[63];
  z[289] = z[113]*z[215] - z[125]*(front_.R*z[101]*z[36]*z[40]/z[73] - z[170]) - z[127]*z[165] + z[131]*z[171] - z[141]*z[62] + z[237]*z[63];
  z[290] = -rear_.R*z[0];
  z[291] = -front_.a;
  z[292] = -front_.b;
  z[293] = -rear_.b;
  z[294] = -front_.m;
  z[295] = z[0]*z[294];
  z[296] = -rear_.m;
  z[297] = z[0]*z[296];
  z[298] = -front_.r;
  z[299] = z[294]*z[298];
  z[300] = front_.Ixx*z[6];
  z[301] = front_.Ixz*z[2];
  z[302] = front_.Ixz*z[5];
  z[303] = front_.Ixz*z[6];
  z[304] = front_.Iyy*z[6];
  z[305] = front_.J*z[3];
  z[306] = rear_.J*z[4];
  z[307] = rear_.a*z[1];
  z[308] = rear_.a*z[5];
  z[309] = -z[2]*z[293];
  z[310] = -z[1]*z[296];
  z[311] = -z[296]*z[4];
  z[312] = -z[2]*z[298];
  z[313] = -z[298]*z[3];
  z[314] = -z[298]*z[4];
  z[315] = -z[298]*z[5];
  z[316] = -z[298]*z[6];
  z[317] = -z[1];
  z[318] = z[0]*z[317];
  z[319] = -z[2];
  z[320] = z[0]*z[319];
  z[321] = -z[3];
  z[322] = z[0]*z[321];
  z[323] = -z[4];
  z[324] = z[0]*z[323];
  z[325] = -z[5];
  z[326] = -z[6];
  z[327] = -z[293]*z[325];
  z[328] = z[317]*z[319];
  z[329] = z[317]*z[321];
  z[330] = z[317]*z[325];
  z[331] = z[317]*z[326];
  z[332] = z[319]*z[321];
  z[333] = z[319]*z[323];
  z[334] = z[319]*z[326];
  z[335] = z[321]*z[325];
  z[336] = z[323]*z[325];
  z[337] = z[323]*z[326];
  z[338] = z[325]*z[326];
  z[339] = rear_.R*z[10];
  z[340] = rear_.R/z[15];
  z[341] = -rear_.R/z[323];
  z[342] = -z[13]*z[298];
  z[343] = -z[325]*z[9];
  z[344] = -z[321]*z[323];
  z[345] = -z[302]*z[321];
  z[346] = -z[305]*z[319];
  z[347] = front_.J*z[338];
  z[348] = -z[12];
  z[349] = -z[15];
  z[350] = -z[17];
  z[351] = -z[18]*z[317];
  z[352] = z[319]*z[349];
  z[353] = z[323]*z[348];
  z[354] = -z[13]*z[325];
  z[355] = z[323]*z[350];
  z[356] = z[325]*z[349];
  z[357] = -z[19]*z[325];
  z[358] = z[326]*z[350];
  z[359] = rear_.R/z[20];
  z[360] = -z[8]/z[323];
  z[361] = -z[321]*z[350];
  z[362] = -z[313]*z[350];
  z[363] = z[304]*z[332];
  z[364] = z[305]*z[336];
  z[365] = z[313]*z[330];
  z[366] = -z[323]/z[20];
  z[367] = -z[10]*z[348];
  z[368] = -z[10]*z[350];
  z[369] = -z[13]*z[350];
  z[370] = z[349]*z[350];
  z[371] = -z[314]*z[338];
  z[372] = z[317]*z[355];
  z[373] = -z[344]*z[350];
  z[374] = z[304]*z[325]*z[344];
  z[375] = z[10]/z[20];
  z[376] = z[11]/z[20];
  z[377] = z[20];
  z[378] = -z[313]*z[355];
  z[379] = z[312]*z[325]*z[329];
  z[380] = z[11]*z[8]/z[16];
  z[381] = z[323]*z[33];
  z[382] = -z[26]*z[317];
  z[383] = -z[23]*z[310];
  z[384] = -front_.Ixz*z[40];
  z[385] = -front_.Iyy*z[40];
  z[386] = z[292]*z[40];
  z[387] = z[298]*z[40];
  z[388] = z[298]*z[43];
  z[389] = -z[26]*z[311];
  z[390] = front_.Iyy*z[36];
  z[391] = front_.J*z[36];
  z[392] = front_.J*z[38];
  z[393] = -z[298]*z[36];
  z[394] = -z[298]*z[38];
  z[395] = z[317]*z[40];
  z[396] = z[321]*z[40];
  z[397] = z[323]*z[40];
  z[398] = z[325]*z[40];
  z[399] = z[326]*z[40];
  z[400] = -z[33]/z[377];
  z[401] = -z[317]*z[36];
  z[402] = -z[321]*z[36];
  z[403] = -z[325]*z[36];
  z[404] = -z[319]*z[40];
  z[405] = -z[325]*z[38];
  z[406] = -pow(-z[40], -z[0]);
  z[407] = z[38]*z[9];
  z[408] = z[312]*z[40];
  z[409] = z[315]*z[38];
  z[410] = -z[46];
  z[411] = -z[350]*z[36];
  z[412] = z[23]*z[311]/z[377];
  z[413] = front_.Iyy*z[335]*z[38];
  z[414] = z[23]*z[296]*z[377];
  z[415] = z[26]*z[310]*z[366];
  z[416] = -z[23]*z[42];
  z[417] = -z[319]*z[54];
  z[418] = z[328]*z[52];
  z[419] = z[23]*z[311]*z[33];
  z[420] = -z[325]*z[60];
  z[421] = z[40]*z[43];
  z[422] = z[298]*z[71];
  z[423] = z[16]*z[59];
  z[424] = -z[36]*z[40];
  z[425] = -z[36]*z[43];
  z[426] = z[38]*z[43];
  z[427] = front_.R/z[73];
  z[428] = front_.R/z[72];
  z[429] = z[40]*z[410];
  z[430] = -1/z[65];
  z[431] = -z[33]*z[54];
  z[432] = -z[325]/z[74];
  z[433] = z[310]*z[66];
  z[434] = z[359]*z[418];
  z[435] = pow(z[64], z[0])*z[7];
  z[436] = z[7]/z[64];
  z[437] = z[330]*z[359]*z[54];
  z[438] = -z[350]/z[74];
  z[439] = z[296]*z[317]*z[66];
  z[440] = z[336]*z[428];
  z[441] = z[365]/z[74];
  z[442] = -z[369]*z[430];
  z[443] = z[326]*z[440];
  z[444] = z[36]*z[59];
  z[445] = -z[350]*z[94];
  z[446] = z[40]*z[63];
  z[447] = z[103]*z[298];
  z[448] = -z[350]*z[96];
  z[449] = -z[321]*z[99];
  z[450] = -z[325]*z[99];
  z[451] = -z[326]*z[99];
  z[452] = -z[40]*z[69];
  z[453] = z[40]*z[430];
  z[454] = -z[40]/z[74];
  z[455] = -z[43]/z[74];
  z[456] = z[36]/z[74];
  z[457] = z[38]/z[75];
  z[458] = -z[38]*z[430];
  z[459] = z[38]/z[74];
  z[460] = -z[311]*(z[26] + z[79]);
  z[461] = -z[410]/z[64];
  z[462] = z[48]/z[75];
  z[463] = -z[430]*z[48];
  z[464] = z[312]*z[323]*z[428]*z[43];
  z[465] = z[310]*z[366]*z[98];
  z[466] = -z[119]*z[317];
  z[467] = -z[120]*z[325];
  z[468] = -z[120]*z[326];
  z[469] = -z[40]*z[99];
  z[470] = -z[60]/z[75];
  z[471] = z[430]*z[60];
  z[472] = z[60]/z[74];
  z[473] = -z[120]*z[350];
  z[474] = z[101]*z[36];
  z[475] = -z[310]*z[381]*z[98];
  z[476] = z[85]/z[75];
  z[477] = -z[430]*z[85];
  z[478] = z[122]*z[314]*z[325];
  z[479] = -z[116]*z[40];
  z[480] = -z[430]*z[91];
  z[481] = -z[120]*z[40];
  z[482] = -z[125]*z[314]*z[325];
  z[483] = -z[103]/z[75];
  z[484] = z[103]*z[430];
  z[485] = z[101]/z[64];
  z[486] = z[103]/z[74];
  z[487] = -z[105]*z[430];
  z[488] = z[101]*z[94];
  z[489] = z[120]/z[74];
  z[490] = z[131]*z[314]*z[325];
  z[491] = -z[296]*z[317]*z[323]*(z[26] + z[79] - z[97]);
  z[492] = z[296]*(-z[10]*z[23] + z[10]*z[319]*z[50] - z[10]*z[325]*z[39] - z[23]*z[349] + z[352]*z[50] - z[356]*z[39]);
  z[493] = z[0]*z[294]*z[38]*z[453]*(z[134] - 1);
  z[494] = -z[174]*z[317];
  z[495] = -z[294]*(-z[135]*z[40]*z[428] - z[344]*z[467]);
  z[496] = -z[177]*z[294]*z[315]/z[74];
  z[497] = -z[294]*z[430]*(z[442]*z[90] + z[463]*z[90] + z[92]);
  z[498] = (z[13]*z[17]*z[93]/z[65] + z[48]*z[93]/z[65] + z[92])/z[74];
  z[499] = z[200]*z[299]*z[432];
  z[500] = z[294]*z[298]*(z[117] - z[319]*z[442]*z[60] + z[329]*z[350]*z[458]*z[60])/z[74];
  z[501] = z[208]/z[74];
  z[502] = -z[216]*z[60];
  z[503] = (-z[0]*z[17]*z[3]*z[6] + z[0]*z[38]*z[43] + z[103]*z[13]*z[17]/z[65] + z[103]*z[48]/z[65])/z[74];
  z[504] = -z[0]*z[294]*z[430]*(-z[103]*z[442] - z[103]*z[463] + z[103]);
  z[505] = z[224]/z[74];
  z[506] = -z[233]*z[60];
  z[507] = z[294]*(-z[138]*z[410] + z[190]*z[336] - z[292]*z[406] - z[36]*z[63] + z[406]*z[99]);
  z[508] = -z[294]*z[323]*(-z[120]*z[334] + z[128]*z[326]*z[36]*z[428] + z[128]*z[396]*z[428] + z[135]*z[338]*z[428] + z[354]*z[99] + z[357]*z[99]);
  z[509] = z[294]*(z[147]*z[36] - z[179]*z[336] - z[399]*z[99] + z[40]*(-z[111] - z[344]*z[36]*z[398]*z[427]) - z[402]*z[99]);
  z[510] = z[294]*(-z[132]*z[335]*z[40]*z[428] - z[132]*z[338]*z[36]*z[428] + z[140]*z[443] + z[321]*z[38]*z[99] - z[326]*z[43]*z[99] - z[330]*z[468]);
  z[511] = z[294]*z[323]*(-z[120]*z[404] + z[187]*z[36] + z[212]*z[325] - z[29]*z[40] - z[335]*z[63] - z[338]*z[469]);
  z[512] = z[294]*(z[215]*z[36] - z[330]*z[481] + z[336]*(-z[101]*z[424]*z[427] - z[170]) - z[38]*z[63] - z[40]*z[62] - z[421]*z[99]);
  z[513] = z[294]*(z[141]*z[36] + z[178]*z[355] + z[223]*z[40] + z[335]*z[469] - z[403]*(-z[111] - z[344]*z[36]*z[398]*z[427]));
  z[514] = z[294]*(-z[140]*z[373]*z[428] + z[141]*z[38] + z[162]*z[36] - z[229]*z[40] + z[329]*z[473] - z[335]*z[43]*z[99]);
  z[515] = z[294]*(z[120]*z[332]*z[336] - z[141]*z[325]*z[344] + z[150]*z[402] - z[186]*z[325]*z[344] + z[236]*z[40] + z[344]*z[358]*z[99]);

  ar[0] = -rear_.Iyy*z[318]*z[4] - z[0]*z[38]*z[385] + z[24]*z[318]*z[333] - z[25]*z[318]*z[336] - z[295]*(-z[127]*z[215] + z[131]*(-z[101]*z[424]*z[427] - z[170]) + z[62]*z[63]) - z[297]*(z[35]*z[42] + z[51]*z[52] + z[53]*z[54]) + z[330]*z[57] - z[336]*z[58] - z[36]*z[56] + z[43]*z[55];
  ar[1] = -z[21]*z[352] + z[22]*z[356] - z[24]*z[356] - z[25]*z[352] + z[28]*z[356] - z[295]*(z[127]*z[198] + z[131]*z[212] - z[47]*z[63]) - z[297]*(z[323]*z[328]*z[359]*z[54] - z[323]*z[330]*z[359]*z[52] + z[37]*z[42]) - z[322]*z[336]*z[385] + z[323]*z[34]*z[36] - z[326]*z[336]*z[55] + z[333]*z[57];
  ar[2] = front_.Ixx*z[36]*z[40] - z[0]*z[36]*z[385] - z[295]*(-z[127]*z[168] + z[131]*z[190] - z[386]*z[63]) - z[302]*z[397] + z[40]*z[55];
  ar[3] = -z[21]*z[328] + z[22]*z[330] + z[28]*z[330] + z[294]*(-z[267]*z[298] + z[289]) + z[296]*(z[176] - z[317]*z[341]*(z[323]*z[42] - z[328]*z[54] + z[330]*z[52])/z[377] - z[33]*(-z[317]*z[42] + z[323]*z[35] - z[328]*z[53] + z[330]*z[51] - z[333]*z[54] + z[336]*z[52]) - z[325]*z[339]*z[52]/(z[323]*z[377]) - z[339]*z[417]/(z[323]*z[377])) - z[34]*z[43] - z[413];
  ar[4] = z[167] + z[294]*(-z[262]*z[298] - z[288]) + z[296]*(-z[26]*z[37] - z[33]*(-z[102] + z[323]*z[37] - z[330]*z[54] - z[418]) - z[360]*z[367] - z[360]*z[368] + z[416] + z[434] + z[437]) + z[30]*z[36] + z[32]*z[336];
  ar[5] = front_.Ixx*z[335]*z[36] - front_.Ixz*z[373] + z[294]*(-z[125]*z[205] - z[251]*z[298] + z[280]) + z[304]*z[398] - z[335]*z[390] - z[34]*z[40];
  ar[6] = -front_.Ixx*z[321]*z[43] + z[294]*(z[199]*z[298]*z[317] - z[247]*z[314] + z[284]) + z[296]*(z[112] - z[118]*z[381] - z[33]*z[466] - z[359]*z[466]) + z[302]*z[329] - z[61];
  ar[7] = z[294]*(-z[261]*z[314] + z[282]) + z[300]*z[325]*z[344] - z[301]*z[344] - z[311]*(-z[33]*(-z[325]*z[52] - z[417]) + z[67]) - z[374];
  ar[8] = -z[124] + z[294]*(-z[244]*z[314] + z[281]) - z[300]*z[36] - z[302]*z[337];
  ar[9] = z[294]*(-z[199]*z[314]*z[325] + z[228] - z[247]*z[315]*z[317] + z[267]*z[312]) - z[58];
  ar[10] = z[294]*(z[201]*z[312]*z[317] + z[214]*z[315] + z[220] - z[261]*z[315]*z[317] + z[262]*z[312]) + z[45];
  ar[11] = z[294]*(z[207] - z[244]*z[315]*z[317] + z[248]*z[312]) - z[384];
  ar[12] = -z[118]*z[311]*z[33] + z[119]*z[310]*z[33] + z[119]*z[310]*z[359] - z[306];
  ar[13] = z[475];
  ar[14] = 0;
  ar[15] = z[294]*(z[199]*z[387] - z[283] + z[313]*z[325]*(z[127]*z[36] - z[131]*z[336] - z[217]*z[43] - z[330]*(-z[109]*z[424]*z[427] - z[170]) - z[38]*z[62] + z[446]) + z[394]*(z[217]*z[338] - z[319]*(-z[109]*z[424]*z[427] - z[170]) - z[335]*z[62])) + z[392];
  ar[16] = z[294]*(z[199]*z[365] - z[216]*z[312]*z[321] + z[261]*z[394] + z[262]*z[313]*z[325] + z[279]) - z[364];
  ar[17] = z[294]*(z[201]*z[388] + z[214]*z[315]*z[326] + z[245]*z[394] + z[251]*z[313]*z[325] + z[274]) + z[391];
  ar[18] = -z[311]*z[323]*z[97]/z[377];
  ar[19] = z[465];
  ar[20] = 0;
  ar[21] = -z[115]*z[311]*z[318]*z[323]/z[377];
  ar[22] = -z[311]*(z[10]*z[319]*z[39] + z[10]*z[325]*z[50] - z[102] + z[26]*z[349])/z[377];
  ar[23] = 0;
  ar[24] = z[492];
  ar[25] = z[491];
  ar[26] = 0;
  ar[27] = z[294]*(z[201]*z[40] + z[201]*z[453]*z[48] - z[214]*z[335]*z[38]*z[453] + z[335]*(-z[232]*z[330] + z[246]) - z[38]*(z[231] - z[232]*z[319]))/z[74];
  ar[28] = -z[294]*(-z[199]*z[325]*z[329] - z[199]*z[335]*z[458]*z[60] + z[216]*z[332] + z[261]*z[38] - z[262]*z[335] - z[442]*z[502])/z[74];
  ar[29] = z[294]*(-z[103]*z[201]*z[458] + z[201]*z[43] - z[214]*z[335]*z[484] + z[214]*z[338] - z[245]*z[38] + z[251]*z[335])/z[74];
  ar[30] = -z[294]*(-z[199]*z[335]*z[38]*z[453] - z[216]*z[40] - z[216]*z[453]*z[48] + z[247]*z[335] + z[267]*z[38])/z[74];
  ar[31] = -z[294]*(-z[199]*z[332] - z[199]*z[442]*z[60] - z[216]*z[325]*z[329] + z[261]*z[335] + z[262]*z[38] + z[335]*z[458]*z[502])/z[74];
  ar[32] = -z[294]*(z[103]*z[216]*z[458] - z[199]*z[335]*z[484] + z[199]*z[338] - z[216]*z[43] + z[244]*z[335] + z[248]*z[38])/z[74];
  ar[33] = z[512];
  ar[34] = z[511];
  ar[35] = z[507];
  ar[36] = -z[24]*z[330] - z[25]*z[328] + z[294]*(z[127]*z[393] + z[215]*z[388] + z[289] + z[315]*z[317]*(-z[101]*z[424]*z[427] - z[170]) - z[387]*z[63] - z[394]*z[62] + z[490]) + z[296]*(z[176] + z[317]*z[33]*z[42] + z[317]*z[359]*z[42] + z[328]*z[33]*z[53] - z[33]*z[330]*z[51] - z[33]*z[336]*z[52] - z[333]*z[431] - z[35]*z[381]) + z[319]*z[58] - z[338]*z[56] - z[413];
  ar[37] = z[167] + z[294]*(-z[127]*z[315]*z[331] - z[131]*z[312]*z[317] - z[198]*z[388] + z[212]*z[315]*z[317] - z[288] - z[365]*z[63] + z[394]*z[47]) + z[296]*(-z[26]*z[37] + z[33]*z[418] - z[330]*z[431] + z[339]*z[353]*z[400] + z[339]*z[355]*z[400] - z[360]*z[367] - z[360]*z[368] - z[37]*z[381] + z[416] + z[434] + z[437]) + z[325]*z[57] + z[334]*z[55];
  ar[38] = z[294]*(-z[125]*z[190] + z[127]*z[394] + z[168]*z[388] + z[190]*z[315]*z[317] + z[280] + z[386]*z[394] - z[388]*z[63]) - z[300]*z[398] + z[301]*z[40] + z[304]*z[398] - z[335]*z[390] + z[335]*z[55];
  ar[39] = z[294]*(-z[0]*z[113]*z[165] + z[0]*z[125]*z[171] + z[0]*z[141]*z[237] - z[113]*z[393] + z[141]*z[387] + z[165]*z[388] + z[171]*z[315]*z[317] - z[237]*z[394] - z[275]*z[298] + z[482]) + z[296]*(z[290]*z[317]*z[353]*z[400] + z[290]*z[317]*z[400]/z[323] + z[290]*z[372]*z[400] + z[317]*z[341]*(z[26]*z[323] - z[339]*z[348]/z[377] - z[339]*z[350]/z[377])/z[377] - z[318]*z[348]*z[360] - z[318]*z[350]*z[360] - z[33]*z[341]*z[348]*z[376] - z[33]*z[341]*z[350]*z[376] + z[33]*z[382] + z[33]*(-z[290]*z[317]*z[353]/z[377] - z[290]*z[372]/z[377] - z[341]*z[348]*z[376] - z[341]*z[350]*z[376] + z[382]) - z[348]*z[380] - z[350]*z[380] + z[359]*z[382]);
  ar[40] = front_.Iyy*z[320]*z[354] - z[21]*z[319] + z[22]*z[325] - z[23]*z[297]*(z[26] + z[381]) - z[24]*z[325] - z[25]*z[319] + z[28]*z[325] + z[294]*(-z[0]*z[113]*z[161] - z[0]*z[125]*z[197] - z[0]*z[141]*z[236] + z[161]*z[388] - z[197]*z[315]*z[317] + z[225] + z[236]*z[394] - z[277]*z[298]) + z[30]*z[338] - z[319]*z[32] - z[334]*z[34];
  ar[41] = z[294]*(-z[113]*z[159] - z[113]*z[394] - z[125]*z[189] + z[141]*z[227] + z[141]*z[388] - z[159]*z[388]/2 + z[189]*z[315]*z[317]/2 + z[227]*z[394]/2 - z[298]*(z[158]*z[43] - z[188]*z[330] + z[194] + z[226]*z[38])) - z[300]*z[361] + z[301]*z[335] + z[304]*z[322]*z[350] - z[335]*z[34];
  ar[42] = z[294]*(-z[110]*z[387] + z[111]*z[393] + z[153]*z[388] - z[157]*z[394] + z[169]*z[315]*z[317] + z[222]*z[298]*z[317] - z[254]*z[314] + z[285] + z[478]) + z[311]*(z[308]*z[33] + z[308]*z[359] + z[309]*z[33] + z[309]*z[359]);
  ar[43] = -z[123]*z[310] + z[294]*(-z[145]*z[394] - z[146]*z[388] + z[164]*z[315]*z[317] + z[181] - z[273]*z[314] + z[287]) + z[300]*z[332] - z[345] - z[363];
  ar[44] = -front_.Ixx*z[357] + z[294]*(-z[110]*z[388] + z[111]*z[394] + z[147]*z[388] - z[179]*z[315]*z[317] - z[265]*z[314] + z[286] + z[394]*(-z[111] - z[344]*z[36]*z[398]*z[427])) + z[301]*z[326] - z[68];
  ar[45] = z[294]*(-z[120]*z[229] + z[120]*z[387] - z[140]*z[141]*z[428] - z[140]*z[394]*z[428] - z[222]*z[314]*z[325] - z[257]*z[315]*z[317] + z[276]*z[312]);
  ar[46] = z[294]*(z[222]*z[312]*z[317] + z[233]*z[315] + z[269] - z[273]*z[315]*z[317] + z[277]*z[312]) - z[31];
  ar[47] = z[294]*(z[264] - z[265]*z[315]*z[317] + z[272]*z[312]) + z[345];
  ar[48] = 0;
  ar[49] = 0;
  ar[50] = 0;
  ar[51] = z[294]*(z[101]*z[314]*z[325]*z[427]*z[43] + z[101]*z[315]*z[401]*z[427] - z[101]*z[373]*z[427]*z[99] + z[120]*z[335]*z[427]*z[474] + z[120]*z[335]*z[428]*z[43] + z[140]*z[335]*z[36]*z[436] - z[162]*z[440] + z[222]*z[387] + z[257]*z[394] + z[276]*z[313]*z[325] - z[329]*z[350]*z[428]*z[99]);
  ar[52] = z[294]*(z[222]*z[365] - z[233]*z[312]*z[321] + z[273]*z[394] + z[277]*z[313]*z[325] + z[278] + z[312]*z[401]*z[428] - z[314]*z[325]*z[427]*z[43]*z[88] - z[315]*z[401]*z[427]*z[88] + z[464]) - z[346];
  ar[53] = z[294]*(z[222]*z[388] + z[233]*z[315]*z[326] + z[265]*z[394] + z[268] + z[272]*z[313]*z[325] + z[314]*z[398]*z[425]*z[427] + z[314]*z[405]*z[428] - z[315]*z[395]*z[410]*z[427] - z[315]*z[395]*z[428]) + z[347];
  ar[54] = 0;
  ar[55] = 0;
  ar[56] = 0;
  ar[57] = -z[310]*(z[340] - z[366]*(z[26] + z[290]*z[353]/z[377] + z[290]*z[355]/z[377] + z[339]*z[348]/(z[323]*z[377]) + z[339]*z[350]/(z[323]*z[377])));
  ar[58] = z[414];
  ar[59] = 0;
  ar[60] = z[460];
  ar[61] = z[383];
  ar[62] = 0;
  ar[63] = -z[294]*(-z[222]*z[40] - z[222]*z[453]*z[48] + z[233]*z[335]*z[38]*z[453] + z[254]*z[38] - z[275]*z[335] + z[313]*z[398]*z[458])/z[74];
  ar[64] = -z[294]*(-z[222]*z[325]*z[329] - z[222]*z[335]*z[458]*z[60] + z[233]*z[332] + z[273]*z[38] - z[277]*z[335] - z[312]*z[321] + z[342]*z[350]*z[471] - z[442]*z[506])/z[74];
  ar[65] = -z[294]*(z[103]*z[222]*z[458] - z[222]*z[43] + z[233]*z[335]*z[484] - z[233]*z[338] + z[265]*z[38] - z[270]*z[335] - z[313]*z[325]*z[484] + z[315]*z[326])/z[74];
  ar[66] = -z[294]*(-z[222]*z[335]*z[38]*z[453] - z[233]*z[40] - z[233]*z[453]*z[48] + z[254]*z[335] + z[275]*z[38] - z[387]*z[463] + z[387])/z[74];
  ar[67] = -z[294]*(-z[222]*z[332] - z[222]*z[442]*z[60] - z[233]*z[325]*z[329] + z[273]*z[335] + z[277]*z[38] + z[313]*z[405]*z[471] + z[335]*z[458]*z[506] + z[365])/z[74];
  ar[68] = -z[294]*(z[103]*z[233]*z[458] - z[222]*z[335]*z[484] + z[222]*z[338] - z[233]*z[43] + z[265]*z[335] + z[270]*z[38] + z[388] - z[394]*z[484])/z[74];
  ar[69] = z[514];
  ar[70] = z[515];
  ar[71] = z[513];
  ar[72] = z[294]*(-z[127]*z[315]*z[331] - z[131]*z[312]*z[317] + z[215]*z[371] + z[284] + z[312]*z[323]*(-z[101]*z[424]*z[427] - z[170]) + z[313]*z[336]*z[62] - z[365]*z[63]) + z[296]*(z[112] + z[218]) + z[321]*z[56] - z[61];
  ar[73] = z[294]*(-z[127]*z[312]*z[337] - z[198]*z[371] + z[212]*z[312]*z[323] + z[282] + z[312]*z[344]*z[63] - z[313]*z[336]*z[47] + z[490]) - z[311]*(-z[319]*z[33]*z[54] + z[325]*z[33]*z[52] + z[67]) + z[34]*z[344] - z[374];
  ar[74] = -z[124] + z[294]*(-z[127]*z[313]*z[336] + z[168]*z[371] + z[190]*z[312]*z[323] + z[281] - z[313]*z[336]*z[386] - z[371]*z[63]) + z[326]*z[55];
  ar[75] = z[294]*(z[165]*z[371] + z[171]*z[312]*z[323] + z[225] + z[237]*z[313]*z[336] - z[259]*z[298] + z[285]) - z[296]*(-rear_.a*z[325]*z[359]*z[4] - z[308]*z[339]/(z[323]*z[377]) - z[309]*z[323]*z[359] - z[309]*z[339]/(z[323]*z[377]) + z[317]*z[341]*z[35]/z[377] - z[33]*z[42]);
  ar[76] = z[294]*(z[113]*z[312]*z[337] - z[141]*z[312]*z[344] + z[161]*z[371] - z[197]*z[312]*z[323] - z[236]*z[313]*z[336] - z[256]*z[298] + z[287] + z[482]) + z[296]*(-z[307]*z[319]*z[359] - z[317]*z[327]*z[359] + z[33]*(-z[307]*z[319] - z[317]*z[327])) - z[30]*z[321] - z[363];
  ar[77] = z[294]*(z[113]*z[313]*z[336] + z[141]*z[371] - z[152]*z[371] + z[185]*z[312]*z[323] - z[223]*z[313]*z[336] - z[255]*z[298] + z[286]) - z[326]*z[34] - z[68];
  ar[78] = z[294]*(-z[0]*z[110]*z[157] + z[0]*z[111]*z[153] - z[0]*z[122]*z[169] + z[153]*z[371] + z[157]*z[313]*z[336] + z[169]*z[312]*z[323] + z[181] - z[242]*z[314] - z[298]*z[494] + z[318]*z[323]*z[9]) - z[310]*(z[100] + z[106] + z[123]);
  ar[79] = -z[23]*z[297]*z[381] + z[294]*(-z[0]*z[110]*z[145] - z[0]*z[111]*z[146] - z[0]*z[122]*z[164] + z[110]*z[312]*z[344] - z[111]*z[312]*z[337] + z[145]*z[313]*z[336] - z[146]*z[371] + z[164]*z[312]*z[323] - z[253]*z[314] + z[478]);
  ar[80] = z[294]*(z[0]*z[110]*(-z[111] - z[344]*z[36]*z[398]*z[427]) + z[0]*z[111]*z[147] + z[0]*z[122]*z[179] - z[110]*z[371] - z[111]*z[313]*z[336] + z[147]*z[371] - z[179]*z[312]*z[323] - z[250]*z[314] - z[313]*z[336]*(-z[111] - z[344]*z[36]*z[398]*z[427])) - z[300]*z[322] + z[304]*z[322];
  ar[81] = z[294]*(-z[175]*z[314]*z[325] - z[243]*z[315]*z[317] + z[258] + z[260]*z[312]);
  ar[82] = z[294]*(z[195]*z[315] - z[252] - z[253]*z[315]*z[317] + z[256]*z[312] - z[312]*z[494]);
  ar[83] = z[294]*(z[249] - z[250]*z[315]*z[317] + z[255]*z[312]) - z[303];
  ar[84] = -z[310]*(z[100] + z[106]);
  ar[85] = z[419];
  ar[86] = 0;
  ar[87] = z[294]*(-z[101]*z[316]*z[370]*z[427] + z[174]*z[387] + z[242]*z[394] + z[259]*z[313]*z[325] - z[271] - z[312]*z[323]*z[427]*z[474] + z[312]*z[401]*z[428] - z[314]*z[318]*z[358]*z[428] - z[464]);
  ar[88] = z[294]*(z[174]*z[365] + z[18]*z[316]*z[423]*z[427] - z[195]*z[312]*z[321] + z[253]*z[394] + z[256]*z[313]*z[325] - z[263] + z[312]*z[338]*z[349]*z[428] - z[312]*z[356]*z[427]*z[444] - z[314]*z[403]*z[428]);
  ar[89] = z[294]*(z[174]*z[388] + z[195]*z[315]*z[326] - z[266] - z[312]*z[397]*z[410]*z[427] - z[312]*z[397]*z[428] + z[313]*z[325]*(-z[148]*z[43] + z[160] + z[182]*z[330] + z[38]*(-z[111] - z[344]*z[403]*z[41]*z[427]/2)) - z[316]*z[370]*z[424]*z[427] + z[349]*z[362]*z[428] + z[394]*(z[139] + z[148]*z[338] + z[182]*z[319] + z[335]*(-z[111] - z[344]*z[403]*z[41]*z[427]/2))) + z[305];
  ar[90] = z[439];
  ar[91] = z[412];
  ar[92] = 0;
  ar[93] = z[414];
  ar[94] = z[415];
  ar[95] = 0;
  ar[96] = z[383];
  ar[97] = z[389];
  ar[98] = 0;
  ar[99] = z[294]*(z[175]*z[40] + z[175]*z[453]*z[48] - z[193]*z[335]*z[38]*z[453] - z[243]*z[38] + z[260]*z[335] - z[314]*z[40] - z[314]*z[453]*z[48] + z[317]*z[394])/z[74];
  ar[100] = z[294]*(z[175]*z[325]*z[329] - z[175]*z[458]*z[85] - z[193]*z[332] + z[193]*z[335]*z[477] - z[253]*z[38] + z[256]*z[335] + z[314]*z[458]*z[85] - z[323]*z[365])/z[74];
  ar[101] = -z[294]*(z[103]*z[174]*z[458] - z[103]*z[314]*z[458] - z[174]*z[43] + z[195]*z[335]*z[484] - z[195]*z[338] + z[250]*z[38] - z[255]*z[335] + z[314]*z[43])/z[74];
  ar[102] = -z[294]*(-z[174]*z[335]*z[38]*z[453] - z[195]*z[40] - z[195]*z[453]*z[48] + z[242]*z[335] + z[259]*z[38] + z[313]*z[336]*z[38]*z[453] + z[365])/z[74];
  ar[103] = -z[294]*(-z[174]*z[332] - z[174]*z[442]*z[60] - z[195]*z[325]*z[329] - z[195]*z[335]*z[458]*z[60] + z[253]*z[335] + z[256]*z[38] - z[312]*z[344] + z[314]*z[442]*z[60])/z[74];
  ar[104] = -z[294]*(z[103]*z[195]*z[458] - z[174]*z[335]*z[484] + z[174]*z[338] - z[195]*z[43] + z[250]*z[335] + z[255]*z[38] + z[313]*z[336]*z[484] + z[371])/z[74];
  ar[105] = z[510];
  ar[106] = z[508];
  ar[107] = z[509];
  ar[108] = z[294]*(-z[127]*(-z[312]*z[36] + z[314]*z[358]) - z[215]*z[83] + z[228] + z[62]*z[87] + z[63]*z[81]) - z[58];
  ar[109] = z[294]*(-z[127]*z[78] + z[198]*z[83] + z[220] - z[47]*z[86] - z[63]*z[82]) + z[45];
  ar[110] = z[294]*(-z[127]*z[87] - z[168]*z[83] + z[207] - z[386]*z[87] + z[63]*z[83]) - z[384];
  ar[111] = z[294]*(-z[120]*z[206]*z[428] + z[120]*z[387] - z[132]*z[362]*z[428]*z[71] - z[140]*z[141]*z[428] - z[140]*z[394]*z[428] + z[141]*z[298]*z[70] - z[206]*z[298]*z[428]*z[76] - z[313]*z[450]*z[69]);
  ar[112] = z[294]*(z[113]*z[78] + z[141]*z[82] - z[161]*z[83] - z[236]*z[87] + z[269]) - z[31];
  ar[113] = z[294]*(z[113]*z[86] - z[141]*z[83] + z[152]*z[83] - z[223]*z[86] + z[264]) + z[345];
  ar[114] = z[294]*(-z[132]*z[315]*z[326]*z[428]*z[71] + z[156]*z[84] + z[258] + z[449]*z[80] - z[451]*z[89]);
  ar[115] = z[294]*(-z[128]*z[313]*z[323]*z[428]*z[76] - z[128]*z[314]*z[326]*z[428]*z[71] - z[252]);
  ar[116] = z[294]*(z[110]*z[83] - z[111]*z[87] - z[147]*z[83] + z[249] - z[87]*(-z[111] - z[344]*z[36]*z[398]*z[427])) - z[303];
  ar[117] = z[294]*(z[0]*z[120]*z[140]*z[428] - z[120]*z[378] - z[120]*z[408] - z[120]*z[80] - z[140]*z[312]*z[38]*z[428] + z[140]*z[317]*z[362]*z[428] + z[140]*z[428]*z[84] + z[318]*z[355]*z[9]);
  ar[118] = z[294]*(-z[0]*z[120]*z[135]*z[428] - z[10]*z[320]*z[343] - z[120]*z[27] + z[120]*z[379] + z[120]*z[409] + z[135]*z[312]*z[38]*z[428] - z[135]*z[317]*z[362]*z[428] - z[135]*z[428]*z[84] + z[320]*z[343]);
  ar[119] = z[294]*(z[0]*z[120]*z[428]*z[479] - z[116]*z[362]*z[395]*z[428] + z[116]*z[38]*z[408]*z[428] + z[116]*z[387]*z[428]*z[76] - z[120]*z[312]*z[43] + z[120]*z[422] - z[316]*z[317]*z[473]);
  ar[120] = 0;
  ar[121] = 0;
  ar[122] = 0;
  ar[123] = -z[294]*z[325]*(-z[101]*z[314]*z[427]*z[71] - z[317]*z[422]*z[428] - z[323]*z[38]*z[9] + z[323]*z[428]*z[89] + z[395]*z[9]);
  ar[124] = z[294]*z[298]*(z[121] + z[333]*z[428]*z[71] + z[349]*z[361]*z[428] - z[370]*z[427]*z[59]*z[71]);
  ar[125] = -z[294]*z[325]*(-z[314]*z[424]*z[427]*z[71] + z[317]*z[43]*z[9] + z[323]*z[428]*z[84] - z[334]*z[9]);
  ar[126] = 0;
  ar[127] = 0;
  ar[128] = 0;
  ar[129] = 0;
  ar[130] = 0;
  ar[131] = 0;
  ar[132] = 0;
  ar[133] = 0;
  ar[134] = 0;
  ar[135] = z[496];
  ar[136] = z[500];
  ar[137] = z[499];
  ar[138] = z[294]*(z[0]*z[38]*z[481] + z[120]*z[453]*z[49] + z[140]*z[369]*z[428] + z[140]*z[428]*z[48] + z[362]*z[395]*z[458] + z[38]*z[442]*z[481] - z[408]*z[463] + z[81])/z[74];
  ar[139] = -z[294]*(z[120]*z[14]*z[18]*z[471] + z[120]*z[318]*z[335]*z[38] - z[120]*z[320]*z[354] - z[120]*z[335]*z[463]*z[60] + z[135]*z[369]*z[428] + z[135]*z[428]*z[48] - z[312]*z[335]*z[458]*z[60] + z[342]*z[351]*z[471] + z[82])/z[74];
  ar[140] = z[294]*(-z[0]*z[120]*z[426] - z[103]*z[120]*z[442] - z[103]*z[120]*z[463] - z[103]*z[312]*z[458] - z[120]*z[322]*z[358] - z[317]*z[362]*z[484] + z[369]*z[428]*z[479] + z[428]*z[479]*z[48] + z[83])/z[74];
  ar[141] = z[221];
  ar[142] = z[495];
  ar[143] = z[180];
  ar[144] = z[218]*z[296] - z[306];
  ar[145] = z[475];
  ar[146] = 0;
  ar[147] = 0;
  ar[148] = 0;
  ar[149] = 0;
  ar[150] = -z[310]*(z[100] + z[123]);
  ar[151] = z[419];
  ar[152] = 0;
  ar[153] = 0;
  ar[154] = 0;
  ar[155] = 0;
  ar[156] = -rear_.r*z[297]*z[317]*z[381];
  ar[157] = 0;
  ar[158] = 0;
  ar[159] = 0;
  ar[160] = 0;
  ar[161] = 0;
  ar[162] = z[433];
  ar[163] = 0;
  ar[164] = 0;
  ar[165] = 0;
  ar[166] = 0;
  ar[167] = 0;
  ar[168] = 0;
  ar[169] = 0;
  ar[170] = 0;
  ar[171] = 0;
  ar[172] = 0;
  ar[173] = 0;
  ar[174] = 0;
  ar[175] = 0;
  ar[176] = 0;
  ar[177] = 0;
  ar[178] = 0;
  ar[179] = 0;
  ar[180] = z[294]*(z[108]*z[217] - z[127]*(z[313]*z[403] + z[315]*z[399]) - z[131]*z[81] - z[283] - z[87]*(-z[109]*z[424]*z[427] - z[170])) + z[392];
  ar[181] = z[294]*(-z[107]*z[127] - z[108]*z[198] + z[131]*z[82] - z[212]*z[87] + z[279]) - z[364];
  ar[182] = z[294]*(z[108]*z[168] - z[131]*z[83] - z[205]*z[86] + z[274]) + z[391];
  ar[183] = -z[294]*z[325]*(z[101]*z[120]*z[402]*z[427] - z[101]*z[298]*z[427]*z[94] - z[101]*z[344]*z[427]*z[450] + z[120]*z[313]*z[70] - z[120]*z[321]*z[428]*z[43] + z[140]*z[321]*z[428]*z[84] + z[140]*z[402]*z[436] - z[162]*z[298]*z[96] + z[162]*z[323]*z[428] + z[313]*z[450]*z[95] + z[329]*z[428]*z[450]);
  ar[184] = z[294]*(z[107]*z[113] + z[108]*z[161] - z[125]*z[82] + z[197]*z[87] + z[278] + z[298]*(-z[328]*z[36]*z[428] + z[330]*z[36]*z[427]*z[88] + z[333]*z[428]*z[43] - z[336]*z[427]*z[43]*z[88])) - z[346];
  ar[185] = z[294]*(-z[108]*z[152] + z[125]*z[83] - z[185]*z[86] + z[268] - z[298]*(z[330]*z[40]*z[428] + z[330]*z[427]*z[429] + z[336]*z[36]*z[421]*z[427] + z[38]*z[440])) + z[347];
  ar[186] = z[294]*(-z[120]*z[316]*z[70] - z[132]*z[316]*z[428]*z[448] + z[140]*z[316]*z[428]*z[76] + z[206]*z[314]*z[428] - z[271] + z[298]*z[317]*z[428]*z[69] - z[315]*z[451]*z[95]);
  ar[187] = z[294]*(-z[120]*z[314]*z[357] + z[128]*z[371]*z[428]*z[96] - z[135]*z[316]*z[428]*z[76] - z[192]*z[314]*z[428] - z[263] + z[312]*z[451]*z[96]);
  ar[188] = z[294]*(z[108]*z[149]/2 - z[122]*z[83] + z[183]*z[87]/2 - z[266] - z[314]*(-front_.R*z[0]*z[17]*z[3]*z[4]/z[72] + front_.R*z[0]*z[2]*z[40]/z[72] + front_.R*z[17]*z[36]*z[4]*z[41]*z[6]/z[73] - front_.R*z[2]*z[41]*z[46]/z[73])/2) + z[305];
  ar[189] = z[299]*z[325]*(z[206]*z[317]*z[428] + z[314]*z[38] - z[317]*z[387] - z[319]*z[427]*z[488] - z[323]*z[428]*z[69]);
  ar[190] = z[294]*z[298]*(z[121] - z[192]*z[330]*z[428] - z[209]*z[319]*z[428] + z[328]*z[428]*z[69] + z[428]*z[445]);
  ar[191] = z[299]*z[325]*(-z[184]*z[319]*z[428] + z[312]*z[326] - z[317]*z[388] - z[317]*z[428]*(-z[337]*z[40]*z[411]/z[64] + z[404]*z[461] - z[70]));
  ar[192] = 0;
  ar[193] = 0;
  ar[194] = 0;
  ar[195] = z[294]*(z[0]*z[101]*z[370]*z[435] - z[0]*z[101]*z[410]*z[435] + z[0]*z[40]*z[407] - z[0]*z[425]*z[436] + z[101]*z[314]*z[427]*z[448] + z[17]*z[298]*z[317]*z[428]*z[96] - z[206]*z[394]*z[428] + z[314]*z[350]*z[428]*z[95] - z[318]*z[355]*z[436] - z[362]*z[427]*z[488] + z[387]*z[428]*z[69] - z[393]*z[428]*z[70] + z[427]*z[474]*z[84] + z[428]*z[43]*z[84]);
  ar[196] = z[294]*(-z[0]*z[18]*z[423]*z[435] - z[13]*z[320]*z[343] - z[18]*z[298]*z[349]*z[427]*z[59]*z[96] + z[192]*z[394]*z[428] - z[209]*z[313]*z[325]*z[428] - z[27]*z[36]*z[428] - z[312]*z[335]*z[428]*z[94] + 2*z[312]*z[440]*z[96] + z[318]*z[335]*z[407] - z[320]*z[356]*z[436] + z[324]*z[325]*z[410]*z[435]*z[59] - z[324]*z[338]*z[36]*z[436] - z[336]*z[427]*z[444]*z[84] + z[365]*z[428]*z[69] - z[443]*z[84]);
  ar[197] = z[294]*(z[0]*pow(z[36], 2)*z[424]*z[435] + z[0]*z[370]*z[424]*z[435] + z[0]*z[407]*z[43] - z[0]*z[424]*z[436] - z[184]*z[362]*z[428] - z[314]*z[40]*z[411]*z[427]*z[96] + z[316]*z[428]*z[445] + z[322]*z[326]*z[350]*z[9] + z[388]*z[428]*z[69] - z[393]*z[428]*z[71] + z[394]*z[428]*(-z[337]*z[40]*z[411]/z[64] + z[404]*z[461] - z[70]) + z[40]*z[428]*z[84] + z[427]*z[429]*z[84]);
  ar[198] = 0;
  ar[199] = 0;
  ar[200] = 0;
  ar[201] = 0;
  ar[202] = 0;
  ar[203] = 0;
  ar[204] = 0;
  ar[205] = 0;
  ar[206] = 0;
  ar[207] = z[294]*(z[0]*z[38]*z[387] + z[206]*z[38]*z[428] - z[342]*z[350]*z[38]*z[453] - z[361]*z[38]*z[428]*z[453]*z[94] - z[361]*z[427]*z[488] - z[387]*z[430]*z[49] + z[428]*z[452]*z[463] - z[428]*z[452])/z[74];
  ar[208] = -z[294]*(z[13]*z[18]*z[428]*z[471]*z[94] + z[191] + z[192]*z[38]*z[428] + z[209]*z[335]*z[428] - z[325]*z[329]*z[428]*z[69] + z[325]*z[332]*z[428]*z[94] - z[335]*z[428]*z[458]*z[60]*z[69])/z[74];
  ar[209] = z[294]*(z[0]*z[313]*z[358] + z[0]*z[38]*z[388] - z[103]*z[428]*z[458]*z[69] - z[184]*z[361]*z[428] - z[342]*z[350]*z[484] - z[358]*z[428]*z[94] - z[361]*z[428]*z[484]*z[94] - z[38]*z[428]*(-z[337]*z[40]*z[411]/z[64] + z[404]*z[461] - z[70]) + z[428]*z[43]*z[69] + z[447]*z[463])/z[74];
  ar[210] = -z[294]*z[428]*z[432]*(z[206]*z[321] + z[38]*z[485]*z[94] - z[396]*z[458]*z[69] + z[40]*z[94] + z[453]*z[48]*z[94]);
  ar[211] = z[294]*z[428]*(-z[192]*z[335] + z[209]*z[38] + z[329]*z[445] + z[332]*z[69] - z[335]*z[477]*z[69] + z[405]*z[477]*z[94])/z[74];
  ar[212] = -z[294]*z[428]*z[432]*(-z[103]*z[458]*z[94] + z[184]*z[38] + z[321]*z[484]*z[69] - z[321]*(-z[337]*z[40]*z[411]/z[64] + z[404]*z[461] - z[70]) - z[326]*z[69] + z[43]*z[94]);
  ar[213] = 0;
  ar[214] = 0;
  ar[215] = 0;
  ar[216] = -z[296]*z[377]*z[97];
  ar[217] = z[465];
  ar[218] = 0;
  ar[219] = 0;
  ar[220] = 0;
  ar[221] = 0;
  ar[222] = z[439];
  ar[223] = z[412];
  ar[224] = 0;
  ar[225] = 0;
  ar[226] = 0;
  ar[227] = 0;
  ar[228] = z[433];
  ar[229] = 0;
  ar[230] = 0;
  ar[231] = 0;
  ar[232] = 0;
  ar[233] = 0;
  ar[234] = 0;
  ar[235] = 0;
  ar[236] = 0;
  ar[237] = 0;
  ar[238] = 0;
  ar[239] = 0;
  ar[240] = 0;
  ar[241] = 0;
  ar[242] = 0;
  ar[243] = 0;
  ar[244] = 0;
  ar[245] = 0;
  ar[246] = 0;
  ar[247] = 0;
  ar[248] = 0;
  ar[249] = 0;
  ar[250] = 0;
  ar[251] = 0;
  ar[252] = -z[115]*z[296]*z[318]*z[377];
  ar[253] = z[296]*(-z[16]*z[26]/z[377] - z[333]*z[375]*z[39] - z[336]*z[375]*z[50] - z[339]*z[348] - z[339]*z[350]);
  ar[254] = 0;
  ar[255] = z[310]*(z[26]*z[366] - z[290]*z[348] - z[290]*z[350] + z[339]*z[348]/z[349] + z[339]*z[350]/z[349] - z[340]);
  ar[256] = z[414];
  ar[257] = 0;
  ar[258] = z[414];
  ar[259] = z[415];
  ar[260] = 0;
  ar[261] = 0;
  ar[262] = 0;
  ar[263] = 0;
  ar[264] = 0;
  ar[265] = 0;
  ar[266] = 0;
  ar[267] = 0;
  ar[268] = 0;
  ar[269] = 0;
  ar[270] = 0;
  ar[271] = 0;
  ar[272] = 0;
  ar[273] = 0;
  ar[274] = 0;
  ar[275] = 0;
  ar[276] = 0;
  ar[277] = 0;
  ar[278] = 0;
  ar[279] = 0;
  ar[280] = 0;
  ar[281] = 0;
  ar[282] = 0;
  ar[283] = 0;
  ar[284] = 0;
  ar[285] = 0;
  ar[286] = 0;
  ar[287] = 0;
  ar[288] = z[492];
  ar[289] = z[491];
  ar[290] = 0;
  ar[291] = z[460];
  ar[292] = z[383];
  ar[293] = 0;
  ar[294] = z[383];
  ar[295] = z[389];
  ar[296] = 0;
  ar[297] = 0;
  ar[298] = 0;
  ar[299] = 0;
  ar[300] = 0;
  ar[301] = 0;
  ar[302] = 0;
  ar[303] = 0;
  ar[304] = 0;
  ar[305] = 0;
  ar[306] = 0;
  ar[307] = 0;
  ar[308] = 0;
  ar[309] = 0;
  ar[310] = 0;
  ar[311] = 0;
  ar[312] = 0;
  ar[313] = 0;
  ar[314] = 0;
  ar[315] = 0;
  ar[316] = 0;
  ar[317] = 0;
  ar[318] = 0;
  ar[319] = 0;
  ar[320] = 0;
  ar[321] = 0;
  ar[322] = 0;
  ar[323] = 0;
  ar[324] = z[294]*(z[126]*(-z[104]*z[424]*z[427]/2 - z[170]) + z[129]*z[215] + z[203]*z[481] - z[213]*z[469]);
  ar[325] = -z[294]*(-z[187]*z[336]*z[96] - z[196]*z[481] + z[211]*z[469] - z[212]*z[76])/z[74];
  ar[326] = z[294]*(z[120]*z[204]*z[454] + z[126]*z[190] + z[129]*z[138]*z[36] - z[398]*z[483]*z[96]*z[99]);
  ar[327] = -z[294]*z[335]*(z[120]*(-z[329]*z[350]*z[38]*z[453] - z[404]*z[463] + z[70]) + z[132]*z[428]*z[448] - z[140]*z[428]*z[76] + z[387]*z[458] - z[450]*(-z[396]*z[426]*z[430] + z[399]*z[463] - z[95]))/z[74];
  ar[328] = -z[294]*z[321]*(-z[126]*z[186] + z[129]*z[150] - z[219]*z[467] + z[230]*z[450] - z[312]/z[74] + z[315]*z[476]);
  ar[329] = -z[294]*z[432]*(-z[120]*z[204]*z[321] - z[178]*z[76] + z[313]*z[484] - z[316] + z[325]*z[96]*(-z[111] - z[344]*z[36]*z[398]*z[427]) - z[335]*z[484]*z[96]*z[99]);
  ar[330] = z[294]*(z[126]*z[326]*z[428]*(z[104]*z[36]/z[64] - z[44])/2 - z[129]*z[132]*z[338]*z[428] + z[203]*z[468] - z[213]*z[451] + z[314]*z[40]*z[462] + z[314]*z[454] + z[317]*z[394]/z[74]);
  ar[331] = z[294]*(-z[126]*z[135]*z[326]*z[428] - z[128]*z[129]*z[337]*z[428] + z[219]*z[468] - z[230]*z[451] + z[314]*z[457]*z[85] - z[323]*z[441]);
  ar[332] = z[294]*(z[103]*z[314]*z[457] - z[126]*z[179] + z[129]*z[147] + z[204]*z[468]/z[74] + z[314]*z[455] - z[338]*z[483]*z[96]*z[99]);
  ar[333] = z[496];
  ar[334] = z[500];
  ar[335] = z[499];
  ar[336] = 0;
  ar[337] = 0;
  ar[338] = 0;
  ar[339] = z[294]*(z[0]*z[387]*z[459] + z[101]*z[129]*z[336]*z[427] - z[126]*z[427]*z[474] - z[126]*z[428]*z[43] + z[129]*z[330]*z[428] + z[203]*z[36]*z[428] - z[213]*z[440] + z[342]*z[350]*z[40]*z[457] + z[387]*z[49]/z[75]);
  ar[340] = -z[294]*(z[18]*z[349]*z[427]*z[59]*z[96] + z[191] - z[196]*z[36]*z[428] + z[211]*z[440] - z[325]*z[333]*z[428]*z[96] - z[336]*z[427]*z[444]*z[76] - z[443]*z[76])/z[74];
  ar[341] = z[294]*(z[0]*z[313]*z[358]/z[74] + z[0]*z[388]*z[459] - z[126]*z[40]*z[428] - z[126]*z[427]*z[429] + z[129]*z[336]*z[424]*z[427] + z[204]*z[428]*z[456] - z[342]*z[350]*z[483] - z[355]*z[428]*z[483]*z[96] + z[447]*z[462]);
  ar[342] = 0;
  ar[343] = 0;
  ar[344] = 0;
  ar[345] = 0;
  ar[346] = 0;
  ar[347] = 0;
  ar[348] = 0;
  ar[349] = 0;
  ar[350] = 0;
  ar[351] = z[493];
  ar[352] = z[497];
  ar[353] = z[504];
  ar[354] = 0;
  ar[355] = 0;
  ar[356] = 0;
  ar[357] = 0;
  ar[358] = 0;
  ar[359] = 0;
  ar[360] = z[294]*(-z[137]*z[446]*z[459] + z[177]*z[398]*z[489] - z[208]*z[454]*z[99] + z[215]*z[486] + z[420]*(-z[101]*z[424]*z[427] - z[170])/z[74] + z[62]*z[74]);
  ar[361] = z[294]*(z[120]*z[210]*z[454] + z[130]*z[187]*z[323] + z[212]*z[420]/z[74] - z[235]*z[469] + z[29]*z[323]*z[74] + z[498]*z[63]);
  ar[362] = z[294]*(z[103]*z[138]*z[456] + z[190]*z[420]/z[74] + z[200]*z[398]*z[489] - z[224]*z[454]*z[99] - z[386]*z[74] + z[503]*z[63]);
  ar[363] = z[294]*(z[130]*z[162] - z[137]*z[141]*z[38]*z[454] - z[140]*z[361]*z[428]*z[472] + z[177]*z[361]*z[489] + z[229]*z[74] + z[335]*z[501]*z[99] + z[387]*z[462] - z[387]/z[74]);
  ar[364] = z[294]*(-z[141]*z[202]/z[74] - z[150]*z[321]*z[486] - z[186]*z[335]*z[472] - z[236]*z[74] - z[313]*z[405]*z[470] - z[335]*z[489]*(z[117] + z[325]*z[332]*z[480] + z[330]*z[458]*z[91]) + z[335]*z[99]*(-z[320]*z[326]*z[335] - z[325]*z[329]*z[43] + z[326]*z[330]*z[38] - z[326]*z[361]*z[480] + z[426]*z[480])/z[74] - z[441]);
  ar[365] = z[294]*(z[120]*z[335]*z[432]*(-z[317]*z[38]*z[487] + z[318]*z[43] - z[320]*z[326] - z[332]*z[487])/2 - z[130]*z[325]*(z[111] + z[344]*z[36]*z[398]*z[427]) - z[141]*z[234] + z[178]*z[438]*z[60] - z[223]*z[74] + z[335]*z[505]*z[99] - z[388]/z[74] + z[394]*z[483]);
  ar[366] = z[294]*(z[132]*z[335]*z[428]*z[74] - z[132]*z[338]*z[428]*z[486] + z[137]*z[396]*z[459]*z[99] - z[140]*z[338]*z[428]*z[472] + z[177]*z[338]*z[489] + z[313]*z[336]*z[40]*z[457] - z[441] - z[451]*z[501]);
  ar[367] = z[294]*(-z[128]*z[130]*z[337]*z[428] - z[128]*z[344]*z[428]*z[74] + z[135]*z[338]*z[428]*z[472] + z[210]*z[468]/z[74] - z[235]*z[451] + z[312]*z[344]/z[74] + z[313]*z[336]*z[476] + z[449]*z[498]);
  ar[368] = z[294]*(z[147]*z[486] - z[179]*z[420]/z[74] + z[200]*z[338]*z[489] - z[313]*z[336]*z[483] - z[371]/z[74] + z[449]*z[503] - z[451]*z[505] - z[74]*(-z[111] - z[344]*z[36]*z[398]*z[427]));
  ar[369] = z[294]*(-z[120]*z[137]*z[38]*z[454] + z[140]*z[428]*z[74] + z[362]*z[395]*z[457] + z[378]/z[74] - z[408]*z[462] + z[408]/z[74]);
  ar[370] = z[294]*(-z[135]*z[428]*z[74] - z[202]*z[489] + z[312]*z[335]*z[457]*z[60] - z[342]*z[351]*z[470] - z[379]/z[74] - z[409]/z[74]);
  ar[371] = z[294]*(-z[103]*z[312]*z[457] - z[120]*z[234] - z[312]*z[455] + z[316]*z[317]*z[438] - z[317]*z[362]*z[483] + z[428]*z[479]*z[74]);
  ar[372] = 0;
  ar[373] = 0;
  ar[374] = 0;
  ar[375] = -z[294]*z[428]*z[432]*(z[103]*z[317] + z[103]*z[323]*z[485] - z[177]*z[36] - z[208]*z[323] + z[43]*z[60] + z[474]*z[60]/z[64]);
  ar[376] = z[294]*z[428]*(z[130]*z[333] - z[130]*z[370]*z[59]/z[64] + z[210]*z[456] - z[235]*z[336] - z[337]*z[438]*z[60] + z[355]*z[444]*z[472]/z[64]);
  ar[377] = -z[294]*z[428]*z[432]*(-z[103]*z[36]*z[397]/z[64] - z[200]*z[36] - z[224]*z[323] + z[40]*z[60] + z[429]*z[60]/z[64]);
  ar[378] = 0;
  ar[379] = 0;
  ar[380] = 0;
  ar[381] = 0;
  ar[382] = 0;
  ar[383] = 0;
  ar[384] = 0;
  ar[385] = 0;
  ar[386] = 0;
  ar[387] = 0;
  ar[388] = 0;
  ar[389] = 0;
  ar[390] = z[493];
  ar[391] = z[497];
  ar[392] = z[504];
  ar[393] = 0;
  ar[394] = 0;
  ar[395] = 0;
  ar[396] = z[512];
  ar[397] = z[511];
  ar[398] = z[507];
  ar[399] = z[514];
  ar[400] = z[515];
  ar[401] = z[513];
  ar[402] = z[510];
  ar[403] = z[508];
  ar[404] = z[509];
  ar[405] = z[221];
  ar[406] = z[495];
  ar[407] = z[180];
  ar[408] = 0;
  ar[409] = 0;
  ar[410] = 0;
  ar[411] = 0;
  ar[412] = 0;
  ar[413] = 0;
  ar[414] = 0;
  ar[415] = 0;
  ar[416] = 0;
  ar[417] = 0;
  ar[418] = 0;
  ar[419] = 0;
  ar[420] = 0;
  ar[421] = 0;
  ar[422] = 0;
  ar[423] = 0;
  ar[424] = 0;
  ar[425] = 0;
  ar[426] = 0;
  ar[427] = 0;
  ar[428] = 0;
  ar[429] = 0;
  ar[430] = 0;
  ar[431] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (12)
 *
 * @param[out] a C-array of with 12 elements
 */
//  void Bicycle::gif_ud_zero(double ar[12]) const;
void Bicycle::gif_ud_zero(double ar[12]) const
{
  double * z = new double[119];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = pow(z[0], 2);
  z[7] = pow(z[2], 2);
  z[8] = pow(z[3], 2);
  z[9] = pow(z[4], 2);
  z[10] = state_[10] + state_[8]*z[0];
  z[11] = sqrt(z[8]);
  z[12] = pow(z[10], 2);
  z[13] = state_[10]*z[3] + state_[12]*z[3];
  z[14] = rear_.a*z[1] - rear_.b*z[4];
  z[15] = state_[8]*z[3]*z[4] + state_[9]*z[1];
  z[16] = state_[8]*z[1]*z[3] - state_[9]*z[4];
  z[17] = state_[11] + z[15];
  z[18] = -rear_.R/z[11] - rear_.r;
  z[19] = z[0]*z[5] + z[1]*z[2]*z[3];
  z[20] = rear_.a*z[3]*z[4] + rear_.b*z[1]*z[3];
  z[21] = -z[15];
  z[22] = z[0]*z[1]*z[5] + z[2]*z[3];
  z[23] = -z[0]*z[2] + z[1]*z[3]*z[5];
  z[24] = -z[23];
  z[25] = -z[0]*z[1]*z[2] + z[3]*z[5];
  z[26] = -z[25];
  z[27] = rear_.R*z[0]*z[1]*z[3]/z[11] + rear_.a*z[0];
  z[28] = rear_.R*z[0]*z[3]*z[4]/z[11] - rear_.b*z[0];
  z[29] = state_[10]*state_[11]*z[4] + state_[10]*state_[13]*z[1]*z[2] - state_[11]*state_[13]*z[4]*z[5];
  z[30] = -state_[10]*state_[8]*z[1]*z[3] + state_[10]*state_[9]*z[4] - state_[8]*state_[9]*z[0]*z[4];
  z[31] = -state_[10]*state_[8]*z[3]*z[4] - state_[10]*state_[9]*z[1] + state_[8]*state_[9]*z[0]*z[1];
  z[32] = front_.a*z[3]*z[4] - front_.b*z[24];
  z[33] = -rear_.a*z[21] + rear_.b*z[16];
  z[34] = -state_[10]*z[5] - state_[8]*z[19] + state_[9]*z[2]*z[4];
  z[35] = -rear_.Ixx*z[16] - rear_.Ixz*z[21];
  z[36] = -rear_.Ixz*z[16] - rear_.Izz*z[21];
  z[37] = -state_[10]*z[2] - state_[8]*z[24] - state_[9]*z[4]*z[5];
  z[38] = -front_.r*z[0]*z[2]*z[9] - front_.r*z[1]*z[26];
  z[39] = -state_[10]*z[3]*z[4]*z[5] + state_[11]*z[0]*z[5] + state_[11]*z[1]*z[2]*z[3] + state_[9]*z[0]*z[1]*z[5] + state_[9]*z[2]*z[3];
  z[40] = front_.R*z[2]*z[3]*z[4]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.b*z[2];
  z[41] = front_.R*z[3]*z[4]*z[5]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.b*z[5];
  z[42] = -state_[10]*z[0]*z[2]*z[4] - state_[11]*z[0]*z[1]*z[5] - state_[11]*z[2]*z[3] - state_[9]*z[0]*z[5] - state_[9]*z[1]*z[2]*z[3];
  z[43] = -front_.Ixx*z[37] + front_.Ixz*z[17];
  z[44] = -front_.Ixz*z[37] + front_.Izz*z[17];
  z[45] = front_.a*z[17] + front_.b*z[37];
  z[46] = front_.R*z[2]*z[3]*z[9]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.b*z[2]*z[4];
  z[47] = front_.R*z[24]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.a;
  z[48] = front_.R*z[24]*z[5]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.a*z[5];
  z[49] = rear_.R*pow(state_[9], 2)*z[0]/(z[11]*z[3]) + state_[8]*(state_[14]*z[3]/z[11] + z[13]*z[18]);
  z[50] = front_.R*z[2]*z[24]*z[4]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.a*z[2]*z[4];
  z[51] = -state_[10]*state_[11]*z[0]*z[1] + state_[10]*state_[9]*z[0] + state_[11]*state_[9]*z[3]*z[4] - state_[13]*z[42];
  z[52] = -state_[10]*state_[8]*z[3]*z[4]*z[5] - state_[10]*state_[9]*z[1]*z[5] + state_[11]*z[10]*z[5] + state_[11]*z[16]*z[2] + state_[8]*state_[9]*z[22];
  z[53] = state_[10]*state_[11]*z[5] - state_[10]*state_[9]*z[1]*z[5] - state_[11]*state_[9]*z[2]*z[4] + state_[8]*z[39];
  z[54] = state_[10]*state_[8]*z[2]*z[3]*z[4] + state_[10]*state_[9]*z[1]*z[2] - state_[11]*z[10]*z[2] + state_[11]*z[16]*z[5] - state_[8]*state_[9]*z[26];
  z[55] = state_[10]*state_[11]*z[2] - state_[10]*state_[9]*z[1]*z[2] + state_[11]*state_[9]*z[4]*z[5] - state_[8]*(state_[10]*z[2]*z[3]*z[4] - state_[11]*z[0]*z[2] + state_[11]*z[1]*z[3]*z[5] - state_[9]*z[0]*z[1]*z[2] + state_[9]*z[3]*z[5]);
  z[56] = front_.R*z[19]*z[3]*z[4]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.b*z[19];
  z[57] = front_.R*z[19]*z[24]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.a*z[19];
  z[58] = -rear_.R*state_[9]*z[0]*z[13]/(z[11]*z[3]) - state_[8]*(state_[15]*z[3]/z[11] - state_[9]*z[18]) - z[18]*(state_[10]*state_[9]*z[0] + state_[12]*state_[9]*z[0]);
  z[59] = state_[10]*z[1]*z[4]*z[7] - state_[11]*z[2]*z[5]*z[9] + z[26]*z[42];
  z[60] = state_[10]*z[1]*z[4]*z[8] + state_[9]*z[0]*z[3]*z[9] - z[24]*z[39];
  z[61] = 2*state_[10]*z[1]*z[4]*z[7] - 2*state_[11]*z[2]*z[5]*z[9] - z[26]*(2*state_[10]*z[0]*z[2]*z[4] + 2*state_[11]*z[0]*z[1]*z[5] + 2*state_[11]*z[2]*z[3] + 2*state_[9]*z[0]*z[5] + 2*state_[9]*z[1]*z[2]*z[3]);
  z[62] = 2*state_[10]*z[1]*z[4]*z[8] + 2*state_[9]*z[0]*z[3]*z[9] - z[24]*(-2*state_[10]*z[3]*z[4]*z[5] + 2*state_[11]*z[0]*z[5] + 2*state_[11]*z[1]*z[2]*z[3] + 2*state_[9]*z[0]*z[1]*z[5] + 2*state_[9]*z[2]*z[3]);
  z[63] = front_.R*z[1]*z[24]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[3]*z[5]*z[9]/sqrt(pow(z[24], 2) + z[8]*z[9]);
  z[64] = rear_.Iyy*state_[8]*state_[9]*z[3] + z[16]*z[36] - z[21]*z[35];
  z[65] = front_.r*(state_[11]*z[1] - state_[13]*z[2]*z[4] + state_[9]) + state_[17]*z[2]*z[4]/sqrt(pow(z[26], 2) + z[7]*z[9]) - state_[18]*z[26]/sqrt(pow(z[26], 2) + z[7]*z[9]);
  z[66] = -front_.a*z[1] + front_.b*z[4]*z[5] + z[63];
  z[67] = -front_.r*(state_[10]*z[3] - state_[11]*z[0]*z[4] - state_[13]*z[26]) - state_[17]*z[26]/sqrt(pow(z[26], 2) + z[7]*z[9]) - state_[18]*z[2]*z[4]/sqrt(pow(z[26], 2) + z[7]*z[9]);
  z[68] = front_.R*z[17]*z[24]/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.R*z[3]*z[37]*z[4]/sqrt(pow(z[24], 2) + z[8]*z[9]);
  z[69] = rear_.Ixx*z[31] + rear_.Ixz*z[30] + rear_.Iyy*z[10]*z[21] + rear_.J*state_[12]*z[21] + z[10]*z[36];
  z[70] = rear_.Ixz*z[31] - rear_.Iyy*z[10]*z[16] + rear_.Izz*z[30] - rear_.J*state_[12]*z[16] - z[10]*z[35];
  z[71] = -rear_.R*z[0]*pow(z[16], 2)/z[11] - rear_.R*z[0]*pow(z[21], 2)/z[11] - rear_.a*z[10]*z[16] + rear_.a*z[30] - rear_.b*z[10]*z[21] - rear_.b*z[31];
  z[72] = -rear_.R*z[0]*pow(z[16], 2)/z[11] - rear_.R*z[0]*pow(z[21], 2)/z[11] - rear_.a*z[10]*z[16] + rear_.a*z[30] - rear_.b*z[10]*z[21] - rear_.b*z[31];
  z[73] = rear_.R*state_[9]*z[16]*z[3]/z[11] + rear_.R*state_[9]*z[16]*z[6]/(z[11]*z[3]) + rear_.R*z[0]*z[10]*z[21]/z[11] - rear_.R*z[0]*z[31]/z[11] + rear_.a*state_[8]*state_[9]*z[3] + rear_.b*z[12] + z[16]*z[33];
  z[74] = rear_.R*state_[9]*z[21]*z[3]/z[11] + rear_.R*state_[9]*z[21]*z[6]/(z[11]*z[3]) - rear_.R*z[0]*z[10]*z[16]/z[11] - rear_.R*z[0]*z[30]/z[11] - rear_.a*z[12] + rear_.b*state_[8]*state_[9]*z[3] + z[21]*z[33];
  z[75] = -z[73];
  z[76] = rear_.R*state_[9]*z[21]*z[3]/z[11] + rear_.R*state_[9]*z[21]*z[6]/(z[11]*z[3]) - rear_.R*z[0]*z[10]*z[16]/z[11] - rear_.R*z[0]*z[30]/z[11] - rear_.a*z[12] + rear_.b*state_[8]*state_[9]*z[3] + z[21]*z[33];
  z[77] = -z[73];
  z[78] = front_.Iyy*z[54] + z[17]*z[43] + z[37]*z[44];
  z[79] = front_.Ixx*z[52] + front_.Ixz*z[30] + front_.Iyy*z[17]*z[34] - front_.J*state_[13]*z[17] - z[34]*z[44];
  z[80] = front_.Ixz*z[52] + front_.Iyy*z[34]*z[37] + front_.Izz*z[30] - front_.J*state_[13]*z[37] + z[34]*z[43];
  z[81] = front_.r*z[29] - state_[10]*state_[17]*z[1]*z[2]/sqrt(pow(z[26], 2) + z[7]*z[9]) + state_[11]*state_[17]*z[4]*z[5]/sqrt(pow(z[26], 2) + z[7]*z[9]) + state_[17]*z[2]*z[4]*z[59]/pow(pow(z[26], 2) + z[7]*z[9], 3.0/2.0) - state_[18]*z[26]*z[59]/pow(pow(z[26], 2) + z[7]*z[9], 3.0/2.0) + state_[18]*z[42]/sqrt(pow(z[26], 2) + z[7]*z[9]) + state_[8]*z[67];
  z[82] = front_.r*z[51] + state_[10]*state_[18]*z[1]*z[2]/sqrt(pow(z[26], 2) + z[7]*z[9]) - state_[11]*state_[18]*z[4]*z[5]/sqrt(pow(z[26], 2) + z[7]*z[9]) - state_[17]*z[26]*z[59]/pow(pow(z[26], 2) + z[7]*z[9], 3.0/2.0) + state_[17]*z[42]/sqrt(pow(z[26], 2) + z[7]*z[9]) - state_[18]*z[2]*z[4]*z[59]/pow(pow(z[26], 2) + z[7]*z[9], 3.0/2.0) - state_[8]*z[65];
  z[83] = -front_.R*state_[10]*z[1]*z[3]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*state_[9]*z[0]*z[4]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.R*z[24]*z[34]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[3]*z[4]*z[55]/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.R*z[3]*z[4]*z[60]*(state_[13] - z[34])/pow(pow(z[24], 2) + z[8]*z[9], 3.0/2.0) + front_.a*pow(z[34], 2) - front_.b*z[54] + z[17]*z[45] - z[17]*z[68];
  z[84] = front_.R*z[24]*z[55]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[24]*z[60]*(state_[13] - z[34])/pow(pow(z[24], 2) + z[8]*z[9], 3.0/2.0) + front_.R*z[3]*z[34]*z[4]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[39]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.a*z[54] + front_.b*pow(z[34], 2) + z[37]*z[45] - z[37]*z[68];
  z[85] = -front_.R*z[24]*z[55]/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.R*z[24]*z[62]*(state_[13] - z[34])/(2*pow(pow(z[24], 2) + z[8]*z[9], 3.0/2.0)) - front_.R*z[3]*z[34]*z[4]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.R*z[39]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.a*z[54] - front_.b*pow(z[34], 2) - z[37]*z[45] + z[37]*z[68];
  z[86] = front_.R*state_[10]*z[1]*z[3]*z[37]/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.R*state_[9]*z[0]*z[37]*z[4]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[17]*z[24]*z[60]/pow(pow(z[24], 2) + z[8]*z[9], 3.0/2.0) - front_.R*z[17]*z[3]*z[4]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[17]*z[39]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[24]*z[30]/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.R*z[24]*z[37]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[3]*z[37]*z[4]*z[60]/pow(pow(z[24], 2) + z[8]*z[9], 3.0/2.0) + front_.R*z[3]*z[4]*z[53]/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.a*z[30] + front_.a*z[34]*z[37] - front_.b*z[17]*z[34] - front_.b*z[52];
  z[87] = -front_.a;
  z[88] = -front_.b;
  z[89] = -rear_.b;
  z[90] = -front_.m;
  z[91] = -rear_.m;
  z[92] = -front_.r;
  z[93] = -state_[13];
  z[94] = -state_[8];
  z[95] = state_[10]*z[2];
  z[96] = state_[11]*z[4];
  z[97] = -z[0];
  z[98] = -z[1];
  z[99] = -z[2];
  z[100] = -z[4];
  z[101] = -z[5];
  z[102] = z[97]*z[98];
  z[103] = z[100]*z[97];
  z[104] = z[100]*z[99];
  z[105] = -z[100]*z[3];
  z[106] = z[100]*z[101];
  z[107] = rear_.R/z[11];
  z[108] = z[3]/z[11];
  z[109] = -z[18]*z[3];
  z[110] = -z[22]*z[92];
  z[111] = -z[26]*z[92];
  z[112] = front_.R/sqrt(pow(z[24], 2) + z[8]*z[9]);
  z[113] = state_[17]/sqrt(pow(z[26], 2) + z[7]*z[9]);
  z[114] = state_[18]/sqrt(pow(z[26], 2) + z[7]*z[9]);
  z[115] = z[112]*z[24];
  z[116] = -z[81]*z[92];
  z[117] = z[26]*z[81];
  z[118] = z[84]*z[92];

  ar[0] = -z[105]*z[70] - z[105]*z[80] - z[19]*z[78] - z[24]*z[79] - z[3]*z[69]*z[98] + z[64]*z[97] + z[90]*(z[32]*z[86] + z[56]*z[83] - z[57]*z[84] + z[81]*(-z[103]*z[57] - z[22]*z[56] - z[26]*z[32]) + z[82]*(-z[104]*z[32] - z[106]*z[56] - z[57]*z[98])) + z[91]*(z[20]*z[72] - z[27]*z[77] - z[28]*z[76] + z[49]*(-z[102]*z[28] + z[103]*z[27] + z[20]*z[3]) + z[58]*(z[100]*z[28] + z[27]*z[98]));
  ar[1] = z[100]*z[69] + z[104]*z[78] - z[106]*z[79] + z[70]*z[98] + z[80]*z[98] + z[90]*(-z[103]*z[118] - z[110]*z[83] - z[111]*z[86] + z[116] - z[46]*z[83] + z[50]*z[84] - z[66]*z[86] + z[81]*(z[103]*z[50] + z[22]*z[46] + z[26]*z[66]) + z[82]*(z[104]*z[66] + z[106]*z[46] + z[50]*z[98])) + z[91]*(-z[102]*z[107]*z[76] - z[102]*z[18]*z[76] + z[103]*z[107]*z[77] + z[103]*z[18]*z[77] + z[109]*z[72] + z[14]*z[72] - z[18]*z[49] - z[49]*(z[107]*z[6]*z[9] + z[107]*z[6]*pow(z[98], 2) - z[14]*z[3]));
  ar[2] = z[101]*z[78] - z[64] + z[79]*z[99] + z[90]*(-z[100]*z[3]*z[86]*z[92]*z[99] + z[101]*z[105]*z[83]*z[92] + z[118]*z[3]*z[98] + z[3]*z[82]*z[92] + z[40]*z[86] + z[41]*z[83] - z[48]*z[84] + z[81]*(-z[103]*z[48] - z[22]*z[41] - z[26]*z[40]) + z[82]*(-z[104]*z[40] - z[106]*z[41] - z[48]*z[98])) + z[91]*(-rear_.a*z[77] + z[105]*z[18]*z[76] - z[109]*z[58] + z[109]*z[77]*z[98] - z[14]*z[58] + z[49]*(-rear_.a*z[0]*z[100] + z[1]*z[89]*z[97]) - z[76]*z[89]);
  ar[3] = -z[80] + z[90]*(-z[103]*z[82]*z[92] + z[104]*z[47]*z[82] - z[116]*z[98] + z[117]*z[47] + z[38]*z[86] - z[47]*z[86] - z[83]*(-z[101]*z[9]*z[92]*z[97] - z[110]*z[98]));
  ar[4] = -z[3]*(-rear_.J*state_[9]*z[94] + z[18]*z[91]*(z[100]*z[76] - z[58] + z[77]*z[98]));
  ar[5] = -front_.J*z[54] + z[90]*(-z[104]*z[116] + z[105]*z[112]*z[83] + z[111]*z[82] - z[115]*z[84] + z[38]*z[84] + z[63]*z[82] - z[81]*(z[103]*z[115] + z[105]*z[112]*z[22]) - z[83]*(-z[104]*z[110] + z[106]*z[111]));
  ar[6] = z[108]*z[91]*(-z[100]*z[74] + z[58] - z[75]*z[98]);
  ar[7] = z[108]*z[91]*(z[102]*z[74] - z[103]*z[75] + z[3]*z[71] + z[49]);
  ar[8] = z[91]*(z[105]*z[75] + z[3]*z[74]*z[98] - z[71]*z[97]);
  ar[9] = z[90]*(-z[100]*z[83]*(-z[101]*z[26] + z[22]*z[99])/sqrt(pow(z[26], 2) + z[7]*z[9]) + z[104]*(z[100]*z[113]*z[61]*z[99]/(2*pow(z[26], 2) + 2*z[7]*z[9]) - z[101]*z[113]*z[96] + z[113]*z[95]*z[98] - z[114]*z[26]*z[61]/(2*pow(z[26], 2) + 2*z[7]*z[9]) + z[114]*z[42] - z[29]*z[92] - z[67]*z[94])/sqrt(pow(z[26], 2) + z[7]*z[9]) - z[26]*(z[101]*z[114]*z[96] - z[104]*z[114]*z[61]/(2*pow(z[26], 2) + 2*z[7]*z[9]) - z[113]*z[26]*z[61]/(2*pow(z[26], 2) + 2*z[7]*z[9]) + z[113]*z[42] - z[114]*z[95]*z[98] - z[51]*z[92] + z[65]*z[94])/sqrt(pow(z[26], 2) + z[7]*z[9]) - z[85]*(-z[26]*z[98] + z[9]*z[97]*z[99])/sqrt(pow(z[26], 2) + z[7]*z[9]));
  ar[10] = z[90]*(z[100]*z[84]*(-z[26]*z[97] - z[98]*z[99])/sqrt(pow(z[26], 2) + z[7]*z[9]) - z[104]*z[82]/sqrt(pow(z[26], 2) + z[7]*z[9]) - z[117]/sqrt(pow(z[26], 2) + z[7]*z[9]) - z[83]*(-z[101]*z[9]*z[99] - z[22]*z[26])/sqrt(pow(z[26], 2) + z[7]*z[9]) + z[86]*sqrt(pow(z[26], 2) + z[7]*z[9]));
  ar[11] = z[90]*(z[105]*z[85] + z[19]*(-state_[10]*z[112]*z[3]*z[37]*z[98] - state_[9]*z[0]*z[100]*z[112]*z[37] - z[105]*z[112]*z[17]*(-z[34] - z[93]) - z[105]*z[112]*z[37]*z[62]/(2*pow(z[24], 2) + 2*z[8]*z[9]) + z[105]*z[112]*z[53] - z[112]*z[17]*z[39] - z[115]*z[17]*z[62]/(2*pow(z[24], 2) + 2*z[8]*z[9]) - z[115]*z[30] + z[115]*z[37]*(-z[34] - z[93]) + z[17]*z[34]*z[88] - z[30]*z[87] - z[34]*z[37]*z[87] + z[52]*z[88]) - z[24]*z[83]);

  delete [] z;
}

/** Computes the n-d array of shape (12)
 *
 * @param[out] a C-array of with 12 elements
 */
//  void Bicycle::gif_ud_zero_steady(double ar[12]) const;
void Bicycle::gif_ud_zero_steady(double ar[12]) const
{
  double * z = new double[94];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = pow(state_[8], 2);
  z[7] = pow(z[0], 2);
  z[8] = pow(z[1], 2);
  z[9] = pow(z[3], 2);
  z[10] = pow(z[4], 2);
  z[11] = sqrt(z[9]);
  z[12] = rear_.R/z[11] + rear_.r;
  z[13] = rear_.a*z[1] - rear_.b*z[4];
  z[14] = rear_.a*z[3]*z[4] + rear_.b*z[1]*z[3];
  z[15] = z[0]*z[2] - z[1]*z[3]*z[5];
  z[16] = -z[0]*z[1]*z[2] + z[3]*z[5];
  z[17] = -z[16];
  z[18] = -z[0]*z[5] - z[1]*z[2]*z[3];
  z[19] = -z[0]*z[1]*z[5] - z[2]*z[3];
  z[20] = rear_.a*state_[8]*z[3]*z[4] + rear_.b*state_[8]*z[1]*z[3];
  z[21] = pow(z[15], 2);
  z[22] = rear_.Ixx*state_[8]*z[1]*z[3] - rear_.Ixz*state_[8]*z[3]*z[4];
  z[23] = rear_.Ixz*state_[8]*z[1]*z[3] - rear_.Izz*state_[8]*z[3]*z[4];
  z[24] = state_[13] - state_[8]*z[18];
  z[25] = rear_.R*z[0]*z[1]*z[3]/z[11] + rear_.a*z[0];
  z[26] = rear_.R*z[0]*z[3]*z[4]/z[11] - rear_.b*z[0];
  z[27] = front_.a*z[3]*z[4] - front_.b*z[15];
  z[28] = front_.Ixx*state_[8]*z[15] + front_.Ixz*state_[8]*z[3]*z[4];
  z[29] = front_.Ixz*state_[8]*z[15] + front_.Izz*state_[8]*z[3]*z[4];
  z[30] = front_.a*state_[8]*z[3]*z[4] - front_.b*state_[8]*z[15];
  z[31] = sqrt(z[10]*z[9] + z[21]);
  z[32] = -rear_.Iyy*state_[8]*z[0]*z[1]*z[3] - rear_.J*state_[12]*z[1]*z[3] + z[0]*z[22];
  z[33] = rear_.R*z[10]*z[3]/z[11] + rear_.R*z[3]*z[8]/z[11] + z[13];
  z[34] = -rear_.Iyy*state_[8]*z[0]*z[3]*z[4] - rear_.J*state_[12]*z[3]*z[4] - z[0]*z[23];
  z[35] = front_.R*z[2]*z[3]*z[4]/z[31] - front_.b*z[2];
  z[36] = front_.R*z[3]*z[4]*z[5]/z[31] - front_.b*z[5];
  z[37] = rear_.R*state_[8]*z[1]*z[3]*z[7]/z[11] + rear_.a*state_[8]*z[7] + z[20]*z[3]*z[4];
  z[38] = front_.R*z[10]*z[2]*z[3]/z[31] - front_.b*z[2]*z[4];
  z[39] = -rear_.R*state_[8]*z[3]*z[4]*z[7]/z[11] + rear_.b*state_[8]*z[7] + z[1]*z[20]*z[3];
  z[40] = front_.R*z[15]/z[31] - front_.a;
  z[41] = rear_.R*z[1]*z[3]*z[6]*z[7]/z[11] + rear_.a*z[6]*z[7] + state_[8]*z[20]*z[3]*z[4];
  z[42] = -rear_.R*z[3]*z[4]*z[6]*z[7]/z[11] + rear_.b*z[6]*z[7] + state_[8]*z[1]*z[20]*z[3];
  z[43] = front_.R*z[15]*z[5]/z[31] - front_.a*z[5];
  z[44] = front_.R*z[15]*z[2]*z[4]/z[31] - front_.a*z[2]*z[4];
  z[45] = -front_.R*z[18]*z[3]*z[4]/z[31] + front_.b*z[18];
  z[46] = -front_.Iyy*state_[8]*z[18]*z[3]*z[4] + front_.J*state_[13]*z[3]*z[4] + z[18]*z[29];
  z[47] = -rear_.R*z[0]*z[10]*z[11]*z[6] - rear_.R*z[0]*z[11]*z[6]*z[8] - rear_.a*z[0]*z[1]*z[3]*z[6] + rear_.b*z[0]*z[3]*z[4]*z[6];
  z[48] = z[15]*z[29] - z[28]*z[3]*z[4];
  z[49] = -front_.R*z[15]*z[18]/z[31] + front_.a*z[18];
  z[50] = -front_.Iyy*state_[8]*z[15]*z[18] + front_.J*state_[13]*z[15] + z[18]*z[28];
  z[51] = front_.R*z[1]*z[15]/z[31] - front_.R*z[10]*z[3]*z[5]/z[31] - front_.a*z[1] + front_.b*z[4]*z[5];
  z[52] = z[1]*z[39] + z[37]*z[4];
  z[53] = front_.R*z[15]*z[18]*z[24]/z[31] + front_.a*state_[8]*pow(z[18], 2) + z[3]*z[30]*z[4];
  z[54] = -front_.R*z[18]*z[24]*z[3]*z[4]/z[31] - front_.b*state_[8]*pow(z[18], 2) + z[15]*z[30];
  z[55] = -front_.R*state_[8]*z[15]*z[18]*z[24]/z[31] - front_.a*pow(z[18], 2)*z[6] - state_[8]*z[3]*z[30]*z[4];
  z[56] = front_.R*state_[8]*z[18]*z[24]*z[3]*z[4]/z[31] + front_.b*pow(z[18], 2)*z[6] - state_[8]*z[15]*z[30];
  z[57] = front_.R*z[10]*z[24]*z[9]/z[31] + front_.R*z[21]*z[24]/z[31] + front_.a*state_[8]*z[15]*z[18] + front_.b*state_[8]*z[18]*z[3]*z[4];
  z[58] = front_.R*state_[8]*z[10]*z[24]*z[9]/z[31] + front_.R*state_[8]*z[21]*z[24]/z[31] + front_.a*z[15]*z[18]*z[6] + front_.b*z[18]*z[3]*z[4]*z[6];
  z[59] = -front_.m;
  z[60] = -rear_.m;
  z[61] = front_.r*state_[13];
  z[62] = state_[8]*z[3];
  z[63] = -z[1];
  z[64] = -z[4];
  z[65] = -z[0]*z[63];
  z[66] = z[0]*z[2];
  z[67] = -z[0]*z[64];
  z[68] = -z[3]*z[63];
  z[69] = z[2]*z[3];
  z[70] = -z[2]*z[64];
  z[71] = -z[3]*z[64];
  z[72] = -z[5]*z[64];
  z[73] = pow(front_.r, 2)*state_[13]*state_[8];
  z[74] = -z[10];
  z[75] = rear_.R/z[11];
  z[76] = z[6]*z[9];
  z[77] = -pow(z[2], 2)*z[74];
  z[78] = state_[12]*z[12];
  z[79] = -front_.r*z[19];
  z[80] = front_.r*z[17];
  z[81] = state_[8]*z[15];
  z[82] = -z[19]*z[2];
  z[83] = -z[18]*z[6];
  z[84] = -z[17]*z[63];
  z[85] = z[17]*z[5];
  z[86] = front_.R/z[31];
  z[87] = z[61]/sqrt(pow(z[17], 2) + z[77]);
  z[88] = state_[8]*z[40];
  z[89] = z[12]*z[41];
  z[90] = z[12]*z[42];
  z[91] = state_[8]*z[46];
  z[92] = state_[8]*z[48];
  z[93] = -front_.r*z[56];

  ar[0] = -state_[8]*z[18]*z[48] - z[0]*z[62]*(z[22]*z[64] + z[23]*z[63]) + z[32]*z[62]*z[64] - z[34]*z[62]*z[63] + z[46]*z[81] + z[50]*z[62]*z[64] + z[59]*(state_[8]*z[17]*z[61]*(-z[17]*z[27] + z[19]*z[45] - z[49]*z[67]) + state_[8]*z[61]*z[70]*(-z[27]*z[70] - z[45]*z[72] - z[49]*z[63]) - z[27]*z[58] - z[45]*z[55] - z[49]*z[56]) + z[60]*(z[14]*z[47] + z[25]*z[42] + z[26]*z[41] - z[62]*z[78]*(z[14]*z[3] + z[25]*z[67] - z[26]*z[65]));
  ar[1] = state_[8]*z[32]*z[63] + state_[8]*z[34]*z[64] + state_[8]*z[50]*z[63] + z[59]*(state_[8]*z[17]*z[61]*(z[17]*z[51] - z[19]*z[38] + z[44]*z[67]) + state_[8]*z[61]*z[70]*(z[38]*z[72] + z[44]*z[63] + z[51]*z[70]) + z[17]*z[73] + z[38]*z[55] + z[44]*z[56] + z[51]*z[58] + z[55]*z[79] + z[58]*z[80] - z[67]*z[93]) + z[60]*(z[12]*z[3]*z[47] - z[12]*z[62]*z[78] + z[13]*z[47] + z[41]*z[65]*z[75] - z[42]*z[67]*z[75] + z[62]*z[78]*(-z[13]*z[3] - z[7]*z[74]*z[75] + z[7]*z[75]*z[8]) - z[65]*z[89] + z[67]*z[90]) - z[70]*z[92] + z[72]*z[91];
  ar[2] = z[2]*z[91] + z[5]*z[92] + z[59]*(-front_.r*z[5]*z[55]*z[71] + front_.r*z[58]*z[64]*z[69] + state_[8]*z[17]*z[61]*(-z[17]*z[35] + z[19]*z[36] - z[43]*z[67]) + state_[8]*z[61]*z[70]*(-z[35]*z[70] - z[36]*z[72] - z[43]*z[63]) - z[35]*z[58] - z[36]*z[55] - z[43]*z[56] + z[64]*z[69]*z[73] - z[68]*z[93]) + z[60]*(rear_.a*z[42] - rear_.b*z[41] - z[62]*z[78]*(-rear_.a*z[0]*z[64] - rear_.b*z[0]*z[63]) + z[68]*z[90] + z[71]*z[89]) - z[63]*z[76]*(rear_.Ixz*z[1] + rear_.Izz*z[64]) - z[64]*z[76]*(rear_.Ixx*z[1] + rear_.Ixz*z[64]);
  ar[3] = -front_.Iyy*z[15]*z[83] - front_.J*state_[13]*z[81] + z[59]*(pow(z[17], 2)*z[61]*z[88] + z[40]*z[58] + z[55]*(-front_.r*z[0]*z[5]*z[74] - z[63]*z[79]) - z[58]*(front_.r*z[66]*z[74] + z[63]*z[80]) + z[61]*z[77]*z[88] - z[66]*z[73]*z[74] + z[73]*z[84]) + z[83]*(front_.Ixx*z[15] + front_.Ixz*z[71]);
  ar[4] = z[12]*z[52]*z[60]*z[62];
  ar[5] = state_[8]*z[59]*(front_.r*z[53]*z[64]*(-z[82] + z[85]) + front_.r*z[54]*(-z[66]*z[74] + z[84]) + z[15]*z[54]*z[86] + z[17]*z[61]*z[64]*z[86]*(z[0]*z[15] - z[19]*z[3]) + z[53]*z[71]*z[86] + z[61]*z[70]*z[86]*(-z[15]*z[63] + z[3]*z[5]*z[74]));
  ar[6] = -z[52]*z[60]*z[62]/z[11];
  ar[7] = -z[60]*z[62]*(state_[8]*z[0]*z[33]*z[9] + z[3]*z[78] + z[37]*z[65] - z[39]*z[67])/z[11];
  ar[8] = -z[60]*z[62]*(state_[8]*z[33]*z[7] + z[37]*z[63] - z[39]*z[64]);
  ar[9] = -state_[8]*z[59]*(-z[53]*z[64]*(z[82] - z[85]) - z[54]*(z[66]*z[74] - z[84]))/sqrt(pow(z[17], 2) + z[77]);
  ar[10] = -state_[8]*z[59]*(pow(z[17], 2)*z[87] + z[53]*(z[17]*z[19] + z[2]*z[5]*z[74])/sqrt(pow(z[17], 2) + z[77]) + z[54]*z[64]*(z[0]*z[17] + z[2]*z[63])/sqrt(pow(z[17], 2) + z[77]) + z[57]*sqrt(pow(z[17], 2) + z[77]) + z[77]*z[87]);
  ar[11] = -state_[8]*z[59]*(z[15]*z[53] - z[18]*z[57] - z[54]*z[71]);

  delete [] z;
}

/** Computes the n-d array of shape (12, 3)
 *
 * @param[out] a C-array of with 36 elements
 */
//  void Bicycle::gif_ud_zero_dq(double ar[36]) const;
void Bicycle::gif_ud_zero_dq(double ar[36]) const
{
  double * z = new double[374];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = pow(state_[9], 2);
  z[7] = pow(z[0], 2);
  z[8] = pow(z[0], 3);
  z[9] = pow(z[1], 2);
  z[10] = pow(z[2], 2);
  z[11] = pow(z[3], 2);
  z[12] = pow(z[4], 2);
  z[13] = pow(z[5], 2);
  z[14] = state_[10] + state_[8]*z[0];
  z[15] = sqrt(z[11]);
  z[16] = pow(z[14], 2);
  z[17] = -z[14];
  z[18] = rear_.a*z[4] + rear_.b*z[1];
  z[19] = state_[10]*z[0] + state_[12]*z[0];
  z[20] = state_[10]*z[3] + state_[12]*z[3];
  z[21] = rear_.a*z[1] - rear_.b*z[4];
  z[22] = state_[10]*state_[9]*z[0] + state_[12]*state_[9]*z[0];
  z[23] = state_[8]*z[3]*z[4] + state_[9]*z[1];
  z[24] = state_[8]*z[1]*z[3] - state_[9]*z[4];
  z[25] = -rear_.R/z[15] - rear_.r;
  z[26] = rear_.a*z[0]*z[4] + rear_.b*z[0]*z[1];
  z[27] = rear_.a*z[3]*z[4] + rear_.b*z[1]*z[3];
  z[28] = -z[23];
  z[29] = -z[0]*z[2] + z[1]*z[3]*z[5];
  z[30] = -z[29];
  z[31] = rear_.a*z[1]*z[3] - rear_.b*z[3]*z[4];
  z[32] = -z[0]*z[1]*z[2] + z[3]*z[5];
  z[33] = -z[32];
  z[34] = -z[0]*z[5] - z[1]*z[2]*z[3];
  z[35] = 2*z[0]*z[5] + 2*z[1]*z[2]*z[3];
  z[36] = -z[0]*z[1]*z[5] - z[2]*z[3];
  z[37] = 2*z[0]*z[1]*z[5] + 2*z[2]*z[3];
  z[38] = rear_.a*state_[8]*z[0]*z[4] + rear_.b*state_[8]*z[0]*z[1];
  z[39] = state_[10]*state_[8]*z[0]*z[4] + state_[8]*state_[9]*z[1]*z[3];
  z[40] = state_[8]*z[2]*z[3]*z[4] + state_[9]*z[1]*z[2];
  z[41] = front_.a*z[1]*z[3] - front_.b*z[3]*z[4]*z[5];
  z[42] = rear_.Ixx*state_[8]*z[0]*z[1] - rear_.Ixz*state_[8]*z[0]*z[4];
  z[43] = rear_.Ixz*state_[8]*z[0]*z[1] - rear_.Izz*state_[8]*z[0]*z[4];
  z[44] = state_[10]*state_[8]*z[0]*z[1] - state_[8]*state_[9]*z[3]*z[4];
  z[45] = -state_[11] - z[23];
  z[46] = -state_[8]*z[3]*z[4]*z[5] - state_[9]*z[1]*z[5];
  z[47] = rear_.R*z[1]*z[15] + rear_.a*z[3];
  z[48] = rear_.R*z[0]*z[1]*z[3]/z[15] + rear_.a*z[0];
  z[49] = rear_.R*z[15]*z[4] - rear_.b*z[3];
  z[50] = rear_.R*z[0]*z[3]*z[4]/z[15] - rear_.b*z[0];
  z[51] = -state_[10]*state_[11]*z[1] + state_[10]*state_[13]*z[2]*z[4] + state_[11]*state_[13]*z[1]*z[5];
  z[52] = state_[10]*state_[11]*z[4] + state_[10]*state_[13]*z[1]*z[2] - state_[11]*state_[13]*z[4]*z[5];
  z[53] = front_.a*z[0]*z[4] - front_.b*z[36];
  z[54] = -state_[10]*state_[8]*z[1]*z[3] + state_[10]*state_[9]*z[4] - state_[8]*state_[9]*z[0]*z[4];
  z[55] = -state_[10]*state_[8]*z[3]*z[4] - state_[10]*state_[9]*z[1] + state_[8]*state_[9]*z[0]*z[1];
  z[56] = z[0]*z[33] - z[1]*z[2];
  z[57] = front_.a*z[3]*z[4] - front_.b*z[30];
  z[58] = front_.a*state_[8]*z[0]*z[4] - front_.b*state_[8]*z[36];
  z[59] = state_[10]*z[0]*z[4]*z[5] - state_[11]*z[0]*z[1]*z[2] + state_[11]*z[3]*z[5];
  z[60] = -front_.Ixx*state_[8]*z[36] - front_.Ixz*state_[8]*z[0]*z[4];
  z[61] = -front_.Ixz*state_[8]*z[36] - front_.Izz*state_[8]*z[0]*z[4];
  z[62] = state_[10]*z[1]*z[3]*z[5] + state_[11]*z[2]*z[3]*z[4] + state_[9]*z[0]*z[4]*z[5];
  z[63] = state_[10]*z[0]*z[1]*z[2] - state_[11]*z[0]*z[4]*z[5] - state_[9]*z[2]*z[3]*z[4];
  z[64] = -rear_.a*z[28] + rear_.b*z[24];
  z[65] = front_.r*z[0]*z[12]*z[5] - front_.r*z[1]*z[36];
  z[66] = -state_[10]*z[5] + state_[8]*z[34] + state_[9]*z[2]*z[4];
  z[67] = -rear_.Ixx*z[24] - rear_.Ixz*z[28];
  z[68] = -rear_.Ixz*z[24] - rear_.Izz*z[28];
  z[69] = -rear_.a*z[24] - rear_.b*z[28];
  z[70] = rear_.Ixx*z[28] - rear_.Ixz*z[24];
  z[71] = rear_.Ixz*z[28] - rear_.Izz*z[24];
  z[72] = front_.r*z[0]*z[1]*z[2]*z[4] - front_.r*z[33]*z[4];
  z[73] = -state_[10]*z[2] - state_[8]*z[30] - state_[9]*z[4]*z[5];
  z[74] = -z[2]*z[4]*z[56];
  z[75] = -front_.r*z[0]*z[12]*z[2] - front_.r*z[1]*z[33];
  z[76] = z[1]*z[11]*z[4] + z[3]*z[30]*z[4]*z[5];
  z[77] = -z[0]*z[2]*z[33]*z[4] + z[1]*z[10]*z[4];
  z[78] = rear_.R*z[6]/z[15] + 2*rear_.R*z[6]*z[7]/pow(z[11], 3.0/2.0);
  z[79] = -front_.a*z[24] - front_.b*z[46];
  z[80] = z[77];
  z[81] = front_.Ixx*z[46] - front_.Ixz*z[24];
  z[82] = front_.Ixz*z[46] - front_.Izz*z[24];
  z[83] = z[79];
  z[84] = z[2]*z[36] + z[33]*z[5];
  z[85] = -rear_.Iyy*z[17]*z[28] + rear_.J*state_[12]*z[28];
  z[86] = z[12]*z[2]*z[5] - z[33]*z[36];
  z[87] = -z[0]*z[12]*z[3] - z[30]*z[36];
  z[88] = state_[9]*z[0]*z[2] - state_[9]*z[1]*z[3]*z[5] - z[59];
  z[89] = -state_[10]*z[2]*z[3]*z[4] + state_[11]*z[0]*z[2] - state_[11]*z[1]*z[3]*z[5] + state_[9]*z[0]*z[1]*z[2] - state_[9]*z[3]*z[5];
  z[90] = -2*z[0]*z[12]*z[3] + z[30]*z[37];
  z[91] = z[12]*z[2]*z[5] + z[33]*z[37]/2;
  z[92] = 2*z[12]*z[2]*z[5] + z[33]*z[37];
  z[93] = front_.r*z[2]*z[36]*z[4] + front_.r*z[33]*z[4]*z[5];
  z[94] = state_[10]*z[3]*z[4]*z[5] - state_[11]*z[0]*z[5] - state_[11]*z[1]*z[2]*z[3] - state_[9]*z[0]*z[1]*z[5] - state_[9]*z[2]*z[3];
  z[95] = -z[0]*z[12]*z[3] + z[30]*z[37]/2;
  z[96] = front_.R*z[2]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.b*z[2];
  z[97] = front_.R*z[3]*z[4]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.b*z[5];
  z[98] = state_[10]*state_[8]*z[1]*z[3]*z[5] - state_[10]*state_[9]*z[4]*z[5] - state_[11]*z[2]*z[28] + state_[8]*state_[9]*z[0]*z[4]*z[5];
  z[99] = -state_[10]*z[0]*z[2]*z[4] - state_[11]*z[0]*z[1]*z[5] - state_[11]*z[2]*z[3] - state_[9]*z[0]*z[5] - state_[9]*z[1]*z[2]*z[3];
  z[100] = 2*state_[10]*z[0]*z[2]*z[4] + 2*state_[11]*z[0]*z[1]*z[5] + 2*state_[11]*z[2]*z[3] + 2*state_[9]*z[0]*z[5] + 2*state_[9]*z[1]*z[2]*z[3];
  z[101] = 2*state_[10]*z[0]*z[4]*z[5] - 2*state_[11]*z[0]*z[1]*z[2] + 2*state_[11]*z[3]*z[5] - 2*state_[9]*z[0]*z[2] + 2*state_[9]*z[1]*z[3]*z[5];
  z[102] = -2*state_[10]*z[3]*z[4]*z[5] + 2*state_[11]*z[0]*z[5] + 2*state_[11]*z[1]*z[2]*z[3] + 2*state_[9]*z[0]*z[1]*z[5] + 2*state_[9]*z[2]*z[3];
  z[103] = -state_[10]*state_[9]*z[4]*z[5] + state_[11]*state_[9]*z[1]*z[2] + state_[8]*z[62];
  z[104] = -state_[10]*state_[8]*z[1]*z[2]*z[3] + state_[10]*state_[9]*z[2]*z[4] - state_[11]*z[28]*z[5] - state_[8]*state_[9]*z[0]*z[2]*z[4];
  z[105] = state_[10]*state_[11]*z[0]*z[4] + state_[11]*state_[9]*z[1]*z[3] + state_[13]*z[63];
  z[106] = state_[10]*state_[9]*z[2]*z[4] + state_[11]*state_[9]*z[1]*z[5] - state_[8]*(state_[10]*z[1]*z[2]*z[3] - state_[11]*z[3]*z[4]*z[5] + state_[9]*z[0]*z[2]*z[4]);
  z[107] = z[104];
  z[108] = -front_.a*z[45] + front_.b*z[73];
  z[109] = state_[10]*state_[8]*z[0]*z[4]*z[5] - state_[11]*state_[8]*z[0]*z[1]*z[2] + state_[11]*state_[8]*z[3]*z[5] - state_[8]*state_[9]*z[30];
  z[110] = front_.Ixx*z[73] + front_.Ixz*z[45];
  z[111] = front_.Ixz*z[73] + front_.Izz*z[45];
  z[112] = front_.R*z[12]*z[2]*z[3]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.b*z[2]*z[4];
  z[113] = -state_[10]*state_[8]*z[0]*z[2]*z[4] - state_[11]*state_[8]*z[0]*z[1]*z[5] - state_[11]*state_[8]*z[2]*z[3] + state_[8]*state_[9]*z[34];
  z[114] = front_.R*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a;
  z[115] = front_.R*z[30]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*z[5];
  z[116] = -rear_.R*z[0]*z[6]/(z[15]*z[3]) - state_[8]*(state_[14]*z[3]/z[15] + z[20]*z[25]);
  z[117] = front_.R*z[2]*z[30]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*z[2]*z[4];
  z[118] = -(z[0]*z[12]*z[2] + z[1]*z[33])/sqrt(z[10]*z[12] + pow(z[33], 2));
  z[119] = -state_[10]*state_[11]*z[0]*z[1] + state_[10]*state_[9]*z[0] + state_[11]*state_[9]*z[3]*z[4] - state_[13]*z[99];
  z[120] = state_[10]*state_[11]*z[5] - state_[10]*state_[9]*z[1]*z[5] - state_[11]*state_[9]*z[2]*z[4] - state_[8]*z[94];
  z[121] = state_[10]*state_[8]*z[2]*z[3]*z[4] + state_[10]*state_[9]*z[1]*z[2] + state_[11]*z[17]*z[2] + state_[11]*z[24]*z[5] - state_[8]*state_[9]*z[33];
  z[122] = state_[10]*state_[8]*z[3]*z[4]*z[5] + state_[10]*state_[9]*z[1]*z[5] + state_[11]*z[17]*z[5] - state_[11]*z[2]*z[24] + state_[8]*state_[9]*z[36];
  z[123] = state_[10]*state_[11]*z[2] - state_[10]*state_[9]*z[1]*z[2] + state_[11]*state_[9]*z[4]*z[5] + state_[8]*z[89];
  z[124] = -front_.R*z[3]*z[34]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.b*z[34];
  z[125] = -z[4]*z[84]/sqrt(z[10]*z[12] + pow(z[33], 2));
  z[126] = -z[86]/sqrt(z[10]*z[12] + pow(z[33], 2));
  z[127] = -front_.R*z[30]*z[34]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[34];
  z[128] = -rear_.R*state_[9]*z[0]*z[20]/(z[15]*z[3]) - state_[8]*(state_[15]*z[3]/z[15] - state_[9]*z[25]) - z[22]*z[25];
  z[129] = state_[10]*z[1]*z[10]*z[4] - state_[11]*z[12]*z[2]*z[5] + z[33]*z[99];
  z[130] = state_[10]*z[1]*z[11]*z[4] + state_[9]*z[0]*z[12]*z[3] + z[30]*z[94];
  z[131] = state_[8]*(-rear_.R*z[0]*z[20]/(z[15]*z[3]) - z[19]*z[25]) + z[78];
  z[132] = -rear_.Iyy*state_[8]*state_[9]*z[0] - state_[8]*z[0]*z[1]*z[68] - state_[8]*z[0]*z[4]*z[67];
  z[133] = 2*state_[10]*z[1]*z[10]*z[4] - 2*state_[11]*z[12]*z[2]*z[5] - z[100]*z[33];
  z[134] = 2*state_[10]*z[1]*z[11]*z[4] + 2*state_[9]*z[0]*z[12]*z[3] - z[102]*z[30];
  z[135] = state_[10]*z[1]*z[10]*z[4] - state_[11]*z[12]*z[2]*z[5] - z[100]*z[33]/2;
  z[136] = front_.R*z[1]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[12]*z[3]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[137] = -rear_.a*z[17]*z[28] + rear_.a*z[55] + rear_.b*z[17]*z[24] + rear_.b*z[54];
  z[138] = front_.r*(state_[11]*z[1] - state_[13]*z[2]*z[4] + state_[9]) + state_[17]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[18]*z[33]/sqrt(z[10]*z[12] + pow(z[33], 2));
  z[139] = -front_.a*z[1] + front_.b*z[4]*z[5] + z[136];
  z[140] = -front_.R*z[0]*z[30]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[36]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[141] = -front_.R*pow(z[30], 2)*z[34]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[34]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[142] = -front_.R*z[1]*z[2]*z[3]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[2]*z[3]*z[4]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[143] = -front_.R*z[1]*z[3]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[5]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[144] = -front_.R*z[2]*z[3]*z[30]*z[34]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - z[97];
  z[145] = -front_.R*z[3]*z[30]*z[34]*z[4]*z[5]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + z[96];
  z[146] = -z[33]*z[89] + z[34]*z[99];
  z[147] = -z[30]*z[89] + z[34]*z[94];
  z[148] = -front_.R*z[12]*z[2]*z[3]*z[30]*z[34]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[12]*z[3]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.b*z[4]*z[5];
  z[149] = front_.R*z[0]*z[4]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[5]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[150] = -front_.R*z[3]*z[4]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[151] = -front_.r*(state_[10]*z[3] - state_[11]*z[0]*z[4] - state_[13]*z[33]) - state_[17]*z[33]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[18]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2));
  z[152] = -z[102]*z[34] + z[30]*(2*state_[10]*z[2]*z[3]*z[4] - 2*state_[11]*z[0]*z[2] + 2*state_[11]*z[1]*z[3]*z[5] - 2*state_[9]*z[0]*z[1]*z[2] + 2*state_[9]*z[3]*z[5]);
  z[153] = -front_.R*z[0]*z[2]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[2]*z[3]*z[4]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[154] = -2*front_.R*z[1]*z[2]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[12]*z[2]*z[3]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.b*z[1]*z[2];
  z[155] = -front_.R*z[13]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[5]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[156] = -front_.R*z[0]*z[12]*z[2]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[12]*z[2]*z[3]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[157] = front_.R*z[3]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[45]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[158] = -state_[10]*z[11]*z[12] + state_[10]*z[11]*z[9] + 2*state_[9]*z[0]*z[1]*z[3]*z[4] + z[3]*z[4]*z[5]*z[94] + z[30]*z[62];
  z[159] = -rear_.Ixx*z[54] + rear_.Ixz*z[55] - rear_.Iyy*z[17]*z[24] + rear_.J*state_[12]*z[24] - z[17]*z[71];
  z[160] = rear_.Ixx*z[55] + rear_.Ixz*z[54] - z[17]*z[68] + z[85];
  z[161] = state_[10]*z[10]*z[12] - state_[10]*z[10]*z[9] + 2*state_[11]*z[1]*z[2]*z[4]*z[5] + z[0]*z[2]*z[4]*z[99] + z[33]*z[63];
  z[162] = -rear_.Ixz*z[54] + rear_.Izz*z[55] + z[17]*z[70] + z[85];
  z[163] = rear_.Ixz*z[55] + rear_.Iyy*z[17]*z[24] + rear_.Izz*z[54] - rear_.J*state_[12]*z[24] + z[17]*z[67];
  z[164] = -2*state_[10]*z[11]*z[12] + 2*state_[10]*z[11]*z[9] + 4*state_[9]*z[0]*z[1]*z[3]*z[4] - z[102]*z[3]*z[4]*z[5] + z[30]*(2*state_[10]*z[1]*z[3]*z[5] + 2*state_[11]*z[2]*z[3]*z[4] + 2*state_[9]*z[0]*z[4]*z[5]);
  z[165] = front_.R*z[30]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[36]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[166] = 2*state_[10]*z[10]*z[12] - 2*state_[10]*z[10]*z[9] + 4*state_[11]*z[1]*z[2]*z[4]*z[5] - z[0]*z[100]*z[2]*z[4] - z[33]*(-2*state_[10]*z[0]*z[1]*z[2] + 2*state_[11]*z[0]*z[4]*z[5] + 2*state_[9]*z[2]*z[3]*z[4]);
  z[167] = front_.R*z[3]*z[30]*pow(z[34], 2)*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[30]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.b*z[30];
  z[168] = rear_.Ixx*z[39] + rear_.Ixz*z[44] - rear_.Iyy*state_[8]*z[0]*z[17]*z[4] + rear_.Iyy*state_[8]*z[28]*z[3] + rear_.J*state_[12]*state_[8]*z[0]*z[4] + state_[8]*z[3]*z[68] - z[17]*z[43];
  z[169] = -front_.R*z[30]*z[5]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[36]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[170] = front_.Ixz*z[98] + front_.Izz*z[55] + z[66]*z[81];
  z[171] = rear_.Ixz*z[39] - rear_.Iyy*state_[8]*z[0]*z[1]*z[17] - rear_.Iyy*state_[8]*z[24]*z[3] + rear_.Izz*z[44] + rear_.J*state_[12]*state_[8]*z[0]*z[1] - state_[8]*z[3]*z[67] + z[17]*z[42];
  z[172] = rear_.R*z[0]*pow(z[24], 2)/z[15] + rear_.R*z[0]*pow(z[28], 2)/z[15] - rear_.a*z[17]*z[24] - rear_.a*z[54] - rear_.b*z[17]*z[28] + rear_.b*z[55];
  z[173] = -rear_.R*state_[8]*state_[9]*z[0]/(z[15]*z[3]) + rear_.R*state_[9]*z[0]*z[19]/(z[15]*z[3]) - rear_.R*state_[9]*z[20]/z[15] - 2*rear_.R*state_[9]*z[20]*z[7]/pow(z[11], 3.0/2.0) + rear_.R*z[0]*z[22]/(z[15]*z[3]) - z[25]*(state_[10]*state_[9]*z[3] + state_[12]*state_[9]*z[3]);
  z[174] = front_.R*z[2]*z[30]*z[4]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[2]*z[36]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[175] = -z[172];
  z[176] = -z[172];
  z[177] = 2*state_[10]*z[0]*z[1]*z[3]*z[4] - state_[9]*z[11]*z[12] + state_[9]*z[12]*z[7] - z[30]*z[88] + z[36]*z[94];
  z[178] = 2*state_[10]*z[1]*z[2]*z[4]*z[5] + state_[11]*z[10]*z[12] - state_[11]*z[12]*z[13] + z[33]*z[88] - z[36]*z[99];
  z[179] = 4*state_[10]*z[0]*z[1]*z[3]*z[4] - 2*state_[9]*z[11]*z[12] + 2*state_[9]*z[12]*z[7] + z[101]*z[30] - z[102]*z[36];
  z[180] = 2*state_[10]*z[1]*z[2]*z[4]*z[5] + state_[11]*z[10]*z[12] - state_[11]*z[12]*z[13] + z[100]*z[36]/2 - z[101]*z[33]/2;
  z[181] = -rear_.R*state_[9]*z[28]*z[3]/z[15] - rear_.R*state_[9]*z[28]*z[7]/(z[15]*z[3]) - rear_.R*z[0]*z[17]*z[24]/z[15] + rear_.R*z[0]*z[54]/z[15] - z[28]*z[64];
  z[182] = z[1]*z[115] - z[2]*z[4]*z[96] - z[4]*z[5]*z[97];
  z[183] = rear_.R*state_[9]*z[24]*z[3]/z[15] + rear_.R*state_[9]*z[24]*z[7]/(z[15]*z[3]) - rear_.R*z[0]*z[17]*z[28]/z[15] - rear_.R*z[0]*z[55]/z[15] + z[24]*z[64];
  z[184] = -z[181];
  z[185] = front_.R*z[2]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*pow(z[30], 2)*z[34]*z[5]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[34]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*z[2];
  z[186] = -state_[17]*pow(z[33], 2)*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[34]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[18]*z[2]*z[33]*z[34]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0);
  z[187] = front_.Iyy*state_[8]*z[33]*z[73] + front_.Iyy*state_[8]*z[36]*z[66] - front_.J*state_[13]*state_[8]*z[36] - state_[8]*z[110]*z[33];
  z[188] = -front_.R*z[2]*pow(z[30], 2)*z[34]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[2]*z[34]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[4]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[4]*z[5];
  z[189] = -z[24]*z[67] + z[24]*z[71] - z[28]*z[68] - z[28]*z[70];
  z[190] = -rear_.a*state_[8]*state_[9]*z[3] - rear_.b*z[16] - z[183];
  z[191] = -front_.R*pow(z[30], 2)*pow(z[34], 2)/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*pow(z[30], 2)/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*pow(z[34], 2)/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[30];
  z[192] = -rear_.a*z[16] + rear_.b*state_[8]*state_[9]*z[3] + z[184];
  z[193] = front_.R*z[1]*pow(z[30], 2)*z[34]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[1]*z[34]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[12]*z[3]*z[30]*z[34]*z[5]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[194] = -z[0]*z[115]*z[4] - z[33]*z[96] + z[36]*z[97];
  z[195] = -rear_.a*state_[8]*state_[9]*z[3] - rear_.b*z[16] - z[183];
  z[196] = -front_.R*z[1]*z[2]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[12]*z[2]*z[3]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[2]*z[30]*z[4]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.a*z[1]*z[2];
  z[197] = front_.R*z[1]*z[3]*z[34]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[11]*z[12]*z[2]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[34]*z[4]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.b*z[2]*z[3]*z[4];
  z[198] = z[1]*z[127] - z[124]*z[4]*z[5] - z[2]*z[4]*z[57];
  z[199] = front_.Iyy*z[121] + z[110]*z[45] - z[111]*z[73];
  z[200] = z[183] + z[28]*z[69];
  z[201] = z[183] + z[28]*z[69];
  z[202] = z[184] - z[24]*z[69];
  z[203] = front_.R*z[2]*z[3]*z[30]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[34]*z[4]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[34]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.a*z[2]*z[3]*z[4];
  z[204] = -front_.R*z[0]*z[34]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[33]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[34]*z[4]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.b*z[33];
  z[205] = -z[0]*z[127]*z[4] + z[124]*z[36] - z[33]*z[57];
  z[206] = -z[1]*z[117] + z[112]*z[4]*z[5] + z[139]*z[2]*z[4];
  z[207] = front_.Ixx*z[121] + front_.Ixz*pow(z[66], 2) + front_.Iyy*z[45]*z[73] - z[111]*z[73];
  z[208] = front_.R*state_[8]*z[0]*z[30]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[3]*z[36]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[0]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[36]*z[45]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[209] = -front_.Ixx*z[122] + front_.Ixz*z[54] - front_.Iyy*z[45]*z[66] + front_.J*state_[13]*z[45] + z[111]*z[66];
  z[210] = z[112] + z[193];
  z[211] = -front_.R*z[30]*z[33]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[34]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[34]*z[36]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[33];
  z[212] = front_.r*(state_[11]*z[4] + state_[13]*z[1]*z[2]) - state_[17]*z[1]*z[2]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[17]*z[2]*z[4]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[0]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[18]*z[33]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0);
  z[213] = front_.R*z[1]*z[3]*z[4]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[1]*z[30]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[12]*z[3]*z[5]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[214] = z[0]*z[117]*z[4] - z[112]*z[36] + z[139]*z[33];
  z[215] = -front_.r*(state_[11]*z[0]*z[1] - state_[13]*z[0]*z[2]*z[4]) - state_[17]*z[0]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[17]*z[33]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[1]*z[2]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[18]*z[2]*z[4]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0);
  z[216] = front_.Ixx*z[45]*z[66] - front_.Ixz*z[66]*z[73] + front_.Iyy*z[122] - z[111]*z[66];
  z[217] = -front_.a*z[4] - front_.b*z[1]*z[5] + z[213];
  z[218] = -front_.Ixz*z[122] + front_.Iyy*z[66]*z[73] + front_.Izz*z[54] - front_.J*state_[13]*z[73] - z[110]*z[66];
  z[219] = -front_.R*z[0]*z[12]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[1]*z[30]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[1]*z[36]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[12]*z[3]*z[5]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[220] = front_.Ixx*z[109] + front_.Ixz*z[44] - front_.Iyy*state_[8]*z[0]*z[4]*z[66] - front_.Iyy*state_[8]*z[33]*z[45] + front_.J*state_[13]*state_[8]*z[0]*z[4] + state_[8]*z[111]*z[33] - z[61]*z[66];
  z[221] = front_.Iyy*z[113] + state_[8]*z[0]*z[110]*z[4] - state_[8]*z[111]*z[36] - z[45]*z[60] + z[61]*z[73];
  z[222] = 2*rear_.R*state_[8]*z[1]*z[24]*z[7]/z[15] - 2*rear_.R*state_[8]*z[28]*z[4]*z[7]/z[15] - rear_.R*pow(z[24], 2)*z[3]/z[15] - rear_.R*pow(z[24], 2)*z[7]/(z[15]*z[3]) - rear_.R*pow(z[28], 2)*z[3]/z[15] - rear_.R*pow(z[28], 2)*z[7]/(z[15]*z[3]) - rear_.a*state_[8]*z[0]*z[1]*z[17] - rear_.a*state_[8]*z[24]*z[3] + rear_.a*z[44] + rear_.b*state_[8]*z[0]*z[17]*z[4] - rear_.b*state_[8]*z[28]*z[3] - rear_.b*z[39];
  z[223] = 2*rear_.R*state_[8]*z[1]*z[24]*z[7]/z[15] - 2*rear_.R*state_[8]*z[28]*z[4]*z[7]/z[15] - rear_.R*pow(z[24], 2)*z[3]/z[15] - rear_.R*pow(z[24], 2)*z[7]/(z[15]*z[3]) - rear_.R*pow(z[28], 2)*z[3]/z[15] - rear_.R*pow(z[28], 2)*z[7]/(z[15]*z[3]) - rear_.a*state_[8]*z[0]*z[1]*z[17] - rear_.a*state_[8]*z[24]*z[3] + rear_.a*z[44] + rear_.b*state_[8]*z[0]*z[17]*z[4] - rear_.b*state_[8]*z[28]*z[3] - rear_.b*z[39];
  z[224] = front_.Iyy*z[104] + z[110]*z[24] + z[111]*z[46] - z[45]*z[81] + z[73]*z[82];
  z[225] = front_.Ixx*z[98] + front_.Ixz*z[55] - front_.Iyy*z[24]*z[66] + front_.Iyy*z[40]*z[45] + front_.J*state_[13]*z[24] - z[111]*z[40] - z[66]*z[82];
  z[226] = -front_.R*z[3]*z[30]*z[34]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[3]*z[4]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*pow(z[30], 2)*z[34]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[34]*z[45]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[227] = front_.R*z[3]*z[30]*z[35]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 2*front_.R*z[3]*z[4]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*pow(z[30], 2)*z[35]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 2*front_.R*z[34]*z[45]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[228] = front_.Ixz*z[109] + front_.Izz*z[44] + z[187] + z[60]*z[66];
  z[229] = front_.R*z[123]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*pow(z[66], 2) + front_.b*z[121];
  z[230] = -front_.Ixx*pow(z[66], 2) + front_.Ixz*z[121] + front_.Iyy*pow(z[66], 2) - front_.Iyy*pow(z[73], 2) - front_.J*state_[13]*z[66] + z[110]*z[73];
  z[231] = -front_.Iyy*z[40]*z[73] - front_.Iyy*z[46]*z[66] + front_.J*state_[13]*z[46] + z[110]*z[40] + z[170];
  z[232] = rear_.R*state_[8]*state_[9]*z[0]*z[3]*z[4]/z[15] + rear_.R*state_[8]*state_[9]*z[4]*z[8]/(z[15]*z[3]) - rear_.R*state_[8]*z[0]*z[24]*z[3]/z[15] - rear_.R*state_[8]*z[1]*z[17]*z[7]/z[15] + 2*rear_.R*state_[9]*z[0]*z[28]/z[15] + 2*rear_.R*state_[9]*z[28]*z[8]/pow(z[11], 3.0/2.0) - rear_.R*z[0]*z[44]/z[15] + rear_.R*z[17]*z[24]*z[3]/z[15] + rear_.R*z[17]*z[24]*z[7]/(z[15]*z[3]) - rear_.R*z[3]*z[54]/z[15] - rear_.R*z[54]*z[7]/(z[15]*z[3]) + 2*rear_.a*state_[8]*z[17]*z[3] - rear_.b*state_[8]*state_[9]*z[0] + state_[8]*z[0]*z[4]*z[64] - z[28]*z[38];
  z[233] = -z[1]*z[192]*z[25]*z[3] + z[195]*z[25]*z[3]*z[4];
  z[234] = -rear_.R*state_[8]*state_[9]*z[0]*z[1]*z[3]/z[15] - rear_.R*state_[8]*state_[9]*z[1]*z[8]/(z[15]*z[3]) + rear_.R*state_[8]*z[0]*z[28]*z[3]/z[15] - rear_.R*state_[8]*z[17]*z[4]*z[7]/z[15] + 2*rear_.R*state_[9]*z[0]*z[24]/z[15] + 2*rear_.R*state_[9]*z[24]*z[8]/pow(z[11], 3.0/2.0) - rear_.R*z[0]*z[39]/z[15] - rear_.R*z[17]*z[28]*z[3]/z[15] - rear_.R*z[17]*z[28]*z[7]/(z[15]*z[3]) - rear_.R*z[3]*z[55]/z[15] - rear_.R*z[55]*z[7]/(z[15]*z[3]) - rear_.a*state_[8]*state_[9]*z[0] - 2*rear_.b*state_[8]*z[17]*z[3] - state_[8]*z[0]*z[1]*z[64] - z[24]*z[38];
  z[235] = z[232];
  z[236] = front_.R*z[1]*z[3]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[24]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[4]*z[45]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[46]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[4]*z[73]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*z[45]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[237] = front_.R*z[3]*z[4]*z[73]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[30]*z[45]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + z[208];
  z[238] = front_.R*z[3]*z[4]*z[73]*z[95]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[30]*z[45]*z[95]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + z[208];
  z[239] = -front_.r*state_[13]*z[88] - state_[10]*state_[18]*z[1]*z[2]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[10]*state_[18]*z[1]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[18]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[18]*z[4]*z[5]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[86]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[88]/sqrt(z[10]*z[12] + pow(z[33], 2));
  z[240] = front_.r*z[52] - state_[10]*state_[17]*z[1]*z[2]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[17]*z[4]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[17]*z[129]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[129]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[99]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[8]*z[151];
  z[241] = front_.r*z[52] - state_[10]*state_[17]*z[1]*z[2]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[17]*z[4]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[17]*z[133]*z[2]*z[4]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) - state_[18]*z[133]*z[33]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) + state_[18]*z[99]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[8]*z[151];
  z[242] = front_.r*z[119] + state_[10]*state_[18]*z[1]*z[2]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[18]*z[4]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[17]*z[129]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[99]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[18]*z[129]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[8]*z[138];
  z[243] = front_.r*z[119] + state_[10]*state_[18]*z[1]*z[2]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[18]*z[4]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[17]*z[133]*z[33]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) + state_[17]*z[99]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[18]*z[133]*z[2]*z[4]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) - state_[8]*z[138];
  z[244] = -state_[10]*state_[17]*z[1]*z[2]*z[33]*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[11]*state_[17]*z[33]*z[34]*z[4]*z[5]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[146]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[146]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[33]*z[34]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[89]/sqrt(z[10]*z[12] + pow(z[33], 2));
  z[245] = -front_.r*(state_[10]*state_[11]*z[1]*z[3] - state_[10]*state_[9]*z[3] + state_[11]*state_[9]*z[0]*z[4] + state_[13]*z[89]) + state_[10]*state_[18]*z[1]*z[2]*z[33]*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[11]*state_[18]*z[33]*z[34]*z[4]*z[5]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[146]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[33]*z[34]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[89]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[18]*z[146]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0);
  z[246] = front_.r*(state_[10]*state_[13]*z[1]*z[5] + state_[11]*state_[13]*z[2]*z[4]) + state_[10]*state_[17]*z[1]*z[2]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[10]*state_[17]*z[1]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[17]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[17]*z[4]*z[5]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[86]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[88]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[8]*(-front_.r*state_[13]*z[36] + state_[17]*z[33]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[36]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[18]*z[2]*z[4]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[4]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)));
  z[247] = -rear_.R*z[0]*z[1]*z[195]/z[15] - rear_.R*z[0]*z[192]*z[4]/z[15] - z[0]*z[1]*z[195]*z[25] - z[0]*z[192]*z[25]*z[4];
  z[248] = -front_.R*state_[10]*z[1]*z[3]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[130]*z[3]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - z[108]*z[45] + z[157]*z[45] - z[229];
  z[249] = front_.R*z[123]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[130]*z[30]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[94]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[121] + front_.b*pow(z[66], 2) + z[108]*z[73] - z[157]*z[73];
  z[250] = -front_.R*z[123]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[134]*z[30]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[3]*z[4]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[94]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*z[121] - front_.b*pow(z[66], 2) - z[108]*z[73] + z[157]*z[73];
  z[251] = front_.R*state_[10]*z[1]*z[3]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[130]*z[3]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[130]*z[30]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[45]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[54]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[45]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[54] + front_.a*z[66]*z[73] + front_.b*z[122] + front_.b*z[45]*z[66];
  z[252] = front_.R*state_[10]*z[1]*z[3]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[134]*z[3]*z[4]*z[73]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[134]*z[30]*z[45]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[3]*z[4]*z[45]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[54]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[45]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[54] + front_.a*z[66]*z[73] + front_.b*z[122] + front_.b*z[45]*z[66];
  z[253] = 3*state_[17]*z[129]*z[2]*z[33]*z[34]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - 3*state_[18]*z[129]*pow(z[33], 2)*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[18]*z[129]*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[8]*(-front_.r*(-state_[10]*z[0] - state_[11]*z[3]*z[4] + state_[13]*z[34]) + z[186]) + z[244];
  z[254] = -3*state_[17]*z[129]*pow(z[33], 2)*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[17]*z[129]*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - 3*state_[18]*z[129]*z[2]*z[33]*z[34]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - state_[8]*(state_[17]*z[2]*z[33]*z[34]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*pow(z[33], 2)*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[34]/sqrt(z[10]*z[12] + pow(z[33], 2))) + z[245];
  z[255] = front_.r*z[51] - state_[10]*state_[17]*z[1]*z[2]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[10]*state_[17]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[17]*z[1]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[17]*z[4]*z[5]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[1]*z[129]*z[2]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + 3*state_[17]*z[129]*z[2]*z[4]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[17]*z[161]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[0]*z[129]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - 3*state_[18]*z[129]*z[33]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - state_[18]*z[161]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[63]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[18]*z[77]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[8]*z[215];
  z[256] = -front_.r*z[105] + state_[10]*state_[18]*z[1]*z[2]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[10]*state_[18]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[18]*z[1]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[18]*z[4]*z[5]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[0]*z[129]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - 3*state_[17]*z[129]*z[33]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - state_[17]*z[161]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[63]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[17]*z[77]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[1]*z[129]*z[2]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - 3*state_[18]*z[129]*z[2]*z[4]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - state_[18]*z[161]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[8]*z[212];
  z[257] = -front_.r*z[105] + state_[10]*state_[18]*z[1]*z[2]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[10]*state_[18]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[18]*z[1]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[18]*z[4]*z[5]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[0]*z[133]*z[2]*z[4]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) - 3*state_[17]*z[133]*z[33]*z[77]/(2*pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0)) - state_[17]*z[166]*z[33]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) + state_[17]*z[63]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[17]*z[77]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[1]*z[133]*z[2]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) - 3*state_[18]*z[133]*z[2]*z[4]*z[77]/(2*pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0)) - state_[18]*z[166]*z[2]*z[4]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) - state_[8]*z[212];
  z[258] = -3*state_[17]*z[129]*z[2]*z[4]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[17]*z[129]*z[4]*z[5]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[178]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + 3*state_[18]*z[129]*z[33]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[18]*z[129]*z[36]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[178]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + z[246];
  z[259] = 3*state_[17]*z[129]*z[33]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[17]*z[129]*z[36]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[178]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + 3*state_[18]*z[129]*z[2]*z[4]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - state_[18]*z[129]*z[4]*z[5]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[178]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[8]*(-front_.r*state_[13]*z[4]*z[5] - state_[17]*z[2]*z[4]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[4]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[18]*z[33]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[36]/sqrt(z[10]*z[12] + pow(z[33], 2))) + z[239];
  z[260] = 3*state_[17]*z[135]*z[33]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[17]*z[135]*z[36]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[180]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + 3*state_[18]*z[135]*z[2]*z[4]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - state_[18]*z[135]*z[4]*z[5]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[180]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[8]*(-front_.r*state_[13]*z[4]*z[5] - state_[17]*z[2]*z[4]*z[91]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[4]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[18]*z[33]*z[91]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[36]/sqrt(z[10]*z[12] + pow(z[33], 2))) + z[239];
  z[261] = -front_.R*state_[10]*z[1]*z[3]*z[30]*z[34]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*state_[10]*z[1]*z[3]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[30]*z[34]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*state_[9]*z[0]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[120]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[123]*z[3]*z[30]*z[34]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + 3*front_.R*z[130]*z[3]*z[30]*z[34]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) + front_.R*z[130]*z[3]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[147]*z[3]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*pow(z[30], 2)*z[34]*z[66]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*z[66]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[34]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - 2*front_.a*z[66]*z[73] - front_.b*z[122] - front_.b*z[45]*z[66] - z[226]*z[45];
  z[262] = front_.R*state_[10]*z[1]*z[3]*z[30]*z[34]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[10]*z[1]*z[3]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[30]*z[34]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[9]*z[0]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[123]*z[3]*z[30]*z[34]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 3*front_.R*z[134]*z[3]*z[30]*z[34]*z[4]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) - front_.R*z[134]*z[3]*z[4]*z[73]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[152]*z[3]*z[4]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*pow(z[30], 2)*z[34]*z[66]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[30]*z[66]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[34]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + 2*front_.a*z[66]*z[73] + front_.b*z[122] + front_.b*z[45]*z[66] + z[227]*z[45]/2;
  z[263] = front_.R*z[1]*z[3]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[106]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[123]*z[3]*z[4]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[123]*z[30]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[130]*z[3]*z[4]*z[5]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[130]*z[30]*z[40]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + 3*front_.R*z[130]*z[30]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) - front_.R*z[158]*z[30]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[3]*z[4]*z[40]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[40]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[4]*z[66]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[40]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[62]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[76]*z[94]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + 2*front_.b*z[40]*z[66] + z[108]*z[46] - z[157]*z[46] - z[236]*z[73];
  z[264] = front_.R*z[120]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[123]*pow(z[30], 2)*z[34]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[123]*z[34]/sqrt(z[11]*z[12] + pow(z[30], 2)) - 3*front_.R*z[130]*pow(z[30], 2)*z[34]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) - front_.R*z[130]*z[30]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[130]*z[34]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[147]*z[30]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[30]*z[34]*z[4]*z[66]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[66]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[4]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[34]*z[94]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[73]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[89]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[122] - front_.b*z[66]*z[73] + z[108]*z[66] - z[157]*z[66] + z[226]*z[73];
  z[265] = -front_.R*z[120]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[123]*pow(z[30], 2)*z[34]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[123]*z[34]/sqrt(z[11]*z[12] + pow(z[30], 2)) + 3*front_.R*z[134]*pow(z[30], 2)*z[34]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) + front_.R*z[134]*z[30]*z[73]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[134]*z[34]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[152]*z[30]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[3]*z[30]*z[34]*z[4]*z[66]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[3]*z[4]*z[66]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[34]*z[94]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[73]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[89]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*z[122] + front_.b*z[66]*z[73] - z[108]*z[66] + z[157]*z[66] - z[227]*z[73]/2;
  z[266] = front_.R*state_[10]*z[1]*z[3]*z[40]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[10]*z[1]*z[3]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[10]*z[3]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[1]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[4]*z[40]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[4]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[1]*z[123]*z[3]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[1]*z[130]*z[3]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[106]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[123]*z[3]*z[4]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[130]*z[3]*z[4]*z[40]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 3*front_.R*z[130]*z[3]*z[4]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) + front_.R*z[158]*z[3]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[5]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[40]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[40]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[66]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + 2*front_.a*z[40]*z[66] + z[108]*z[24] - z[157]*z[24] + z[236]*z[45];
  z[267] = -front_.a*z[107] + z[263] - z[73]*z[83];
  z[268] = front_.a*z[104] - z[263] + z[73]*z[79];
  z[269] = -front_.b*z[104] - z[266] - z[45]*z[79];
  z[270] = front_.b*z[107] + z[266] + z[45]*z[83];
  z[271] = -front_.R*state_[8]*z[130]*z[30]*z[33]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[8]*z[3]*z[33]*z[4]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[3]*z[33]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[30]*z[99]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[33]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[0]*z[4]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[123]*z[30]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[123]*z[36]/sqrt(z[11]*z[12] + pow(z[30], 2)) - 3*front_.R*z[130]*z[30]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) - front_.R*z[130]*z[36]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[177]*z[30]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[66]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[87]*z[94]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[88]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*z[113] - 2*front_.b*state_[8]*z[33]*z[66] - state_[8]*z[108]*z[36] + state_[8]*z[157]*z[36] - z[237]*z[73] + z[58]*z[73];
  z[272] = -front_.R*state_[10]*state_[8]*z[1]*z[3]*z[33]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[10]*z[0]*z[1]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[10]*z[1]*z[3]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*state_[8]*state_[9]*z[0]*z[33]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[130]*z[3]*z[33]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*state_[8]*z[3]*z[4]*z[99]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[30]*z[33]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[30]*z[33]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[4]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[9]*z[3]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[0]*z[123]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[0]*z[130]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[123]*z[3]*z[4]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + 3*front_.R*z[130]*z[3]*z[4]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) + front_.R*z[177]*z[3]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*z[66]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[36]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - 2*front_.a*state_[8]*z[33]*z[66] + front_.b*z[113] + state_[8]*z[0]*z[108]*z[4] - state_[8]*z[0]*z[157]*z[4] + z[237]*z[45] - z[45]*z[58];
  z[273] = -front_.R*state_[8]*z[134]*z[30]*z[33]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*state_[8]*z[3]*z[33]*z[4]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[3]*z[33]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[30]*z[99]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[33]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[0]*z[4]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[123]*z[30]*z[90]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[123]*z[36]/sqrt(z[11]*z[12] + pow(z[30], 2)) - 3*front_.R*z[134]*z[30]*z[90]*(state_[13] - z[66])/(4*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) - front_.R*z[134]*z[36]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[179]*z[30]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[3]*z[4]*z[66]*z[90]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[88]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[90]*z[94]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.a*z[113] - 2*front_.b*state_[8]*z[33]*z[66] - state_[8]*z[108]*z[36] + state_[8]*z[157]*z[36] - z[238]*z[73] + z[58]*z[73];
  z[274] = -front_.r*z[0]*z[1]*z[249] - front_.r*z[0]*z[2]*z[251]*z[4] - front_.r*z[0]*z[248]*z[4]*z[5];
  z[275] = front_.R*state_[10]*z[1]*z[3]*z[30]*z[34]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[10]*z[1]*z[3]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[30]*z[34]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[9]*z[0]*z[4]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[30]*z[34]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 3*front_.R*z[130]*z[3]*z[30]*z[34]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) - front_.R*z[130]*z[3]*z[4]*z[66]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + 3*front_.R*z[130]*pow(z[30], 2)*z[34]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) - front_.R*z[130]*z[34]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[147]*z[3]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[147]*z[30]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[30]*z[34]*z[4]*z[45]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[45]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*pow(z[30], 2)*z[34]*z[54]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*pow(z[30], 2)*z[34]*z[73]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[30]*z[34]*z[45]*z[94]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*pow(z[73], 2)/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[34]*z[54]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[34]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[45]*z[89]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*pow(z[73], 2) - front_.b*z[45]*z[73] - z[229];
  z[276] = -front_.R*state_[10]*state_[8]*z[1]*z[3]*z[33]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[10]*z[0]*z[1]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[10]*z[1]*z[3]*z[90]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*state_[8]*state_[9]*z[0]*z[33]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[134]*z[3]*z[33]*z[4]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*state_[8]*z[3]*z[4]*z[99]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[30]*z[33]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[30]*z[33]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[4]*z[90]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*state_[9]*z[3]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[0]*z[123]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[0]*z[134]*z[4]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[123]*z[3]*z[4]*z[90]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + 3*front_.R*z[134]*z[3]*z[4]*z[90]*(state_[13] - z[66])/(4*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) + front_.R*z[179]*z[3]*z[4]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[30]*z[66]*z[90]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[36]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - 2*front_.a*state_[8]*z[33]*z[66] + front_.b*z[113] + state_[8]*z[0]*z[108]*z[4] - state_[8]*z[0]*z[157]*z[4] + z[238]*z[45] - z[45]*z[58];
  z[277] = front_.R*state_[10]*z[1]*z[3]*z[30]*z[34]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[10]*z[1]*z[3]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[30]*z[34]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[9]*z[0]*z[4]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[30]*z[34]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 3*front_.R*z[134]*z[3]*z[30]*z[34]*z[4]*z[73]/(2*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) - front_.R*z[134]*z[3]*z[4]*z[66]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + 3*front_.R*z[134]*pow(z[30], 2)*z[34]*z[45]/(2*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) - front_.R*z[134]*z[34]*z[45]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[152]*z[3]*z[4]*z[73]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[152]*z[30]*z[45]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[3]*z[30]*z[34]*z[4]*z[45]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[45]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*pow(z[30], 2)*z[34]*z[54]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*pow(z[30], 2)*z[34]*z[73]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[30]*z[34]*z[45]*z[94]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*pow(z[73], 2)/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[34]*z[54]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[34]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[45]*z[89]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*pow(z[73], 2) - front_.b*z[45]*z[73] - z[229];
  z[278] = -front_.R*state_[10]*z[1]*z[3]*z[46]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[10]*z[1]*z[3]*z[73]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[10]*z[3]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[1]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[4]*z[46]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[4]*z[73]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[1]*z[120]*z[3]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[1]*z[130]*z[3]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[1]*z[3]*z[45]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[103]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[4]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[130]*z[24]*z[30]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[130]*z[3]*z[4]*z[45]*z[5]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[130]*z[3]*z[4]*z[46]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 3*front_.R*z[130]*z[3]*z[4]*z[73]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) + 3*front_.R*z[130]*z[30]*z[45]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) + front_.R*z[158]*z[3]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[158]*z[30]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[24]*z[3]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[24]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[40]*z[45]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[45]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[5]*z[54]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[4]*z[5]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[40]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[46]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[54]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[30]*z[55]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[73]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[45]*z[62]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[45]*z[76]*z[94]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.a*z[40]*z[73] - front_.a*z[46]*z[66] + front_.a*z[55] + front_.b*z[24]*z[66] - front_.b*z[40]*z[45] - front_.b*z[98];
  z[279] = -front_.R*state_[10]*z[1]*z[3]*z[46]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[10]*z[1]*z[3]*z[73]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[10]*z[3]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[1]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[4]*z[46]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[4]*z[73]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[1]*z[120]*z[3]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[1]*z[134]*z[3]*z[73]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[1]*z[3]*z[45]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[103]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[4]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[134]*z[24]*z[30]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[134]*z[3]*z[4]*z[45]*z[5]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[134]*z[3]*z[4]*z[46]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - 3*front_.R*z[134]*z[3]*z[4]*z[73]*z[76]/(2*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) + 3*front_.R*z[134]*z[30]*z[45]*z[76]/(2*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) + front_.R*z[164]*z[3]*z[4]*z[73]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[164]*z[30]*z[45]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[24]*z[3]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[24]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[40]*z[45]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[45]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[5]*z[54]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[4]*z[5]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[40]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[46]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[54]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[30]*z[55]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[73]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[45]*z[62]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[45]*z[76]*z[94]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.a*z[40]*z[73] - front_.a*z[46]*z[66] + front_.a*z[55] + front_.b*z[24]*z[66] - front_.b*z[40]*z[45] - front_.b*z[98];
  z[280] = -front_.R*state_[10]*state_[8]*z[1]*z[3]*z[36]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[10]*z[0]*z[1]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[10]*z[1]*z[3]*z[73]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*state_[8]*state_[9]*z[0]*z[36]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[0]*z[12]*z[3]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[0]*z[130]*z[30]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[8]*z[0]*z[4]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[130]*z[3]*z[36]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[8]*z[3]*z[33]*z[4]*z[45]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[3]*z[4]*z[88]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[30]*z[33]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[30]*z[36]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[4]*z[73]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*state_[9]*z[3]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[0]*z[120]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[0]*z[130]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[0]*z[4]*z[45]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[4]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 3*front_.R*z[130]*z[3]*z[4]*z[73]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) + 3*front_.R*z[130]*z[30]*z[45]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) + front_.R*z[130]*z[36]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[177]*z[3]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[177]*z[30]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[45]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*z[44]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[54]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*z[73]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[36]*z[54]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[36]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[45]*z[87]*z[94]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[45]*z[88]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*state_[8]*z[33]*z[73] - front_.a*state_[8]*z[36]*z[66] - front_.a*z[44] - front_.b*state_[8]*z[0]*z[4]*z[66] - front_.b*state_[8]*z[33]*z[45] + front_.b*z[109];
  z[281] = -front_.Ixz;
  z[282] = -front_.b;
  z[283] = -rear_.b;
  z[284] = -front_.m;
  z[285] = -rear_.m;
  z[286] = -front_.r;
  z[287] = -state_[11];
  z[288] = -state_[13];
  z[289] = -state_[8];
  z[290] = -state_[9];
  z[291] = z[289]*z[290];
  z[292] = -z[1]*z[286];
  z[293] = -z[286]*z[4];
  z[294] = state_[10]*z[0];
  z[295] = -z[0]*z[289];
  z[296] = -z[290]*z[3];
  z[297] = -z[0];
  z[298] = -2*z[297];
  z[299] = -z[1];
  z[300] = -z[2];
  z[301] = -z[3];
  z[302] = -z[4];
  z[303] = z[297]*z[299];
  z[304] = z[297]*z[300];
  z[305] = z[297]*z[302];
  z[306] = -z[297]*z[5];
  z[307] = z[299]*z[300];
  z[308] = z[299]*z[301];
  z[309] = z[299]*z[302];
  z[310] = -z[299]*z[5];
  z[311] = z[300]*z[301];
  z[312] = z[300]*z[302];
  z[313] = z[301]*z[302];
  z[314] = -z[301]*z[5];
  z[315] = -z[302]*z[5];
  z[316] = -z[12]*z[286];
  z[317] = -z[10];
  z[318] = -z[12];
  z[319] = z[297]/z[301];
  z[320] = rear_.R/z[15];
  z[321] = -z[301]*z[318];
  z[322] = -z[301]/z[15];
  z[323] = z[7]*z[9];
  z[324] = -z[318]*z[7];
  z[325] = -z[8]/z[301];
  z[326] = z[317]*z[318];
  z[327] = -z[11]*z[318];
  z[328] = z[300]*z[318]*z[5];
  z[329] = z[25]*z[297];
  z[330] = z[25]*z[301];
  z[331] = z[282]*z[34];
  z[332] = z[286]*z[34];
  z[333] = z[286]*z[36];
  z[334] = -z[286]*z[33];
  z[335] = z[297]*z[34];
  z[336] = z[299]*z[34];
  z[337] = -z[34]*z[5];
  z[338] = -z[30]*z[300];
  z[339] = -z[299]*z[33];
  z[340] = z[33]*z[5];
  z[341] = -pow(z[30], 2);
  z[342] = z[34]*z[36];
  z[343] = -z[33]*z[34];
  z[344] = -z[33]*z[36];
  z[345] = front_.R/pow(z[327] - z[341], 3.0/2.0);
  z[346] = front_.R/sqrt(z[327] - z[341]);
  z[347] = -z[302]/sqrt(z[326] + pow(z[33], 2));
  z[348] = -z[318]/(z[326] + pow(z[33], 2));
  z[349] = z[33]/(z[326] + pow(z[33], 2));
  z[350] = z[30]*z[345];
  z[351] = z[33]*z[349];
  z[352] = -z[341]*z[345];
  z[353] = z[343]*z[349]/sqrt(z[326] + pow(z[33], 2));
  z[354] = z[74]/pow(z[326] + pow(z[33], 2), 3.0/2.0);
  z[355] = z[77]/(z[326] + pow(z[33], 2));
  z[356] = z[114]*z[33];
  z[357] = z[86]/pow(z[326] + pow(z[33], 2), 3.0/2.0);
  z[358] = z[86]/(z[326] + pow(z[33], 2));
  z[359] = z[92]/(z[326] + pow(z[33], 2));
  z[360] = -z[128]*z[297];
  z[361] = z[209]*z[5];
  z[362] = -z[232]*z[25];
  z[363] = z[241]/sqrt(z[326] + pow(z[33], 2));
  z[364] = z[114]*z[240];
  z[365] = z[243]/sqrt(z[326] + pow(z[33], 2));
  z[366] = z[114]*z[242];
  z[367] = -z[249]*z[293]*z[301];
  z[368] = -z[248]/sqrt(z[326] + pow(z[33], 2));
  z[369] = z[250]/sqrt(z[326] + pow(z[33], 2));
  z[370] = (3*state_[17]*z[135]*z[2]*z[33]*z[34]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - 3*state_[18]*z[135]*pow(z[33], 2)*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[18]*z[135]*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[8]*(-front_.r*(-state_[10]*z[0] - state_[11]*z[3]*z[4] + state_[13]*z[34]) + z[186]) + z[244])/sqrt(z[326] + pow(z[33], 2));
  z[371] = (-3*state_[17]*z[135]*pow(z[33], 2)*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[17]*z[135]*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - 3*state_[18]*z[135]*z[2]*z[33]*z[34]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - state_[8]*(-state_[17]*z[2]*z[33]*z[35]*z[4]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) + state_[18]*pow(z[33], 2)*z[35]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) + state_[18]*z[34]/sqrt(z[10]*z[12] + pow(z[33], 2))) + z[245])/sqrt(z[326] + pow(z[33], 2));
  z[372] = (front_.r*z[51] - state_[10]*state_[17]*z[1]*z[2]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[10]*state_[17]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[17]*z[1]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[17]*z[4]*z[5]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[1]*z[133]*z[2]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) + 3*state_[17]*z[133]*z[2]*z[4]*z[77]/(2*pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0)) + state_[17]*z[166]*z[2]*z[4]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) - state_[18]*z[0]*z[133]*z[2]*z[4]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) - 3*state_[18]*z[133]*z[33]*z[77]/(2*pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0)) - state_[18]*z[166]*z[33]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) + state_[18]*z[63]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[18]*z[77]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[8]*z[215])/sqrt(z[326] + pow(z[33], 2));
  z[373] = (-3*state_[17]*z[135]*z[2]*z[4]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[17]*z[135]*z[4]*z[5]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[180]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + 3*state_[18]*z[135]*z[33]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[18]*z[135]*z[36]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[180]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + z[246])/sqrt(z[326] + pow(z[33], 2));

  ar[0] = -z[160]*z[303] + z[163]*z[305] + z[168]*z[308] - z[171]*z[313] + z[199]*z[33] + z[209]*z[36] + z[218]*z[305] - z[220]*z[30] + z[221]*z[34] - z[228]*z[313] + z[284]*(-z[124]*z[272] + z[127]*z[271] + z[198]*z[254] - z[204]*z[248] + z[205]*z[253] - z[211]*z[249] + z[240]*(z[124]*z[30] - z[127]*z[313] - z[204]*z[36] - z[211]*z[305] + z[33]*z[53] + z[34]*z[57]) + z[242]*(z[204]*z[315] - z[211]*z[299] + z[312]*z[53]) - z[251]*z[53] - z[280]*z[57]) + z[285]*(-z[116]*(z[26]*z[301] + z[27]*z[297] - z[303]*z[49] + z[305]*z[47] - z[308]*z[50] + z[313]*z[48]) + z[128]*(z[299]*z[47] + z[302]*z[49]) + z[131]*(-z[27]*z[301] - z[303]*z[50] + z[305]*z[48]) + z[173]*(z[299]*z[48] + z[302]*z[50]) - z[176]*z[26] - z[192]*z[49] - z[195]*z[47] + z[223]*z[27] - z[232]*z[50] + z[234]*z[48]) + z[297]*(z[132] + z[24]*z[43] - z[28]*z[42]) + z[301]*(-rear_.Iyy*z[291]*z[301] + z[24]*z[68] - z[28]*z[67]);
  ar[1] = z[159]*z[308] + z[160]*z[313] - z[162]*z[313] + z[163]*z[308] + z[189]*z[297] + z[199]*z[302]*z[311] + z[218]*z[308] + z[224]*z[34] - z[225]*z[30] - z[231]*z[313] + z[284]*(z[124]*z[269] - z[127]*z[268] + z[197]*z[248] + z[198]*z[256] - z[203]*z[249] + z[205]*z[255] + z[240]*(-z[124]*z[305]*z[5] + z[127]*z[303] + z[197]*z[36] - z[203]*z[305] + z[302]*z[304]*z[57] + z[33]*z[41]) + z[242]*(z[124]*z[310] - z[127]*z[302] - z[197]*z[315] - z[203]*z[299] + z[307]*z[57] + z[312]*z[41]) - z[251]*z[41] + z[278]*z[57]) + z[285]*(-z[116]*(z[301]*z[31] - z[301]*z[320]*z[323] - z[303]*z[48] - z[305]*z[50] - z[320]*z[321]*z[7]) - z[128]*(z[299]*z[50] - z[302]*z[48]) + z[137]*z[27] - z[176]*z[31] - z[192]*z[301]*z[303]*z[320] + z[195]*z[301]*z[305]*z[320] - z[200]*z[50] - z[202]*z[48]) + z[313]*z[361];
  ar[2] = z[199]*z[30] - z[207]*z[30] + z[209]*z[34] + z[216]*z[34] - z[230]*z[313] + z[284]*(z[124]*z[261] - z[127]*z[264] - z[167]*z[248] - z[191]*z[249] + z[198]*z[259] + z[205]*z[258] + z[240]*(z[124]*z[33] - z[167]*z[36] - z[191]*z[305] + z[33]*z[331] + z[36]*z[57]) + z[242]*(z[124]*z[312] + z[167]*z[315] - z[191]*z[299] + z[282]*z[300]*z[302]*z[34] - z[315]*z[57]) - z[251]*z[331] + z[275]*z[57]);
  ar[3] = z[168]*z[302] + z[171]*z[299] - z[220]*z[315] + z[221]*z[312] + z[228]*z[299] + z[284]*(z[112]*z[272] - z[117]*z[271] + z[139]*z[280] - z[156]*z[248] - z[174]*z[249] + z[206]*z[254] + z[214]*z[253] + z[219]*z[251] + z[240]*(-z[112]*z[30] + z[117]*z[313] - z[139]*z[34] - z[156]*z[36] - z[174]*z[305] - z[219]*z[33]) + z[242]*(z[156]*z[315] - z[174]*z[299] - z[219]*z[312]) - z[248]*z[286]*z[30] - z[251]*z[332] - z[253]*z[286] + z[271]*z[293]*z[297] + z[272]*z[333] + z[280]*z[334] + z[367]) + z[285]*(-z[116]*z[319]*z[320] + z[116]*(-z[21]*z[297] - z[298]*z[301]*z[320]*z[9] - z[298]*z[320]*z[321] - z[318]*z[320]*z[325] + z[320]*z[325]*z[9]) - z[131]*z[25] - z[131]*(z[21]*z[301] + z[320]*z[323] + z[320]*z[324]) - z[176]*z[297]*z[320] - z[176]*z[329] - z[192]*z[308]*z[320] + z[195]*z[313]*z[320] + z[21]*z[223] + z[223]*z[330] - z[232]*z[303]*z[320] + z[233] - z[234]*z[25]*z[305] - z[234]*z[305]*z[320] + z[303]*z[362]);
  ar[4] = z[159]*z[302] - z[160]*z[299] + z[162]*z[299] + z[163]*z[302] - z[199]*z[307] + z[209]*z[310] + z[218]*z[302] + z[224]*z[312] - z[225]*z[315] + z[231]*z[299] + z[284]*(-z[112]*z[269] + z[117]*z[268] - z[139]*z[278] - z[154]*z[248] + z[196]*z[249] + z[206]*z[256] + z[214]*z[255] - z[217]*z[251] + z[240]*(z[112]*z[305]*z[5] - z[117]*z[303] - z[139]*z[302]*z[304] - z[154]*z[36] + z[196]*z[305] + z[217]*z[33]) + z[242]*(-z[112]*z[310] + z[117]*z[302] - z[139]*z[307] + z[154]*z[315] + z[196]*z[299] + z[217]*z[312]) - z[255]*z[286] - z[268]*z[293]*z[297] - z[269]*z[333] + z[274] - z[278]*z[334]) + z[285]*(z[116]*z[18]*z[301] + z[137]*z[21] + z[137]*z[330] + z[176]*z[18] - z[200]*z[25]*z[303] - z[200]*z[303]*z[320] + z[202]*z[25]*z[305] + z[202]*z[305]*z[320] + z[247]);
  ar[5] = z[199]*z[315] - z[207]*z[315] + z[209]*z[312] + z[216]*z[312] + z[230]*z[299] + z[284]*(-z[112]*z[261] + z[117]*z[264] - z[139]*z[275] + z[148]*z[248] - z[188]*z[249] + z[206]*z[259] - z[210]*z[251] + z[214]*z[258] + z[240]*(-z[112]*z[33] - z[139]*z[36] + z[148]*z[36] - z[188]*z[305] + z[210]*z[33]) + z[242]*(-z[112]*z[312] + z[139]*z[315] - z[148]*z[315] - z[188]*z[299] + z[210]*z[312]) + z[248]*z[334] - z[251]*z[333] - z[258]*z[286] - z[261]*z[333] - z[264]*z[293]*z[297] - z[275]*z[334]);
  ar[6] = -z[132] + z[220]*z[300] - z[221]*z[5] - z[24]*z[295]*(rear_.Ixz*z[1] + rear_.Izz*z[302]) + z[28]*z[295]*(rear_.Ixx*z[1] + rear_.Ixz*z[302]) + z[284]*(z[115]*z[271] - z[149]*z[248] + z[153]*z[251] - z[169]*z[249] + z[182]*z[254] + z[194]*z[253] + z[240]*(-z[115]*z[313] - z[149]*z[36] - z[153]*z[33] - z[169]*z[305] + z[30]*z[97] + z[34]*z[96]) + z[242]*z[286]*z[297] + z[242]*(z[149]*z[315] - z[153]*z[312] - z[169]*z[299]) - z[254]*z[286]*z[301] + z[271]*z[292]*z[301] - z[272]*z[293]*z[314] - z[272]*z[97] + z[274] - z[280]*z[293]*z[311] - z[280]*z[96]) + z[285]*(rear_.a*z[234] - z[116]*z[27] + z[128]*z[329] + z[131]*z[26] - z[173]*z[21] - z[173]*z[330] - z[232]*z[283] - z[234]*z[25]*z[308] + z[247] - z[313]*z[362] - z[320]*z[360]);
  ar[7] = -z[189] - z[224]*z[5] + z[225]*z[300] + z[284]*(-z[115]*z[268] + z[142]*z[251] + z[143]*z[248] - z[155]*z[249] + z[182]*z[256] + z[194]*z[255] + z[240]*(z[115]*z[303] - z[142]*z[33] + z[143]*z[36] - z[155]*z[305] + z[302]*z[304]*z[96] - z[305]*z[5]*z[97]) + z[242]*(-z[115]*z[302] - z[142]*z[312] - z[143]*z[315] - z[155]*z[299] + z[307]*z[96] + z[310]*z[97]) - z[248]*z[292]*z[314] - z[251]*z[292]*z[311] - z[256]*z[286]*z[301] - z[268]*z[292]*z[301] + z[269]*z[293]*z[314] + z[269]*z[97] + z[278]*z[293]*z[311] + z[278]*z[96] + z[367]) + z[285]*(-rear_.a*z[202] + z[116]*(-rear_.a*z[0]*z[299] + z[283]*z[305]) - z[128]*z[18] + z[200]*z[25]*z[313] - z[200]*z[283] + z[202]*z[25]*z[308] + z[233]);
  ar[8] = -z[199]*z[300] + z[207]*z[300] - z[216]*z[5] + z[284]*(-z[115]*z[264] - z[144]*z[251] - z[145]*z[248] + z[182]*z[259] + z[185]*z[249] + z[194]*z[258] + z[240]*(z[144]*z[33] - z[145]*z[36] + z[185]*z[305] + z[33]*z[97] + z[36]*z[96]) + z[242]*(z[144]*z[312] + z[145]*z[315] + z[185]*z[299] + z[312]*z[97] - z[315]*z[96]) - z[248]*z[293]*z[311] + z[251]*z[293]*z[314] - z[259]*z[286]*z[301] + z[261]*z[293]*z[314] + z[261]*z[97] - z[264]*z[292]*z[301] + z[275]*z[293]*z[311] + z[275]*z[96]) - z[361];
  ar[9] = front_.Izz*z[289]*(-z[294]*z[299] + z[296]*z[302]) - z[187] - z[281]*z[289]*(z[290]*z[30] + z[59]) + z[284]*(z[114]*z[254]*z[312] + z[114]*z[280] - z[165]*z[240]*z[33] - z[165]*z[242]*z[312] + z[165]*z[251] - z[242]*z[293]*z[301] - z[248]*(z[286]*z[321]*z[5] - z[292]*z[30]) + z[251]*(z[292]*z[34] - z[311]*z[316]) + z[253]*z[292] + z[253]*z[356] - z[254]*z[293]*z[297] + z[272]*z[65] - z[280]*z[75] - z[34]*z[364]) + z[289]*z[66]*(-front_.Ixx*z[36] + z[281]*z[305]);
  ar[10] = front_.Iyy*z[28]*z[300]*z[73] + front_.Iyy*z[28]*z[5]*z[66] + front_.J*z[28]*z[288]*z[5] - z[110]*z[28]*z[300] - z[170] + z[284]*(z[114]*z[256]*z[312] - z[114]*z[278] + z[150]*z[240]*z[33] + z[150]*z[242]*z[312] - z[150]*z[251] + z[240]*z[293] + z[242]*z[292]*z[297] - z[248]*(-z[292]*z[305]*z[5] - z[293]*z[36]) + z[251]*z[72] + z[255]*z[292] + z[255]*z[356] - z[256]*z[293]*z[297] - z[269]*z[65] + z[278]*z[75] - z[302]*z[304]*z[364] - z[307]*z[366]);
  ar[11] = -z[230] + z[284]*(z[114]*z[259]*z[312] - z[114]*z[275] - z[141]*z[240]*z[33] - z[141]*z[242]*z[312] + z[141]*z[251] - z[248]*z[75] - z[251]*z[65] + z[258]*z[292] + z[258]*z[356] - z[259]*z[293]*z[297] - z[261]*z[65] + z[275]*z[75] + z[315]*z[366] - z[36]*z[364]);
  ar[12] = -rear_.J*z[291]*z[297] + z[285]*(z[128]*z[329] - z[173]*z[330] - z[234]*z[25]*z[308] + z[247] - z[313]*z[362] - z[320]*z[360]);
  ar[13] = -z[285]*z[330]*(z[192]*z[299] - z[195]*z[302] - z[200]*z[302] - z[202]*z[299]);
  ar[14] = 0;
  ar[15] = front_.J*z[289]*(z[1]*z[287]*z[306] - z[2]*z[287]*z[301] - z[290]*z[34] - z[294]*z[312]) + z[284]*(z[136]*z[254] + z[140]*z[253] - z[219]*z[242] + z[240]*(z[305]*z[350]*z[87] - z[313]*z[345]*z[36]*z[87]) + z[242]*z[332] - z[248]*z[305]*z[346] - z[248]*z[313]*z[345]*z[87] - z[248]*(z[293]*z[337] + z[293]*z[338]) + z[249]*z[346]*z[36] + z[249]*z[350]*z[87] - z[249]*(-z[292]*z[34] + z[311]*z[316]) + z[253]*z[293]*z[300] + z[254]*z[334] + z[271]*z[30]*z[346] - z[271]*z[75] - z[272]*z[313]*z[346] + z[272]*z[93]);
  ar[16] = -front_.J*z[104] + z[284]*(z[136]*z[256] + z[140]*z[255] + z[213]*z[242] - z[240]*z[292]*z[300] - z[240]*(-z[30]*z[303]*z[346] + z[305]*z[350]*z[76] + z[308]*z[346]*z[36] - z[313]*z[345]*z[36]*z[76]) + z[242]*z[293]*z[304] - z[248]*z[308]*z[346] + z[248]*z[313]*z[345]*z[76] - z[248]*(z[292]*z[300]*z[36] - z[292]*z[340]) + z[249]*z[313]*z[346]*z[5] - z[249]*z[350]*z[76] + z[249]*z[72] + z[255]*z[293]*z[300] + z[256]*z[334] - z[268]*z[30]*z[346] + z[268]*z[75] + z[269]*z[313]*z[346] - z[269]*z[93]);
  ar[17] = -front_.J*z[122] + z[284]*(z[136]*z[259] + z[140]*z[258] - z[240]*z[293]*z[5] + z[240]*(z[305]*z[34]*z[346] - z[305]*z[34]*z[352] + z[313]*z[33]*z[346] + z[313]*z[342]*z[350]) + z[242]*z[333] + z[242]*(z[193] - z[311]*z[318]*z[346]) + z[248]*z[30]*z[313]*z[34]*z[345] + z[249]*z[34]*z[346] - z[249]*z[34]*z[352] - z[249]*z[65] + z[258]*z[293]*z[300] + z[259]*z[334] + z[261]*z[313]*z[346] - z[261]*z[93] - z[264]*z[30]*z[346] + z[264]*z[75]);
  ar[18] = z[285]*z[322]*(z[173] + z[234]*z[299] - z[235]*z[302]);
  ar[19] = z[285]*z[322]*(-z[190]*z[302] + z[192]*z[299] - z[201]*z[302] - z[202]*z[299]);
  ar[20] = 0;
  ar[21] = z[285]*z[322]*(z[175]*z[297] - z[190]*z[313] + z[192]*z[308] - z[222]*z[301] + z[234]*z[305] + z[235]*z[303] - z[289]*(-z[19]*z[25] - z[20]*z[319]*z[320]) + z[78]);
  ar[22] = z[285]*z[322]*(-z[137]*z[301] + z[190]*z[303] + z[192]*z[305] + z[201]*z[303] - z[202]*z[305]);
  ar[23] = 0;
  ar[24] = z[285]*(-z[175]*z[301] - z[190]*z[305] + z[192]*z[303] - z[222]*z[297] - z[234]*z[313] - z[235]*z[308]);
  ar[25] = z[285]*(-z[137]*z[297] - z[192]*z[313] - z[195]*z[308] - z[200]*z[308] + z[202]*z[313]);
  ar[26] = 0;
  ar[27] = z[284]*(z[118]*z[273] + z[125]*z[276] - z[241]*z[312]*z[343]/pow(z[326] + pow(z[33], 2), 3.0/2.0) + z[243]*z[353] + z[248]*z[347]*(z[300]*z[34]*z[344]/(z[326] + pow(z[33], 2)) - z[337]*z[351] + z[337] + z[338]) - z[250]*(-z[304]*z[343]*z[348] - z[311]*z[318] - z[336]*z[351] + z[336])/sqrt(z[326] + pow(z[33], 2)) + z[312]*z[370] - z[33]*z[371] + z[34]*z[365]);
  ar[28] = z[284]*(z[118]*z[267] + z[125]*z[270] + z[241]*z[312]*z[354] - z[243]*z[304]*z[347] + z[248]*(-z[307]*z[36] - z[310]*z[33] + z[312]*z[355]*z[36] + z[315]*z[349]*z[77])/sqrt(z[326] + pow(z[33], 2)) - z[250]*(-z[302]*z[33] - z[303]*z[312] + z[304]*z[348]*z[77] + z[339]*z[355])/sqrt(z[326] + pow(z[33], 2)) - z[257]*z[33]/sqrt(z[326] + pow(z[33], 2)) - z[307]*z[363] + z[312]*z[372] - z[349]*z[365]*z[74]);
  ar[29] = z[284]*(z[118]*z[265] + z[125]*z[262] - z[241]*z[312]*z[357] - z[248]*z[347]*z[358]*z[84] - z[260]*z[33]/sqrt(z[326] + pow(z[33], 2)) + z[312]*z[373] + z[315]*z[363] + z[349]*z[365]*z[86] + z[36]*z[365] + z[369]*(-z[299]*z[36] + z[304]*z[348]*z[86] + z[306]*z[318] + z[339]*z[358]));
  ar[30] = z[284]*(z[126]*z[276] + z[241]*z[353] + z[243]*z[312]*z[343]/pow(z[326] + pow(z[33], 2), 3.0/2.0) + z[250]*z[347]*(-z[301]*z[33] + z[307]*z[343]/(z[326] + pow(z[33], 2)) - z[335]*z[351] + z[335]) - z[252]*z[343]*(z[326]/(z[326] + pow(z[33], 2)) + z[351] - 2)/sqrt(z[326] + pow(z[33], 2)) + z[273]*z[347]*z[56] - z[280]*sqrt(z[326] + pow(z[33], 2)) - z[312]*z[371] - z[33]*z[370] + z[34]*z[363] + z[368]*(z[30]*z[33] + z[328]*z[343]/(z[326] + pow(z[33], 2)) + z[342]*z[351] - z[342]));
  ar[31] = z[284]*(z[126]*z[270] - z[241]*z[304]*z[347] - z[243]*z[312]*z[354] + z[248]*(2*z[300]*z[309]*z[5] + z[302]*z[304]*z[36] + z[305]*z[340] + z[328]*z[355] + z[344]*z[355])/sqrt(z[326] + pow(z[33], 2)) + z[252]*(z[298]*z[312]*z[33] + 2*z[309]*z[317] + z[326]*z[80]/(z[326] + pow(z[33], 2)) + z[351]*z[80])/sqrt(z[326] + pow(z[33], 2)) - z[257]*z[312]/sqrt(z[326] + pow(z[33], 2)) + z[267]*z[347]*z[56] + z[279]*sqrt(z[326] + pow(z[33], 2)) + z[307]*z[365] - z[33]*z[372] - z[349]*z[363]*z[74] + z[369]*(-z[300]*z[318] - z[300]*z[324] - z[300]*z[9] - z[303]*z[33] + z[305]*z[349]*z[80] - z[307]*z[347]*z[80]/sqrt(z[326] + pow(z[33], 2))));
  ar[32] = z[284]*(z[126]*z[262] + z[243]*z[312]*z[357] - z[250]*z[347]*(-z[297]*z[33]*z[359] + z[298]*z[36] - 2*z[299]*z[5] - z[307]*z[359])/2 - z[252]*(-4*z[300]*z[318]*z[5] + z[326]*z[359] - 4*z[344] + z[351]*z[92])/(2*sqrt(z[326] + pow(z[33], 2))) - z[260]*z[312]/sqrt(z[326] + pow(z[33], 2)) + z[265]*z[347]*z[56] + z[277]*sqrt(z[326] + pow(z[33], 2)) - z[315]*z[365] - z[33]*z[373] + z[349]*z[363]*z[86] + z[36]*z[363] + z[368]*(z[13]*z[318] + z[326] + z[328]*z[358] + pow(z[33], 2) + z[344]*z[358] - pow(z[36], 2)));
  ar[33] = z[284]*(z[248]*z[36] - z[250]*z[305] - z[252]*z[33] + z[273]*z[313] + z[276]*z[30] + z[280]*z[34]);
  ar[34] = z[284]*(z[248]*z[313]*z[5] - z[250]*z[308] - z[252]*z[302]*z[311] + z[267]*z[313] + z[270]*z[30] - z[279]*z[34]);
  ar[35] = z[284]*(z[248]*z[34] - z[252]*z[30] + z[262]*z[30] + z[265]*z[313] - z[277]*z[34]);

  delete [] z;
}

/** Computes the n-d array of shape (12, 12)
 *
 * @param[out] a C-array of with 144 elements
 */
//  void Bicycle::gif_ud_zero_du(double ar[144]) const;
void Bicycle::gif_ud_zero_du(double ar[144]) const
{
  double * z = new double[296];

  z[0] = -2;
  z[1] = sin(state_[1]);
  z[2] = sin(state_[2]);
  z[3] = sin(state_[3]);
  z[4] = cos(state_[1]);
  z[5] = cos(state_[2]);
  z[6] = cos(state_[3]);
  z[7] = pow(z[1], -z[0]);
  z[8] = pow(z[3], -z[0]);
  z[9] = pow(z[4], -z[0]);
  z[10] = pow(z[5], -z[0]);
  z[11] = sqrt(z[9]);
  z[12] = rear_.r*state_[9]*z[1];
  z[13] = -state_[10] - state_[8]*z[1];
  z[14] = rear_.Ixx*z[5] + rear_.Ixz*z[2];
  z[15] = rear_.Ixz*z[5] + rear_.Izz*z[2];
  z[16] = rear_.a*z[5] + rear_.b*z[2];
  z[17] = state_[10]*z[1] + state_[12]*z[1];
  z[18] = rear_.R/z[11] + rear_.r;
  z[19] = rear_.a*z[2] - rear_.b*z[5];
  z[20] = -state_[10]*z[4] - state_[12]*z[4];
  z[21] = state_[11]*z[5] + state_[13]*z[2]*z[3];
  z[22] = front_.Ixx*z[5]*z[6] + front_.Ixz*z[2];
  z[23] = front_.Ixz*z[5]*z[6] + front_.Izz*z[2];
  z[24] = state_[8]*z[4]*z[5] + state_[9]*z[2];
  z[25] = front_.a*z[2] - front_.b*z[5]*z[6];
  z[26] = state_[10]*z[2] - state_[8]*z[1]*z[2];
  z[27] = state_[10]*z[5] - state_[8]*z[1]*z[5];
  z[28] = state_[8]*z[2]*z[4] - state_[9]*z[5];
  z[29] = rear_.a*z[1]*z[5] + rear_.b*z[1]*z[2];
  z[30] = rear_.a*z[4]*z[5] + rear_.b*z[2]*z[4];
  z[31] = -z[24];
  z[32] = z[1]*z[3] - z[2]*z[4]*z[6];
  z[33] = rear_.Ixx*z[2]*z[4] - rear_.Ixz*z[4]*z[5];
  z[34] = rear_.Ixz*z[2]*z[4] - rear_.Izz*z[4]*z[5];
  z[35] = state_[10]*z[2]*z[3] - state_[11]*z[5]*z[6];
  z[36] = state_[10]*z[4]*z[5] - state_[9]*z[1]*z[2];
  z[37] = z[1]*z[2]*z[3] - z[4]*z[6];
  z[38] = rear_.R*z[2]*z[4]/z[11] + rear_.a;
  z[39] = -z[1]*z[6] - z[2]*z[3]*z[4];
  z[40] = -state_[10]*z[2]*z[4] - state_[9]*z[1]*z[5];
  z[41] = -z[1]*z[2]*z[6] - z[3]*z[4];
  z[42] = -z[0]*z[1]*z[2]*z[6] - z[0]*z[3]*z[4];
  z[43] = pow(z[32], -z[0]);
  z[44] = pow(z[37], -z[0]);
  z[45] = rear_.R*z[4]*z[5]/z[11] - rear_.b;
  z[46] = -state_[11] - z[24];
  z[47] = rear_.R*z[1]*z[4]*z[5]/z[11] - rear_.b*z[1];
  z[48] = -state_[11]*z[3] + state_[8]*z[3]*z[4]*z[5] + state_[9]*z[2]*z[3];
  z[49] = state_[10]*z[2]*z[5]*z[9] + state_[9]*z[1]*z[10]*z[4];
  z[50] = -rear_.R*z[1]*z[2]*z[4]/z[11] - rear_.a*z[1];
  z[51] = state_[11]*z[6] - state_[8]*z[4]*z[5]*z[6] - state_[9]*z[2]*z[6];
  z[52] = front_.Ixx*z[32] + front_.Ixz*z[4]*z[5];
  z[53] = front_.Ixz*z[32] + front_.Izz*z[4]*z[5];
  z[54] = rear_.a*z[0]*z[13]*z[5] + rear_.b*z[0]*z[13]*z[2];
  z[55] = z[1]*z[37] - z[2]*z[3];
  z[56] = front_.a*z[4]*z[5] - front_.b*z[32];
  z[57] = state_[10]*z[3]*z[4]*z[5] - state_[11]*z[1]*z[3] + state_[11]*z[2]*z[4]*z[6];
  z[58] = -state_[10]*z[4]*z[5]*z[6] + state_[11]*z[1]*z[6] + state_[11]*z[2]*z[3]*z[4];
  z[59] = -z[13]*z[6] + z[28]*z[3];
  z[60] = -state_[15]*z[4]/z[11] - state_[9]*z[18];
  z[61] = -z[13]*z[3] - z[28]*z[6];
  z[62] = z[10]*z[9] + z[43];
  z[63] = z[10]*z[8] + z[44];
  z[64] = -rear_.R*state_[9]*z[1]/z[11] + state_[9]*z[1]*z[18];
  z[65] = -rear_.a*z[31] + rear_.b*z[28];
  z[66] = -z[10]*z[4]*z[6] + z[2]*z[32];
  z[67] = front_.r*z[1]*z[10]*z[6] - front_.r*z[2]*z[41];
  z[68] = sqrt(z[62]);
  z[69] = pow(z[62], 3.0/2.0);
  z[70] = sqrt(z[63]);
  z[71] = pow(z[63], 3.0/2.0);
  z[72] = -state_[10]*z[6] + state_[8]*z[39] + state_[9]*z[3]*z[5];
  z[73] = -rear_.Ixx*z[28] - rear_.Ixz*z[31];
  z[74] = -rear_.Ixz*z[28] - rear_.Izz*z[31];
  z[75] = -rear_.a*z[28] - rear_.b*z[31];
  z[76] = -z[1]*z[10]*z[3] - z[2]*z[37];
  z[77] = front_.r*z[1]*z[10]*z[3] + front_.r*z[2]*z[37];
  z[78] = -state_[10]*z[3] - state_[8]*z[32] - state_[9]*z[5]*z[6];
  z[79] = -state_[10]*z[2]*z[6] - state_[11]*z[3]*z[5] - state_[8]*z[41];
  z[80] = -z[77];
  z[81] = -z[77];
  z[82] = z[2]*z[5]*z[9] + z[32]*z[4]*z[5]*z[6];
  z[83] = -state_[8]*z[37] - z[35];
  z[84] = -state_[8]*z[37] + z[35];
  z[85] = -state_[13] + z[72];
  z[86] = state_[14]*z[4]/z[11] + z[18]*z[20];
  z[87] = -z[1]*z[3]*z[37]*z[5] + z[2]*z[5]*z[8];
  z[88] = front_.r*z[83];
  z[89] = z[3]*z[41] + z[37]*z[6];
  z[90] = -front_.r*state_[8]*z[37] - front_.r*z[35];
  z[91] = state_[10]*z[1]*z[3]*z[5] + state_[11]*z[1]*z[2]*z[6] + state_[11]*z[3]*z[4] + state_[9]*z[1]*z[6] + state_[9]*z[2]*z[3]*z[4];
  z[92] = state_[9]*z[1]*z[2]*z[6] + state_[9]*z[3]*z[4] + z[58];
  z[93] = -z[1]*z[10]*z[4] - z[32]*z[41];
  z[94] = -state_[9]*z[41] + z[58];
  z[95] = -state_[9]*z[1]*z[2]*z[3] + state_[9]*z[4]*z[6] + z[57];
  z[96] = -z[10]*z[3]*z[6] + z[37]*z[41];
  z[97] = z[0]*z[1]*z[10]*z[4] + z[32]*z[42];
  z[98] = z[10]*z[3]*z[6] + z[37]*z[42]/2;
  z[99] = front_.r*z[3]*z[41]*z[5] + front_.r*z[37]*z[5]*z[6];
  z[100] = -state_[9]*z[37] + z[57];
  z[101] = front_.R*z[3]*z[4]*z[5]/z[68] - front_.b*z[3];
  z[102] = front_.R*z[4]*z[5]*z[6]/z[68] - front_.b*z[6];
  z[103] = -state_[10]*z[0]*z[1]*z[3]*z[5] - state_[11]*z[0]*z[1]*z[2]*z[6] - state_[11]*z[0]*z[3]*z[4] - state_[9]*z[0]*z[1]*z[6] - state_[9]*z[0]*z[2]*z[3]*z[4];
  z[104] = state_[10]*z[0]*z[4]*z[5]*z[6] - state_[11]*z[0]*z[1]*z[6] - state_[11]*z[0]*z[2]*z[3]*z[4] - state_[9]*z[0]*z[1]*z[2]*z[6] - state_[9]*z[0]*z[3]*z[4];
  z[105] = state_[8]*z[3]*z[5] + z[91];
  z[106] = -front_.Ixx*z[78] - front_.Ixz*z[46];
  z[107] = -front_.Ixz*z[78] - front_.Izz*z[46];
  z[108] = -front_.a*z[46] + front_.b*z[78];
  z[109] = front_.R*z[10]*z[3]*z[4]/z[68] - front_.b*z[3]*z[5];
  z[110] = front_.r*state_[8]*z[3]*z[5] + front_.r*z[91];
  z[111] = rear_.R*z[10]*z[7]/z[11] + rear_.R*pow(z[2], -z[0])*z[7]/z[11] - z[19]*z[4];
  z[112] = z[2]*z[50] - z[47]*z[5];
  z[113] = front_.R*z[32]/z[68] - front_.a;
  z[114] = front_.R*z[32]*z[6]/z[68] - front_.a*z[6];
  z[115] = z[59] + z[72];
  z[116] = front_.R*z[3]*z[32]*z[5]/z[68] - front_.a*z[3]*z[5];
  z[117] = rear_.Ixx*z[31] + rear_.Ixz*z[0]*z[28] + rear_.Iyy*z[31] - rear_.Izz*z[31];
  z[118] = -z[111] + z[18];
  z[119] = z[76]/z[70];
  z[120] = rear_.R*z[1]*z[20]/(z[11]*z[4]) - state_[8]*z[18] + z[17]*z[18];
  z[121] = rear_.Ixx*z[28] - rear_.Ixz*z[0]*z[31] - rear_.Iyy*z[28] - rear_.Izz*z[28];
  z[122] = -z[32]*z[78] - z[4]*z[46]*z[5];
  z[123] = -rear_.Ixz*z[26] - rear_.Iyy*z[13]*z[5] + rear_.Izz*z[27] + rear_.J*state_[12]*z[5] + z[13]*z[14];
  z[124] = -rear_.Ixx*z[26] + rear_.Ixz*z[27] + rear_.Iyy*z[13]*z[2] - rear_.J*state_[12]*z[2] - z[13]*z[15];
  z[125] = -front_.R*z[39]*z[4]*z[5]/z[68] + front_.b*z[39];
  z[126] = -z[1]*z[2]*z[47] - z[1]*z[5]*z[50] + z[30]*z[4];
  z[127] = -z[5]*z[89]/z[70];
  z[128] = z[96]/z[70];
  z[129] = -front_.R*z[32]*z[39]/z[68] + front_.a*z[39];
  z[130] = rear_.Iyy*state_[9]*z[4] + z[2]*z[4]*z[74] + z[4]*z[5]*z[73];
  z[131] = state_[10]*z[2]*z[5]*z[8] - state_[11]*z[10]*z[3]*z[6] - z[37]*z[91];
  z[132] = -z[32]*z[92] + z[49];
  z[133] = -z[104]*z[32]/2 + z[49];
  z[134] = -state_[10]*z[0]*z[2]*z[5]*z[8] + state_[11]*z[0]*z[10]*z[3]*z[6] - z[103]*z[37];
  z[135] = -state_[10]*z[0]*z[2]*z[5]*z[9] - state_[9]*z[0]*z[1]*z[10]*z[4] - z[104]*z[32];
  z[136] = -front_.R*z[10]*z[4]*z[6]/z[68] + front_.R*z[2]*z[32]/z[68];
  z[137] = front_.Ixx*z[59] + front_.Iyy*z[72] - front_.Izz*z[72] - front_.J*state_[13];
  z[138] = -front_.r*(state_[11]*z[2] - state_[13]*z[3]*z[5] + state_[9]) - state_[17]*z[3]*z[5]/z[70] + state_[18]*z[37]/z[70];
  z[139] = z[136] - z[25];
  z[140] = -front_.R*z[1]*z[32]*z[5]/z[68] + front_.R*z[4]*z[41]*z[5]/z[68];
  z[141] = -rear_.R*z[0]*z[1]*z[2]*z[31]/z[11] - rear_.R*z[0]*z[1]*z[28]*z[5]/z[11] - rear_.a*z[13]*z[5] + rear_.a*z[27] - rear_.b*z[13]*z[2] + rear_.b*z[26];
  z[142] = -front_.Ixx*z[78] + front_.Ixz*z[0]*z[46] - front_.Iyy*z[61] + front_.Izz*z[78];
  z[143] = -front_.r*(state_[10]*z[4] - state_[11]*z[1]*z[5] - state_[13]*z[37]) - state_[17]*z[37]/z[70] - state_[18]*z[3]*z[5]/z[70];
  z[144] = rear_.Iyy*state_[8]*z[4] - z[14]*z[31] + z[15]*z[28] + z[2]*z[73] - z[5]*z[74];
  z[145] = front_.r*state_[8]*z[2] + front_.r*(state_[10]*z[1]*z[2] + state_[13]*z[41] - state_[9]*z[4]*z[5]) - state_[17]*z[41]/z[70] + state_[18]*z[5]*z[6]/z[70];
  z[146] = -front_.R*z[32]*z[46]/z[68] + front_.R*z[4]*z[5]*z[78]/z[68];
  z[147] = -front_.Ixx*z[3]*z[46] + front_.Ixz*z[3]*z[78] + front_.Iyy*z[48] - z[107]*z[3];
  z[148] = front_.R*z[32]*z[78]/z[68] + front_.R*z[4]*z[46]*z[5]/z[68];
  z[149] = -rear_.Ixx*z[36] + rear_.Ixz*z[40] + rear_.Iyy*z[1]*z[31] + rear_.Iyy*z[13]*z[4]*z[5] - rear_.J*state_[12]*z[4]*z[5] + z[1]*z[74] + z[13]*z[34];
  z[150] = -rear_.Ixz*z[36] - rear_.Iyy*z[1]*z[28] + rear_.Iyy*z[13]*z[2]*z[4] + rear_.Izz*z[40] - rear_.J*state_[12]*z[2]*z[4] - z[1]*z[73] - z[13]*z[33];
  z[151] = -front_.R*z[4]*z[5]*z[72]/z[68] + front_.R*z[92]/z[68];
  z[152] = front_.Ixx*z[51] - front_.Ixz*z[28] - front_.Ixz*z[3]*z[72] + front_.Iyy*z[46]*z[6] + z[107]*z[6];
  z[153] = -z[131]*z[3]*z[5]/z[63] - z[83];
  z[154] = front_.R*state_[10]*z[2]*z[4]/z[68] + front_.R*state_[9]*z[1]*z[5]/z[68] - front_.R*z[32]*z[72]/z[68];
  z[155] = rear_.R*z[0]*z[1]*z[2]*z[28]*z[4]/z[11] - rear_.R*z[0]*z[1]*z[31]*z[4]*z[5]/z[11] - rear_.a*z[1]*z[28] + rear_.a*z[13]*z[2]*z[4] + rear_.a*z[40] - rear_.b*z[1]*z[31] - rear_.b*z[13]*z[4]*z[5] + rear_.b*z[36];
  z[156] = z[155];
  z[157] = -z[3]*z[5]*(state_[10]*z[2]*z[5]*z[8] - state_[11]*z[10]*z[3]*z[6] - z[103]*z[37]/2)/z[63] - z[83];
  z[158] = -z[101]*z[3]*z[5] - z[102]*z[5]*z[6] + z[114]*z[2];
  z[159] = z[158];
  z[160] = state_[17]*z[3]*z[37]*z[39]*z[5]/z[71] - state_[18]*z[39]*z[44]/z[71] + state_[18]*z[39]/z[70];
  z[161] = -z[105] - z[131]*z[37]/z[63];
  z[162] = -front_.r*state_[8] - state_[17]*z[39]*z[44]/z[71] + state_[17]*z[39]/z[70] - state_[18]*z[3]*z[37]*z[39]*z[5]/z[71];
  z[163] = -z[1]*z[114]*z[5] - z[101]*z[37] + z[102]*z[41];
  z[164] = -z[1]*z[114]*z[5] - z[101]*z[37] + z[102]*z[41];
  z[165] = -rear_.R*state_[9]*z[11]*z[5] - rear_.R*state_[9]*z[5]*z[7]/z[11] + rear_.R*z[1]*z[13]*z[2]*z[4]/z[11] - rear_.R*z[1]*z[40]/z[11] - rear_.R*z[28]*z[7]/z[11] - rear_.a*z[0]*z[1]*z[13] + rear_.b*state_[9]*z[4] + z[30]*z[31] - z[4]*z[5]*z[65];
  z[166] = -rear_.R*state_[9]*z[11]*z[2] - rear_.R*state_[9]*z[2]*z[7]/z[11] - rear_.R*z[1]*z[13]*z[4]*z[5]/z[11] - rear_.R*z[1]*z[36]/z[11] - rear_.R*z[31]*z[7]/z[11] - rear_.a*state_[9]*z[4] - rear_.b*z[0]*z[1]*z[13] - z[2]*z[4]*z[65] - z[28]*z[30];
  z[167] = -z[125]*z[5]*z[6] + z[129]*z[2] - z[3]*z[5]*z[56];
  z[168] = -rear_.R*state_[9]*z[11]*z[5] - rear_.R*state_[9]*z[5]*z[7]/z[11] + rear_.R*z[1]*z[13]*z[2]*z[4]/z[11] - rear_.R*z[1]*z[40]/z[11] - rear_.R*z[28]*z[7]/z[11] - rear_.a*z[0]*z[1]*z[13] + rear_.b*state_[9]*z[4] + z[30]*z[31] - z[4]*z[5]*z[65];
  z[169] = -(-state_[10]*z[0]*z[2]*z[3] + state_[11]*z[0]*z[5]*z[6] - state_[8]*z[0]*z[37] - z[134]*z[3]*z[5]/z[63])/(2*z[70]);
  z[170] = z[167];
  z[171] = -rear_.R*state_[9]*z[11]*z[2] - rear_.R*state_[9]*z[2]*z[7]/z[11] - rear_.R*z[1]*z[13]*z[4]*z[5]/z[11] - rear_.R*z[1]*z[36]/z[11] - rear_.R*z[31]*z[7]/z[11] - rear_.a*state_[9]*z[4] - rear_.b*z[0]*z[1]*z[13] - z[2]*z[4]*z[65] - z[28]*z[30];
  z[172] = -rear_.R*state_[9]*z[2]*z[4]/z[11] - rear_.R*state_[9]*z[2]*z[7]/(z[11]*z[4]) - rear_.R*z[1]*z[13]*z[5]/z[11] - rear_.R*z[1]*z[27]/z[11] + rear_.R*z[31]*z[4]/z[11] + rear_.R*z[31]*z[7]/(z[11]*z[4]) + rear_.b*state_[8]*z[4] + z[19]*z[31] - z[2]*z[65];
  z[173] = front_.Ixx*z[3]*z[72] + front_.Ixz*z[51] - front_.Iyy*z[3]*z[72] - front_.Iyy*z[6]*z[78] - front_.Izz*z[28] + front_.J*state_[13]*z[3] - z[106]*z[6];
  z[174] = -rear_.R*state_[9]*z[2]*z[4]/z[11] - rear_.R*state_[9]*z[2]*z[7]/(z[11]*z[4]) - rear_.R*z[1]*z[13]*z[5]/z[11] - rear_.R*z[1]*z[27]/z[11] + rear_.R*z[31]*z[4]/z[11] + rear_.R*z[31]*z[7]/(z[11]*z[4]) + rear_.b*state_[8]*z[4] + z[19]*z[31] - z[2]*z[65];
  z[175] = rear_.R*state_[9]*z[4]*z[5]/z[11] + rear_.R*state_[9]*z[5]*z[7]/(z[11]*z[4]) - rear_.R*z[1]*z[13]*z[2]/z[11] - rear_.R*z[1]*z[26]/z[11] - rear_.R*z[28]*z[4]/z[11] - rear_.R*z[28]*z[7]/(z[11]*z[4]) - rear_.a*state_[8]*z[4] - z[19]*z[28] + z[5]*z[65];
  z[176] = z[175];
  z[177] = z[132]*z[32]/z[62] - z[4]*z[5]*z[72] + z[92];
  z[178] = front_.Ixx*z[79] + front_.Ixz*z[27] + front_.Iyy*z[2]*z[72] - front_.Iyy*z[3]*z[46]*z[5] - front_.J*state_[13]*z[2] - z[107]*z[3]*z[5] - z[23]*z[72];
  z[179] = front_.Iyy*z[84] + z[106]*z[2] - z[107]*z[5]*z[6] - z[22]*z[46] + z[23]*z[78];
  z[180] = front_.Ixz*z[79] + front_.Iyy*z[3]*z[5]*z[78] - front_.Iyy*z[5]*z[6]*z[72] + front_.J*state_[13]*z[5]*z[6] + z[106]*z[3]*z[5] + z[22]*z[72];
  z[181] = -z[1]*z[129]*z[5] + z[125]*z[41] - z[37]*z[56];
  z[182] = -z[1]*z[129]*z[5] + z[125]*z[41] - z[37]*z[56];
  z[183] = -front_.r*(-state_[10]*z[1] - state_[11]*z[4]*z[5] + state_[13]*z[39]) + z[162];
  z[184] = -(-state_[8]*z[0]*z[3]*z[5] + z[103] + z[134]*z[37]/z[63])/(2*z[70]);
  z[185] = front_.Izz*z[27] + z[180];
  z[186] = z[109]*z[5]*z[6] - z[116]*z[2] + z[139]*z[3]*z[5];
  z[187] = z[1]*z[116]*z[5] - z[109]*z[41] + z[139]*z[37];
  z[188] = -front_.r*state_[8]*z[4] + front_.r*z[21] - state_[17]*z[2]*z[3]/z[70] + state_[17]*z[3]*z[5]*z[87]/z[71] - state_[18]*z[1]*z[3]*z[5]/z[70] - state_[18]*z[37]*z[87]/z[71];
  z[189] = -front_.r*state_[8]*z[4] + front_.r*z[21] - state_[17]*z[2]*z[3]/z[70] + state_[17]*z[3]*z[5]*z[87]/z[71] - state_[18]*z[1]*z[3]*z[5]/z[70] - state_[18]*z[37]*z[87]/z[71];
  z[190] = front_.Ixx*z[94] + front_.Ixz*z[40] - front_.Iyy*z[39]*z[46] + front_.Iyy*z[4]*z[5]*z[72] - front_.J*state_[13]*z[4]*z[5] - z[107]*z[39] - z[53]*z[72];
  z[191] = front_.r*(-state_[11]*z[1]*z[2] + state_[13]*z[1]*z[3]*z[5] + state_[9]*z[1]) - state_[17]*z[1]*z[3]*z[5]/z[70] - state_[17]*z[37]*z[87]/z[71] + state_[18]*z[2]*z[3]/z[70] - state_[18]*z[3]*z[5]*z[87]/z[71];
  z[192] = z[191];
  z[193] = front_.Iyy*z[100] + z[106]*z[4]*z[5] - z[107]*z[32] - z[46]*z[52] + z[53]*z[78];
  z[194] = front_.R*z[132]*z[32]/z[69] + z[151];
  z[195] = -front_.R*z[132]*z[4]*z[5]/z[69] + z[154];
  z[196] = front_.R*z[133]*z[32]/z[69] + z[151];
  z[197] = front_.r*state_[8]*z[1]*z[5] + front_.r*(state_[10]*z[5] - state_[13]*z[5]*z[6]) + state_[17]*z[3]*z[5]*z[96]/z[71] + state_[17]*z[5]*z[6]/z[70] - state_[18]*z[37]*z[96]/z[71] + state_[18]*z[41]/z[70];
  z[198] = -front_.R*z[133]*z[4]*z[5]/z[69] + z[154];
  z[199] = front_.Ixz*z[94] - front_.Iyy*z[32]*z[72] + front_.Iyy*z[39]*z[78] + front_.Izz*z[40] + front_.J*state_[13]*z[32] + z[106]*z[39] + z[52]*z[72];
  z[200] = -state_[17]*z[37]*z[96]/z[71] - state_[18]*z[3]*z[5]*z[96]/z[71] - z[145];
  z[201] = -2*front_.R*z[32]*z[78]/z[68] - front_.R*z[39]*z[85]/z[68] - front_.a*z[61] + front_.a*z[78];
  z[202] = state_[17]*z[37]*z[98]/z[71] + state_[18]*z[3]*z[5]*z[98]/z[71] - z[145];
  z[203] = front_.R*z[0]*z[32]*z[46]/z[68] + front_.R*z[32]*z[39]*z[4]*z[5]*z[85]/z[69] - front_.a*z[0]*z[46] - front_.b*z[61] - front_.b*z[78];
  z[204] = front_.R*z[0]*z[32]*z[46]/z[68] + front_.R*z[32]*z[39]*z[4]*z[5]*z[85]/z[69] - front_.a*z[0]*z[46] - front_.b*z[61] - front_.b*z[78];
  z[205] = -front_.R*z[39]*z[43]*z[85]/z[69] - z[201];
  z[206] = z[205];
  z[207] = front_.R*z[43]*z[85]*(-z[0]*z[1]*z[6] - z[0]*z[2]*z[3]*z[4])/(2*z[69]) - z[201];
  z[208] = -front_.R*z[132]*z[32]/z[69] - front_.R*z[32]*z[39]*z[4]*z[5]*z[78]/z[69] + front_.R*z[39]*z[43]*z[46]/z[69] - front_.R*z[39]*z[46]/z[68] - front_.R*z[4]*z[5]*z[72]/z[68] + front_.R*z[4]*z[5]*z[85]/z[68] - front_.R*z[92]/z[68] - front_.b*z[59] - front_.b*z[72];
  z[209] = front_.R*state_[10]*z[2]*z[32]*z[4]/z[68] + front_.R*state_[9]*z[1]*z[32]*z[5]/z[68] - front_.R*z[10]*z[85]*z[9]/z[68] + front_.R*z[32]*z[39]*z[78]/z[68] + front_.R*z[32]*z[40]/z[68] + front_.R*z[39]*z[4]*z[46]*z[5]/z[68] - front_.R*z[43]*z[85]/z[68] + front_.a*z[32]*z[72] - front_.a*z[39]*z[78] - front_.a*z[40] - front_.b*z[39]*z[46] + front_.b*z[4]*z[5]*z[72] + front_.b*z[94];
  z[210] = -z[209];
  z[211] = -z[209];
  z[212] = front_.R*state_[10]*z[2]*z[4]*z[6]/z[68] + front_.R*state_[9]*z[1]*z[5]*z[6]/z[68] - front_.R*z[132]*z[4]*z[5]*z[6]/z[69] - front_.R*z[2]*z[4]*z[85]/z[68] + front_.R*z[3]*z[4]*z[46]*z[5]/z[68] - front_.R*z[32]*z[6]*z[72]/z[68] - front_.R*z[32]*z[6]*z[85]/z[68] - front_.R*z[4]*z[48]*z[5]/z[68] + front_.R*z[4]*z[5]*z[82]*z[85]/z[69] - front_.a*z[0]*z[6]*z[72] - front_.b*z[3]*z[46] + front_.b*z[48];
  z[213] = front_.R*state_[10]*z[2]*z[3]*z[4]/z[68] + front_.R*state_[9]*z[1]*z[3]*z[5]/z[68] - front_.R*z[2]*z[4]*z[78]/z[68] - front_.R*z[28]*z[32]/z[68] - front_.R*z[3]*z[32]*z[85]/z[68] - front_.R*z[32]*z[46]*z[82]/z[69] - front_.R*z[32]*z[6]*z[78]/z[68] - front_.R*z[4]*z[5]*z[51]/z[68] + front_.R*z[4]*z[5]*z[78]*z[82]/z[69] + front_.a*z[28] + front_.a*z[3]*z[72] + front_.a*z[6]*z[78] + front_.b*z[46]*z[6] + front_.b*z[51];
  z[214] = front_.R*z[132]*z[32]*z[6]/z[69] - front_.R*z[3]*z[4]*z[5]*z[78]/z[68] + front_.R*z[32]*z[48]/z[68] - front_.R*z[32]*z[82]*z[85]/z[69] - front_.R*z[4]*z[5]*z[6]*z[72]/z[68] + front_.R*z[6]*z[92]/z[68] - front_.a*z[48] - front_.b*z[0]*z[6]*z[72] + front_.b*z[3]*z[78] + z[108]*z[3] - z[146]*z[3];
  z[215] = -front_.R*state_[10]*z[2]*z[39]*z[4]/z[68] - front_.R*state_[9]*z[1]*z[39]*z[5]/z[68] + front_.R*z[132]*z[39]*z[4]*z[5]/z[69] + front_.R*z[32]*z[39]*z[72]/z[68] + front_.R*z[32]*z[39]*z[85]/z[68] - front_.R*z[4]*z[5]*z[95]/z[68] + front_.a*z[0]*z[39]*z[72] + front_.b*z[100] - z[108]*z[4]*z[5] + z[146]*z[4]*z[5] + z[46]*z[56];
  z[216] = -front_.R*z[132]*z[32]*z[39]/z[69] + front_.R*z[32]*z[95]/z[68] + front_.R*z[39]*z[4]*z[5]*z[72]/z[68] + front_.R*z[39]*z[4]*z[5]*z[85]/z[68] - front_.R*z[39]*z[92]/z[68] - front_.a*z[100] + front_.b*z[0]*z[39]*z[72] + z[108]*z[32] - z[146]*z[32] - z[56]*z[78];
  z[217] = front_.R*z[132]*z[3]*z[4]*z[5]/z[69] - z[213];
  z[218] = front_.R*z[133]*z[3]*z[4]*z[5]/z[69] - z[213];
  z[219] = front_.R*z[135]*z[3]*z[4]*z[5]/(2*z[69]) - z[213];
  z[220] = -front_.R*state_[10]*z[2]*z[3]*z[4]*z[5]/z[68] - front_.R*state_[9]*z[1]*z[10]*z[3]/z[68] - front_.R*z[1]*z[5]*z[85]/z[68] + front_.R*z[10]*z[132]*z[3]*z[4]/z[69] + front_.R*z[3]*z[32]*z[5]*z[72]/z[68] + front_.R*z[3]*z[32]*z[5]*z[85]/z[68] - front_.R*z[4]*z[5]*z[85]*z[93]/z[69] - front_.R*z[4]*z[5]*z[84]/z[68] + front_.a*z[0]*z[3]*z[5]*z[72] + front_.b*z[84] - z[108]*z[2] - z[136]*z[46] + z[146]*z[2] + z[25]*z[46];
  z[221] = -front_.R*state_[10]*z[2]*z[3]*z[4]*z[5]/z[68] - front_.R*state_[9]*z[1]*z[10]*z[3]/z[68] - front_.R*z[1]*z[5]*z[85]/z[68] + front_.R*z[10]*z[135]*z[3]*z[4]/(2*z[69]) + front_.R*z[3]*z[32]*z[5]*z[72]/z[68] + front_.R*z[3]*z[32]*z[5]*z[85]/z[68] - front_.R*z[4]*z[5]*z[85]*z[97]/(2*z[69]) - front_.R*z[4]*z[5]*z[84]/z[68] + front_.a*z[0]*z[3]*z[5]*z[72] + front_.b*z[84] - z[108]*z[2] - z[136]*z[46] + z[146]*z[2] + z[25]*z[46];
  z[222] = front_.R*z[10]*z[3]*z[4]*z[72]/z[68] + front_.R*z[10]*z[3]*z[4]*z[85]/z[68] - front_.R*z[132]*z[3]*z[32]*z[5]/z[69] - front_.R*z[3]*z[5]*z[92]/z[68] + front_.R*z[32]*z[85]*z[93]/z[69] + front_.R*z[32]*z[84]/z[68] + front_.R*z[41]*z[85]/z[68] - front_.a*z[84] + front_.b*z[0]*z[3]*z[5]*z[72] + z[108]*z[5]*z[6] + z[136]*z[78] - z[146]*z[5]*z[6] - z[25]*z[78];
  z[223] = front_.R*z[10]*z[3]*z[4]*z[72]/z[68] + front_.R*z[10]*z[3]*z[4]*z[85]/z[68] - front_.R*z[135]*z[3]*z[32]*z[5]/(2*z[69]) - front_.R*z[3]*z[5]*z[92]/z[68] + front_.R*z[32]*z[85]*z[97]/(2*z[69]) + front_.R*z[32]*z[84]/z[68] + front_.R*z[41]*z[85]/z[68] - front_.a*z[84] + front_.b*z[0]*z[3]*z[5]*z[72] + z[108]*z[5]*z[6] + z[136]*z[78] - z[146]*z[5]*z[6] - z[25]*z[78];
  z[224] = -front_.R*state_[10]*z[2]*z[4]*z[5]*z[6]/z[68] - front_.R*state_[9]*z[1]*z[10]*z[6]/z[68] + front_.R*z[1]*z[5]*z[78]/z[68] + front_.R*z[10]*z[132]*z[4]*z[6]/z[69] - front_.R*z[10]*z[3]*z[4]*z[46]/z[68] - front_.R*z[132]*z[2]*z[32]/z[69] + front_.R*z[2]*z[4]*z[5]*z[85]/z[68] - front_.R*z[2]*z[92]/z[68] - front_.R*z[27]*z[32]/z[68] - front_.R*z[3]*z[32]*z[5]*z[78]/z[68] - front_.R*z[32]*z[46]*z[93]/z[69] + front_.R*z[32]*z[5]*z[6]*z[85]/z[68] + front_.R*z[4]*z[5]*z[78]*z[93]/z[69] + front_.R*z[4]*z[5]*z[79]/z[68] - front_.R*z[41]*z[46]/z[68] + front_.a*z[27] + front_.a*z[3]*z[5]*z[78] - front_.a*z[5]*z[6]*z[72] - front_.b*z[2]*z[72] + front_.b*z[3]*z[46]*z[5] - front_.b*z[79];
  z[225] = -front_.Iyy;
  z[226] = -front_.a;
  z[227] = -rear_.a;
  z[228] = -front_.b;
  z[229] = -rear_.b;
  z[230] = -front_.m;
  z[231] = -rear_.m;
  z[232] = -front_.r;
  z[233] = -state_[11];
  z[234] = -state_[13];
  z[235] = -state_[18];
  z[236] = -state_[8];
  z[237] = -state_[9];
  z[238] = z[231]*z[236];
  z[239] = -z[1]*z[227];
  z[240] = -z[1]*z[229];
  z[241] = -z[1]*z[232];
  z[242] = -z[2]*z[232];
  z[243] = -z[232]*z[3];
  z[244] = -z[232]*z[4];
  z[245] = state_[10]*z[2];
  z[246] = -z[233]*z[5];
  z[247] = state_[17]*z[3];
  z[248] = -z[236]*z[4];
  z[249] = -z[1]*z[237];
  z[250] = -z[2];
  z[251] = z[0]*z[250];
  z[252] = -z[3];
  z[253] = -z[4];
  z[254] = -z[5];
  z[255] = -z[6];
  z[256] = -z[1]*z[250];
  z[257] = -z[1]*z[254];
  z[258] = z[250]*z[253];
  z[259] = z[252]*z[254];
  z[260] = z[253]*z[254];
  z[261] = z[254]*z[255];
  z[262] = -z[7];
  z[263] = z[0]/z[253];
  z[264] = -z[9];
  z[265] = -z[10];
  z[266] = rear_.R/z[11];
  z[267] = -z[231]/z[11];
  z[268] = z[13]*z[253];
  z[269] = -z[253]/z[11];
  z[270] = -z[18]*z[231];
  z[271] = -rear_.J*z[31];
  z[272] = -z[18]*z[253];
  z[273] = rear_.J*z[28];
  z[274] = z[232]*z[41];
  z[275] = -z[232]*z[37];
  z[276] = z[39]*z[46];
  z[277] = -z[32]*z[46];
  z[278] = -front_.J*z[78];
  z[279] = z[228]*z[72];
  z[280] = front_.R/z[69];
  z[281] = front_.R/z[68];
  z[282] = -1/z[70];
  z[283] = z[254]*z[282];
  z[284] = pow(front_.R, -z[0])/z[62];
  z[285] = -z[254]*(z[1]*z[32] - z[4]*z[41]);
  z[286] = -z[32]*z[72];
  z[287] = z[37]/z[63];
  z[288] = -z[282]*z[37];
  z[289] = z[44]/z[63];
  z[290] = z[113]*z[37];
  z[291] = z[281]*z[92];
  z[292] = (-z[0]*z[10]*z[3]*z[6] + z[37]*z[42])/(2*z[71]);
  z[293] = z[112]*z[64];
  z[294] = z[132]/z[62];
  z[295] = -z[157]*z[282];

  ar[0] = -z[1]*(z[130] - z[28]*z[34] + z[31]*z[33]) + z[149]*z[258] - z[150]*z[260] - z[190]*z[32] + z[193]*z[39] - z[199]*z[260] + z[230]*(-z[125]*z[215] + z[129]*z[216] + z[138]*z[167] + z[143]*z[182] + z[211]*z[56]) + z[231]*(z[112]*z[60] + z[126]*z[86] + z[155]*z[30] - z[168]*z[47] + z[171]*z[50]);
  ar[1] = -z[1]*z[144] - z[123]*z[260] + z[124]*z[258] - z[178]*z[32] + z[179]*z[39] - z[185]*z[260] + z[230]*(-z[125]*z[220] + z[129]*z[222] + z[160]*z[182] + z[167]*z[183] + z[224]*z[56]) + z[231]*(z[112]*z[120] + z[126]*z[249]*z[263]*z[266] + z[141]*z[30] - z[174]*z[47] + z[175]*z[50]);
  ar[2] = z[117]*z[258] - z[121]*z[260] + z[147]*z[39] - z[152]*z[32] - z[173]*z[260] + z[230]*(-z[125]*z[212] + z[129]*z[214] + z[167]*z[191] + z[182]*z[189] + z[217]*z[56]) + z[231]*(-z[0]*z[13]*z[227]*z[47] + z[0]*z[13]*z[229]*z[50] - z[0]*z[30]*z[75] - z[126]*z[18]*z[248] + z[293]);
  ar[3] = -front_.Ixz*z[115]*z[260] - z[137]*z[32] + z[142]*z[39] + z[230]*(-z[125]*z[204] + z[129]*z[205] + z[167]*z[200] + z[182]*z[197] + z[208]*z[56]);
  ar[4] = z[231]*(-z[126]*z[18]*z[248] + z[293]) - z[258]*z[271] + z[260]*z[273];
  ar[5] = front_.J*z[277] + z[230]*(z[110]*z[167] - z[125]*z[195] + z[129]*z[194] + z[148]*z[56] - z[182]*z[90]) - z[260]*z[278];
  ar[6] = -z[238]*z[269]*(-z[16]*z[264] - z[250]*z[262]*z[45] + z[254]*z[262]*z[38]);
  ar[7] = -z[1]*z[238]*z[269]*(-z[250]*z[38] - z[254]*z[45]);
  ar[8] = 0;
  ar[9] = z[230]*(z[169]*z[181] + z[170]*z[184]);
  ar[10] = z[230]*(z[170]*z[295] + z[181]*z[184]);
  ar[11] = 0;
  ar[12] = z[149]*z[254] + z[150]*z[250] - z[190]*z[261] + z[193]*z[259] + z[199]*z[250] + z[230]*(z[109]*z[215] - z[116]*z[216] + z[138]*z[186] - z[139]*z[211] + z[143]*z[187] - z[143]*z[232] - z[211]*z[275] + z[215]*z[274] + z[216]*z[241]*z[254]) + z[231]*(-z[111]*z[86] + z[155]*z[19] + z[155]*z[272] + z[168]*z[18]*z[256] - z[168]*z[256]*z[266] - z[171]*z[18]*z[257] + z[171]*z[257]*z[266] + z[18]*z[86]);
  ar[13] = z[123]*z[250] + z[124]*z[254] - z[178]*z[261] + z[179]*z[259] + z[185]*z[250] + z[230]*(z[109]*z[220] - z[116]*z[222] - z[139]*z[224] + z[160]*z[187] - z[160]*z[232] + z[183]*z[186] + z[220]*z[274] + z[222]*z[241]*z[254] - z[224]*z[275]) + z[231]*(-z[111]*z[249]*z[263]*z[266] + z[141]*z[19] + z[141]*z[272] + z[174]*z[18]*z[256] - z[174]*z[256]*z[266] - z[175]*z[18]*z[257] + z[175]*z[257]*z[266] + z[18]*z[249]*z[263]*z[266]);
  ar[14] = z[117]*z[254] + z[121]*z[250] + z[147]*z[259] - z[152]*z[261] + z[173]*z[250] + z[230]*(z[109]*z[212] - z[116]*z[214] - z[139]*z[217] + z[186]*z[191] + z[187]*z[189] - z[189]*z[232] + z[212]*z[274] + z[214]*z[241]*z[254] - z[217]*z[275]) + z[231]*(-z[0]*z[13]*z[18]*z[240]*z[254] + z[0]*z[13]*z[240]*z[254]*z[266] - z[0]*z[19]*z[75] - z[0]*z[272]*z[75] + z[111]*z[18]*z[248] + z[13]*z[18]*z[239]*z[251] - z[13]*z[239]*z[251]*z[266] - pow(z[18], -z[0])*z[248]);
  ar[15] = -front_.Ixz*z[115]*z[2] - z[137]*z[261] + z[142]*z[259] + z[230]*(z[109]*z[204] - z[116]*z[205] - z[139]*z[208] + z[186]*z[200] + z[187]*z[197] - z[197]*z[232] + z[204]*z[274] + z[205]*z[241]*z[254] - z[208]*z[275]);
  ar[16] = -z[118]*z[18]*z[231]*z[248] - z[250]*z[273] - z[254]*z[271];
  ar[17] = -front_.J*z[261]*z[46] + z[230]*(z[109]*z[195] + z[110]*z[186] - z[116]*z[194] - z[139]*z[148] - z[148]*z[275] - z[187]*z[90] + z[194]*z[241]*z[254] + z[195]*z[274] + z[232]*z[90]) + z[250]*z[278];
  ar[18] = -z[118]*z[238]*z[269];
  ar[19] = 0;
  ar[20] = 0;
  ar[21] = z[230]*(z[169]*z[187] - z[169]*z[232] + z[184]*z[186]);
  ar[22] = z[230]*(z[184]*z[187] - z[184]*z[232] + z[186]*z[295]);
  ar[23] = 0;
  ar[24] = -z[130] + z[190]*z[252] + z[193]*z[255] + z[230]*(z[101]*z[211] - z[102]*z[215] + z[114]*z[216] + z[138]*z[158] - z[138]*z[244] + z[143]*z[164] + z[211]*z[243]*z[260] - z[215]*z[244]*z[261] + z[216]*z[242]*z[253]) + z[231]*(-z[168]*z[18]*z[260] - z[168]*z[229] - z[171]*z[18]*z[258] + z[171]*z[227] - z[19]*z[60] - z[272]*z[60] + z[29]*z[86]) - z[253]*z[28]*(rear_.Ixz*z[2] + rear_.Izz*z[254]) + z[253]*z[31]*(rear_.Ixx*z[2] - rear_.Ixz*z[5]);
  ar[25] = -z[144] + z[178]*z[252] + z[179]*z[255] + z[230]*(z[101]*z[224] - z[102]*z[220] + z[114]*z[222] + z[158]*z[183] + z[160]*z[164] - z[183]*z[244] - z[220]*z[244]*z[261] + z[222]*z[242]*z[253] + z[224]*z[243]*z[260]) + z[231]*(-z[120]*z[19] - z[120]*z[272] - z[174]*z[18]*z[260] - z[174]*z[229] - z[175]*z[18]*z[258] + z[175]*z[227] + z[249]*z[263]*z[266]*z[29]);
  ar[26] = z[147]*z[255] + z[152]*z[252] + z[230]*(z[101]*z[217] - z[102]*z[212] + z[114]*z[214] + z[158]*z[191] + z[164]*z[189] - z[191]*z[244] - z[212]*z[244]*z[261] + z[214]*z[242]*z[253] + z[217]*z[243]*z[260]) + z[231]*(z[0]*z[13]*z[18]*z[227]*z[254]*z[4] + z[0]*z[18]*z[2]*z[229]*z[268] - z[18]*z[248]*z[29] - z[19]*z[64] - z[272]*z[64]);
  ar[27] = z[137]*z[252] + z[142]*z[255] + z[230]*(z[101]*z[208] - z[102]*z[204] + z[114]*z[205] + z[158]*z[200] + z[164]*z[197] - z[200]*z[244] - z[204]*z[244]*z[261] + z[205]*z[242]*z[253] + z[208]*z[243]*z[260]);
  ar[28] = -z[1]*z[231]*(-rear_.r*z[18]*z[237]*z[4] - rear_.r*z[19]*z[237] + z[16]*z[18]*z[248]);
  ar[29] = front_.J*z[252]*z[46] + z[230]*(z[101]*z[148] - z[102]*z[198] + z[110]*z[158] - z[110]*z[244] + z[114]*z[196] + z[148]*z[243]*z[260] - z[164]*z[90] + z[196]*z[242]*z[253] - z[198]*z[244]*z[261]);
  ar[30] = -z[1]*z[16]*z[238]*z[269];
  ar[31] = -z[238]*z[269]*(z[19] + z[272]);
  ar[32] = 0;
  ar[33] = z[230]*(z[159]*z[184] + z[163]*z[169] - z[184]*z[244]);
  ar[34] = z[230]*(z[159]*z[295] + z[163]*z[184] - z[244]*z[295]);
  ar[35] = 0;
  ar[36] = -z[199] + z[230]*(z[113]*z[138]*z[259] - z[113]*z[211] - z[138]*z[241]*z[254] + z[143]*z[242] + z[143]*z[290] + z[211]*z[81] + z[215]*z[67]);
  ar[37] = front_.Izz*z[254]*(state_[10] + z[1]*z[236]) - z[180] + z[230]*(z[113]*z[183]*z[259] - z[113]*z[224] + z[160]*z[242] + z[160]*z[290] - z[183]*z[241]*z[254] + z[220]*z[67] + z[224]*z[81]);
  ar[38] = front_.Ixx*z[252]*z[72] - front_.Ixz*z[255]*(z[233] - z[31]) + front_.Izz*z[28] - front_.J*z[234]*z[252] - z[106]*z[255] + z[225]*z[252]*z[72] + z[225]*z[255]*z[78] + z[230]*(z[113]*z[192]*z[259] - z[113]*z[218] + z[188]*z[242] + z[188]*z[290] - z[192]*z[241]*z[254] + z[212]*z[67] + z[218]*z[80]);
  ar[39] = -front_.Ixz*z[59] - front_.Ixz*z[72] + z[230]*(z[113]*z[200]*z[259] - z[113]*z[208] + z[197]*z[242] + z[197]*z[290] - z[200]*z[241]*z[254] + z[204]*z[67] + z[208]*z[81]);
  ar[40] = 0;
  ar[41] = z[230]*(z[110]*z[113]*z[259] - z[110]*z[241]*z[254] - z[113]*z[148] + z[148]*z[81] + z[195]*z[67] - z[242]*z[90] - z[290]*z[90]) - z[278];
  ar[42] = 0;
  ar[43] = 0;
  ar[44] = 0;
  ar[45] = z[230]*(z[113]*z[184]*z[259] + z[169]*z[242] + z[169]*z[290] - z[184]*z[241]*z[254]);
  ar[46] = z[230]*(z[113]*z[259]*z[295] + z[157]*z[241]*z[283] + z[184]*z[242] + z[184]*z[290]);
  ar[47] = 0;
  ar[48] = z[253]*(-rear_.J*z[237] + z[270]*(z[168]*z[254] + z[171]*z[250] - z[60]));
  ar[49] = z[253]*(-rear_.J*z[236] + z[270]*(-z[120] + z[174]*z[254] + z[175]*z[250]));
  ar[50] = z[253]*z[270]*(-z[12] + z[54]);
  ar[51] = 0;
  ar[52] = -z[12]*z[231]*z[272];
  ar[53] = 0;
  ar[54] = 0;
  ar[55] = -z[11]*z[18]*z[238];
  ar[56] = 0;
  ar[57] = 0;
  ar[58] = 0;
  ar[59] = 0;
  ar[60] = -front_.J*z[100] + z[230]*(z[136]*z[138] + z[138]*z[275] + z[140]*z[143] + z[143]*z[243]*z[254] - z[215]*z[260]*z[281] + z[215]*z[99] + z[216]*z[281]*z[32] - z[216]*z[81]);
  ar[61] = -front_.J*z[84] + z[230]*(z[136]*z[183] + z[140]*z[160] + z[160]*z[243]*z[254] + z[183]*z[275] - z[220]*z[260]*z[281] + z[220]*z[99] + z[222]*z[281]*z[32] - z[222]*z[81]);
  ar[62] = front_.J*z[252]*(z[233] - z[31]) + z[230]*(z[136]*z[191] + z[140]*z[189] + z[189]*z[243]*z[254] + z[191]*z[275] - z[212]*z[260]*z[281] + z[212]*z[99] + z[214]*z[281]*z[32] - z[214]*z[81]);
  ar[63] = front_.J*z[61] + z[230]*(z[136]*z[202] + z[140]*z[197] + z[197]*z[243]*z[254] + z[202]*z[275] - z[203]*z[260]*z[281] + z[203]*z[99] + z[207]*z[281]*z[32] - z[207]*z[80]);
  ar[64] = 0;
  ar[65] = z[230]*(-z[105]*z[232]*z[281]*z[66] + z[105]*z[37]*pow(-z[232], -z[0]) + z[177]*z[232]*z[281]*z[76] + z[177]*z[284]*z[32] - z[232]*z[281]*z[5]*z[89]*(-z[260]*z[294] + z[286] - z[40]) - z[243]*z[254]*z[88] - z[260]*z[284]*(-z[260]*z[294] + z[286] - z[40]) + z[281]*z[285]*z[88]);
  ar[66] = 0;
  ar[67] = 0;
  ar[68] = 0;
  ar[69] = z[230]*z[282]*(z[153]*z[243]*z[254] - z[153]*z[281]*z[285] - z[161]*z[275] - z[161]*z[281]*z[66]);
  ar[70] = z[230]*(z[184]*z[243]*z[254] - z[184]*z[281]*z[285] + z[275]*z[295] + z[281]*z[295]*z[66]);
  ar[71] = 0;
  ar[72] = z[253]*z[267]*(-z[165]*z[254] - z[166]*z[250] + z[60]);
  ar[73] = z[253]*z[267]*(z[120] - z[172]*z[254] - z[176]*z[250]);
  ar[74] = -z[231]*z[269]*(-rear_.r*z[249] + z[54]);
  ar[75] = 0;
  ar[76] = z[12]*z[253]*z[267];
  ar[77] = 0;
  ar[78] = 0;
  ar[79] = z[238];
  ar[80] = 0;
  ar[81] = 0;
  ar[82] = 0;
  ar[83] = 0;
  ar[84] = z[253]*z[267]*(-z[156]*z[253] + z[165]*z[256] - z[166]*z[257] + z[86]);
  ar[85] = z[231]*(rear_.R*z[0]*z[249]/z[264] + z[11]*z[141] + z[172]*z[256]*z[269] - z[176]*z[257]*z[269]);
  ar[86] = -z[231]*z[269]*(z[0]*z[13]*z[240]*z[254] - z[0]*z[253]*z[75] - z[13]*z[239]*z[251] + z[18]*z[248]);
  ar[87] = 0;
  ar[88] = z[11]*z[18]*z[238];
  ar[89] = 0;
  ar[90] = -z[238];
  ar[91] = 0;
  ar[92] = 0;
  ar[93] = 0;
  ar[94] = 0;
  ar[95] = 0;
  ar[96] = z[231]*(z[1]*z[156] - z[165]*z[258] + z[166]*z[260]);
  ar[97] = z[231]*(z[1]*z[141] - z[172]*z[258] + z[176]*z[260]);
  ar[98] = z[231]*(-z[0]*z[1]*z[75] - z[0]*z[13]*z[229]*z[254]*z[4] + z[0]*z[2]*z[227]*z[268]);
  ar[99] = 0;
  ar[100] = 0;
  ar[101] = 0;
  ar[102] = 0;
  ar[103] = 0;
  ar[104] = 0;
  ar[105] = 0;
  ar[106] = 0;
  ar[107] = 0;
  ar[108] = z[230]*z[282]*(z[138]*z[37] - z[143]*z[259] - z[215]*z[254]*z[89] - z[216]*z[76]);
  ar[109] = z[230]*(z[119]*z[223] + z[127]*z[221] + z[259]*pow(z[282], 2)*z[39]*(z[235]*z[289] - z[235] - z[247]*z[254]*z[287]) - z[288]*(z[162] + z[232]*(-state_[10]*z[1] - z[234]*z[39] + z[246]*z[253])));
  ar[110] = z[230]*(z[119]*z[214] + z[127]*z[212] - z[188]*z[259]*z[282] - z[192]*z[288]);
  ar[111] = z[230]*(z[119]*z[206] + z[127]*z[203] - z[197]*z[259]*z[282] - z[288]*(state_[17]*z[292]*z[37] - z[145] - z[235]*z[259]*z[292]));
  ar[112] = 0;
  ar[113] = z[230]*z[282]*(z[105]*z[275] - z[177]*z[281]*z[76] - z[243]*z[254]*z[83] - z[254]*z[281]*z[89]*(-z[260]*z[294] + z[286] - z[40]));
  ar[114] = 0;
  ar[115] = 0;
  ar[116] = 0;
  ar[117] = -z[230]*z[282]*(z[169]*z[259] - z[184]*z[37]);
  ar[118] = -z[230]*(z[153]*z[37] - z[161]*z[259])/z[63];
  ar[119] = 0;
  ar[120] = z[230]*(z[128]*z[215] + z[138]*z[259]*z[282] - z[143]*z[288] + z[210]*z[70] + z[216]*z[283]*z[55]);
  ar[121] = z[230]*(z[183]*z[259]*z[282] - z[220]*z[282]*z[96] + z[222]*z[283]*z[55] + z[224]*z[70] + z[287]*z[39]*(-z[235]*z[289] + z[235] + z[247]*z[254]*z[287]));
  ar[122] = z[230]*(z[128]*z[212] - z[188]*z[288] + z[192]*z[259]*z[282] + z[214]*z[283]*z[55] + z[219]*z[70]);
  ar[123] = z[230]*(-z[197]*z[288] + z[200]*z[259]*z[282] - z[204]*z[282]*z[96] + z[205]*z[283]*z[55] + z[208]*z[70]);
  ar[124] = 0;
  ar[125] = z[230]*(-z[105]*z[243]*z[283] - z[122]*z[281]*z[70] + z[177]*z[281]*z[283]*z[55] - z[275]*z[282]*z[83] - z[281]*z[282]*z[96]*(-z[260]*z[294] + z[286] - z[40]));
  ar[126] = 0;
  ar[127] = 0;
  ar[128] = 0;
  ar[129] = -z[230]*(-z[153]*z[37] + z[161]*z[259])/z[63];
  ar[130] = -z[230]*(z[153]*z[259] + z[161]*z[37])/z[63];
  ar[131] = 0;
  ar[132] = z[230]*(-z[210]*z[39] + z[215]*z[32] + z[216]*z[260]);
  ar[133] = z[230]*(z[221]*z[32] + z[223]*z[260] - z[39]*(z[135]*z[250]*z[280]*z[32]/2 - z[135]*z[253]*z[255]*z[265]*z[280]/2 - z[226]*z[259]*z[78] + z[226]*z[261]*z[72] - z[226]*z[27] + z[228]*z[254]*z[3]*z[46] + z[228]*z[79] + z[245]*z[255]*z[260]*z[281] - z[249]*z[255]*z[265]*z[281] - z[250]*z[279] + z[250]*z[291] + z[252]*z[253]*z[265]*z[281]*z[46] - z[254]*z[258]*z[281]*z[85] + z[257]*z[281]*z[78] - z[259]*z[281]*z[32]*z[78] + z[260]*z[280]*z[78]*z[97]/2 + z[260]*z[281]*z[79] + z[261]*z[281]*z[32]*z[85] - z[27]*z[281]*z[32] + z[277]*z[280]*z[97]/2 - z[281]*z[41]*z[46]));
  ar[134] = z[230]*(z[212]*z[32] + z[214]*z[260] - z[219]*z[39]);
  ar[135] = z[230]*(z[203]*z[32] + z[206]*z[260] - z[39]*(-z[135]*z[280]*z[32]/2 + z[228]*z[59] - z[260]*z[280]*z[32]*z[39]*z[78] - z[260]*z[281]*z[72] + z[260]*z[281]*z[85] + z[276]*z[280]*z[43] - z[276]*z[281] + z[279] - z[291]));
  ar[136] = 0;
  ar[137] = z[230]*z[281]*(z[122]*z[39] + z[177]*z[260] + z[32]*(-z[260]*z[294] + z[286] - z[40]));
  ar[138] = 0;
  ar[139] = 0;
  ar[140] = 0;
  ar[141] = 0;
  ar[142] = 0;
  ar[143] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (12)
 *
 * @param[out] a C-array of with 12 elements
 */
//  void Bicycle::gaf(double ar[12]) const;
void Bicycle::gaf(double ar[12]) const
{
  double * z = new double[56];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = front_.Tz + steer_torque_;
  z[7] = pow(z[3], 2);
  z[8] = pow(z[4], 2);
  z[9] = front_.Tw - front_.Ty;
  z[10] = rear_.Tz - steer_torque_;
  z[11] = sqrt(z[7]);
  z[12] = rear_.a*z[4] + rear_.b*z[1];
  z[13] = rear_.R/z[11] + rear_.r;
  z[14] = rear_.a*z[1] - rear_.b*z[4];
  z[15] = z[0]*z[1]*z[5] + z[2]*z[3];
  z[16] = z[0]*z[2] - z[1]*z[3]*z[5];
  z[17] = -z[0]*z[1]*z[2] + z[3]*z[5];
  z[18] = -z[17];
  z[19] = -z[0]*z[5] - z[1]*z[2]*z[3];
  z[20] = front_.a*z[3]*z[4] - front_.b*z[16];
  z[21] = z[0]*z[2]*z[8] + z[1]*z[18];
  z[22] = -front_.r*z[21];
  z[23] = rear_.Fx*z[13]*z[3]*z[4] + rear_.Fz*z[1]*z[13]*z[3];
  z[24] = front_.R*z[3]*z[4]/sqrt(pow(z[16], 2) + z[7]*z[8]) - front_.b;
  z[25] = front_.R*z[16]/sqrt(pow(z[16], 2) + z[7]*z[8]) - front_.a;
  z[26] = front_.R*z[1]*z[16]/sqrt(pow(z[16], 2) + z[7]*z[8]) - front_.R*z[3]*z[5]*z[8]/sqrt(pow(z[16], 2) + z[7]*z[8]) - front_.a*z[1] + front_.b*z[4]*z[5];
  z[27] = -front_.Fy;
  z[28] = -front_.Fz;
  z[29] = -rear_.Ty;
  z[30] = -front_.a;
  z[31] = -front_.b;
  z[32] = -rear_.b;
  z[33] = front_.Fx*front_.r;
  z[34] = -front_.r*z[27];
  z[35] = -front_.r*z[28];
  z[36] = g_*front_.m;
  z[37] = g_*rear_.m;
  z[38] = rear_.Fx*z[1];
  z[39] = rear_.Fy*z[3];
  z[40] = -z[28]*z[4];
  z[41] = -z[0];
  z[42] = -z[2];
  z[43] = -z[3];
  z[44] = -z[4]*z[41];
  z[45] = -z[1]*z[43];
  z[46] = z[42]*z[43];
  z[47] = -z[4]*z[42];
  z[48] = -z[4]*z[43];
  z[49] = rear_.Fz/z[11];
  z[50] = rear_.R/z[11];
  z[51] = front_.R/sqrt(pow(z[16], 2) + z[7]*z[8]);
  z[52] = z[4]*(-z[15]*z[2] + z[18]*z[5]);
  z[53] = front_.Fx*z[24];
  z[54] = (front_.Gx*z[2]*z[4] - front_.Gy*z[18])/(pow(z[18], 2) + pow(z[42], 2)*z[8]);
  z[55] = -(front_.Gx*z[18] + front_.Gy*z[2]*z[4])/(sqrt(pow(z[18], 2) + pow(z[2], 2)*z[8])*sqrt(pow(z[18], 2) + pow(z[42], 2)*z[8]));

  ar[0] = rear_.Fx*z[41]*(z[32] + z[48]*z[50]) + rear_.Fz*z[41]*(rear_.a + z[45]*z[50]) - rear_.Tw*z[41] + front_.Tx*z[16] - rear_.Tx*z[45] + z[10]*z[48] + z[12]*z[39] + z[19]*z[25]*z[28] + z[19]*z[53] + z[19]*z[9] - z[20]*z[27] + z[36]*(-z[16]*(-z[19]*z[31] - z[19]*z[48]*z[51]) - z[19]*z[20] + z[48]*(-z[16]*z[19]*z[51] - z[19]*z[30])) + z[37]*(-z[41]*(-rear_.a*z[4]*z[43] + z[1]*z[32]*z[43]) + z[45]*(-z[32]*z[41] - z[43]*z[44]*z[50]) - z[48]*(-rear_.a*z[41] - z[41]*z[45]*z[50])) + z[41]*(rear_.Tw + z[29]) + z[48]*z[6];
  ar[1] = rear_.Fy*z[14] - rear_.Fz*z[13]*z[44] + rear_.R*z[44]*z[49] + front_.Tx*z[4]*z[5] + rear_.Tx*z[4] + z[1]*z[10] + z[1]*z[6] - z[13]*z[38]*z[41] + z[13]*z[39] + z[15]*z[33] - z[18]*z[34] + z[25]*z[40]*z[42] + z[26]*z[27] - z[35]*z[44] + z[36]*(z[16]*(z[31]*z[47] + z[46]*z[51]*z[8]) + z[19]*z[26] - z[48]*(z[16]*z[47]*z[51] + z[30]*z[47])) - z[37]*z[41]*(z[1]*z[45]*z[50] + z[14] - z[43]*z[50]*z[8]) + z[38]*z[41]*z[50] + z[47]*z[53] + z[47]*z[9];
  ar[2] = -rear_.Fx*z[32] - rear_.Fz*rear_.a - front_.Tx*z[42] + z[12]*z[37]*z[43] - z[23] + z[24]*z[27]*z[42] - z[25]*z[28]*z[5] - z[29] - z[33]*z[48]*z[5] + z[34]*z[4]*z[46] - z[35]*z[45] + z[36]*(-z[16]*(z[31]*z[5] + z[48]*z[5]*z[51]) - z[19]*(-z[31]*z[42] + z[4]*z[46]*z[51]) + z[48]*(z[16]*z[5]*z[51] + z[30]*z[5])) - z[5]*z[53] - z[5]*z[9];
  ar[3] = z[19]*z[25]*z[36] - z[22]*z[27] + z[25]*z[27] + z[33]*(z[1]*z[15] - z[41]*z[5]*z[8]) + z[6];
  ar[4] = rear_.Tw - z[23];
  ar[5] = -front_.Fx*z[48]*z[51] + front_.Tw - z[16]*z[28]*z[51] + z[22]*z[28] + z[33]*z[52];
  ar[6] = rear_.Fx*z[48]/z[11] + rear_.Gx + z[45]*z[49];
  ar[7] = rear_.Fy*z[11] + rear_.Gy + z[43]*z[44]*z[49] + z[38]*z[41]*z[43]/z[11];
  ar[8] = -rear_.Fy*z[41] + rear_.Fz*z[48] + rear_.Gz + z[37] + z[38]*z[43];
  ar[9] = -front_.Fx*z[52]/sqrt(pow(z[18], 2) + pow(z[42], 2)*z[8]) - z[18]*z[55] + z[21]*z[28]/sqrt(pow(z[18], 2) + pow(z[42], 2)*z[8]) + z[47]*z[54];
  ar[10] = -front_.Fx*(z[15]*z[18] - z[42]*z[5]*z[8])/sqrt(pow(z[18], 2) + pow(z[42], 2)*z[8]) - z[18]*z[54] - z[27]*sqrt(pow(z[18], 2) + pow(z[42], 2)*z[8]) + z[40]*(z[1]*z[42] - z[18]*z[41])/sqrt(pow(z[18], 2) + pow(z[42], 2)*z[8]) - z[47]*z[55];
  ar[11] = front_.Fx*z[16] + front_.Gz + z[19]*z[27] + z[36] - z[40]*z[43];

  delete [] z;
}

/** Computes the n-d array of shape (12, 3)
 *
 * @param[out] a C-array of with 36 elements
 */
//  void Bicycle::gaf_dq(double ar[36]) const;
void Bicycle::gaf_dq(double ar[36]) const
{
  double * z = new double[166];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = front_.Tz + steer_torque_;
  z[7] = pow(z[1], 2);
  z[8] = pow(z[2], 2);
  z[9] = pow(z[3], 2);
  z[10] = pow(z[4], 2);
  z[11] = pow(z[5], 2);
  z[12] = front_.Tw - front_.Ty;
  z[13] = rear_.Tz - steer_torque_;
  z[14] = sqrt(z[9]);
  z[15] = rear_.a*z[4] + rear_.b*z[1];
  z[16] = rear_.a*z[1] - rear_.b*z[4];
  z[17] = -rear_.R/z[14] - rear_.r;
  z[18] = -z[0]*z[2] + z[1]*z[3]*z[5];
  z[19] = -z[18];
  z[20] = -z[0]*z[1]*z[2] + z[3]*z[5];
  z[21] = -z[20];
  z[22] = -z[0]*z[5] - z[1]*z[2]*z[3];
  z[23] = 2*z[0]*z[5] + 2*z[1]*z[2]*z[3];
  z[24] = -z[0]*z[1]*z[5] - z[2]*z[3];
  z[25] = 2*z[0]*z[1]*z[5] + 2*z[2]*z[3];
  z[26] = rear_.R*z[0]*z[1]*z[3]/z[14] + rear_.a*z[0];
  z[27] = rear_.R*z[0]*z[3]*z[4]/z[14] - rear_.b*z[0];
  z[28] = front_.a*z[0]*z[4] - front_.b*z[24];
  z[29] = z[1]*z[3] + z[19]*z[5];
  z[30] = -z[0]*z[21] + z[1]*z[2];
  z[31] = front_.Gx*z[2]*z[4] - front_.Gy*z[21];
  z[32] = front_.a*z[3]*z[4] - front_.b*z[19];
  z[33] = -front_.Gx*z[21] - front_.Gy*z[2]*z[4];
  z[34] = -z[1]*z[22] + z[10]*z[2]*z[3];
  z[35] = -z[0]*z[10]*z[5] + z[1]*z[24];
  z[36] = z[2]*z[30]*z[4];
  z[37] = z[1]*z[4]*z[9] + z[19]*z[3]*z[4]*z[5];
  z[38] = -z[0]*z[2]*z[21]*z[4] + z[1]*z[4]*z[8];
  z[39] = z[19]*z[2] - z[22]*z[5];
  z[40] = z[10]*z[2]*z[5] - z[21]*z[24];
  z[41] = -z[0]*z[10]*z[3] - z[19]*z[24];
  z[42] = -2*z[0]*z[10]*z[3] + z[19]*z[25];
  z[43] = 2*z[10]*z[2]*z[5] + z[21]*z[25];
  z[44] = -z[0]*z[10]*z[3] + z[19]*z[25]/2;
  z[45] = front_.R*z[2]*z[3]*z[4]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.b*z[2];
  z[46] = front_.R*z[3]*z[4]*z[5]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.b*z[5];
  z[47] = front_.R*z[10]*z[2]*z[3]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.b*z[2]*z[4];
  z[48] = -front_.R*z[10]*z[3]*z[5]/sqrt(z[10]*z[9] + pow(z[19], 2)) + front_.b*z[4]*z[5];
  z[49] = pow(z[19], 2)/(z[10]*z[9] + pow(z[19], 2)) - 1;
  z[50] = front_.R*z[19]*z[5]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.a*z[5];
  z[51] = z[33]/sqrt(z[10]*z[8] + pow(z[21], 2));
  z[52] = front_.R*z[19]*z[2]*z[4]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.a*z[2]*z[4];
  z[53] = -front_.R*z[22]*z[3]*z[4]/sqrt(z[10]*z[9] + pow(z[19], 2)) + front_.b*z[22];
  z[54] = -z[1] + z[37]*z[4]/(z[10]*z[9] + pow(z[19], 2));
  z[55] = -front_.R*z[19]*z[22]/sqrt(z[10]*z[9] + pow(z[19], 2)) + front_.a*z[22];
  z[56] = z[19]*z[37]/(z[10]*z[9] + pow(z[19], 2)) - z[3]*z[4]*z[5];
  z[57] = z[19]*z[41]/(z[10]*z[9] + pow(z[19], 2)) + z[24];
  z[58] = front_.R*z[1]*z[19]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.a*z[1] + z[48];
  z[59] = front_.Gx*pow(z[21], 2)/(z[10]*z[8] + pow(z[21], 2)) - front_.Gx + front_.Gy*z[2]*z[21]*z[4]/(z[10]*z[8] + pow(z[21], 2));
  z[60] = front_.Fx*front_.r*z[0]*z[4]*z[5] - rear_.Fx*rear_.R*z[0]*z[4]/z[14] - rear_.Fx*z[0]*z[17]*z[4] - front_.Fy*front_.r*z[0]*z[2]*z[4] + front_.Fz*front_.r*z[0]*z[1] - rear_.Fz*rear_.R*z[0]*z[1]/z[14] - rear_.Fz*z[0]*z[1]*z[17] + g_*rear_.m*z[0]*z[15];
  z[61] = -front_.R*z[19]*z[2]*z[22]*z[3]*z[4]/pow(z[10]*z[9] + pow(z[19], 2), 3.0/2.0) - z[46];
  z[62] = -front_.R*z[0]*z[22]*z[4]/sqrt(z[10]*z[9] + pow(z[19], 2)) + front_.R*z[21]*z[3]*z[4]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.b*z[21];
  z[63] = front_.Gx*z[21]*z[40]/(z[10]*z[8] + pow(z[21], 2)) + front_.Gx*z[24] + front_.Gy*z[2]*z[4]*z[40]/(z[10]*z[8] + pow(z[21], 2)) - front_.Gy*z[4]*z[5];
  z[64] = front_.R*z[19]*z[2]*z[3]*z[4]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.R*z[19]*z[22]*z[37]/pow(z[10]*z[9] + pow(z[19], 2), 3.0/2.0) + front_.R*z[22]*z[3]*z[4]*z[5]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.a*z[2]*z[3]*z[4];
  z[65] = front_.R*z[1]*pow(z[19], 2)*z[22]/pow(z[10]*z[9] + pow(z[19], 2), 3.0/2.0) - front_.R*z[1]*z[22]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.R*z[10]*z[19]*z[22]*z[3]*z[5]/pow(z[10]*z[9] + pow(z[19], 2), 3.0/2.0) + z[47];
  z[66] = front_.R*z[1]*z[19]*z[37]/pow(z[10]*z[9] + pow(z[19], 2), 3.0/2.0) + front_.R*z[1]*z[3]*z[4]*z[5]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.R*z[10]*z[3]*z[37]*z[5]/pow(z[10]*z[9] + pow(z[19], 2), 3.0/2.0) + front_.R*z[19]*z[4]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.a*z[4] - front_.b*z[1]*z[5];
  z[67] = -front_.Fx;
  z[68] = -front_.Fy;
  z[69] = -front_.Fz;
  z[70] = -front_.Gx;
  z[71] = -front_.Gy;
  z[72] = -front_.a;
  z[73] = -front_.b;
  z[74] = -rear_.b;
  z[75] = -front_.r*z[67];
  z[76] = -front_.r*z[68];
  z[77] = -front_.r*z[69];
  z[78] = g_*front_.m;
  z[79] = g_*rear_.m;
  z[80] = -z[3]*z[67];
  z[81] = -z[4]*z[67];
  z[82] = rear_.Fx*z[1];
  z[83] = rear_.Fx*z[4];
  z[84] = rear_.Fy*z[3];
  z[85] = -z[5]*z[69];
  z[86] = rear_.Fz*z[1];
  z[87] = rear_.Fz*z[4];
  z[88] = front_.Tx*z[5];
  z[89] = -z[1]*z[72];
  z[90] = rear_.a*z[3];
  z[91] = -z[1]*z[73];
  z[92] = -z[5]*z[73];
  z[93] = -z[1]*z[74];
  z[94] = -z[0];
  z[95] = -2*z[94];
  z[96] = -z[1];
  z[97] = 2*z[2];
  z[98] = -z[3];
  z[99] = -z[4];
  z[100] = -z[5];
  z[101] = z[94]*z[96];
  z[102] = -z[2]*z[94];
  z[103] = z[94]*z[98];
  z[104] = z[94]*z[99];
  z[105] = -z[2]*z[96];
  z[106] = z[96]*z[98];
  z[107] = z[96]*z[99];
  z[108] = z[100]*z[96];
  z[109] = -z[2]*z[98];
  z[110] = -z[2]*z[99];
  z[111] = z[98]*z[99];
  z[112] = z[100]*z[98];
  z[113] = -z[100]*z[99];
  z[114] = -z[10];
  z[115] = -z[114]*z[2];
  z[116] = z[114]*z[98];
  z[117] = z[100]*z[114];
  z[118] = rear_.R/z[14];
  z[119] = -z[98]/z[14];
  z[120] = -z[114]*z[8];
  z[121] = -z[114]*z[9];
  z[122] = -z[109]*z[114];
  z[123] = rear_.Fy*z[15];
  z[124] = z[17]*z[98];
  z[125] = z[22]*z[68];
  z[126] = -z[21]*z[70];
  z[127] = z[22]*z[96];
  z[128] = z[100]*z[22];
  z[129] = -z[2]*z[24];
  z[130] = -z[19]*z[96];
  z[131] = z[19]*z[2];
  z[132] = -z[19]*z[99];
  z[133] = -z[100]*z[19];
  z[134] = -z[21]*z[94];
  z[135] = -z[21]*z[96];
  z[136] = -z[100]*z[21];
  z[137] = z[22]*z[24];
  z[138] = -z[19]*z[22];
  z[139] = -z[21]*z[22];
  z[140] = -z[21]*z[24];
  z[141] = z[19]*z[21];
  z[142] = -z[67]/sqrt(z[120] + pow(z[21], 2));
  z[143] = front_.R/pow(z[121] + pow(z[19], 2), 3.0/2.0);
  z[144] = front_.R/sqrt(z[121] + pow(z[19], 2));
  z[145] = z[139]*z[21];
  z[146] = 1/(2*sqrt(z[120] + pow(z[21], 2)));
  z[147] = -z[99]/sqrt(z[120] + pow(z[21], 2));
  z[148] = -z[37]*z[99];
  z[149] = z[21]/(z[120] + pow(z[21], 2));
  z[150] = z[149]*z[21];
  z[151] = z[78]*(front_.R*z[19]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.a);
  z[152] = z[31]/pow(z[120] + pow(z[21], 2), 2);
  z[153] = z[31]/(z[120] + pow(z[21], 2));
  z[154] = z[19]*z[41];
  z[155] = z[38]/(z[120] + pow(z[21], 2));
  z[156] = z[40]/pow(z[120] + pow(z[21], 2), 3.0/2.0);
  z[157] = z[40]/(z[120] + pow(z[21], 2));
  z[158] = z[41]/(z[121] + pow(z[19], 2));
  z[159] = z[42]/(z[121] + pow(z[19], 2));
  z[160] = z[43]/(z[120] + pow(z[21], 2));
  z[161] = z[51]/pow(z[120] + pow(z[21], 2), 3.0/2.0);
  z[162] = z[51]/sqrt(z[120] + pow(z[21], 2));
  z[163] = z[149]*z[162];
  z[164] = z[22]*(front_.Gx*z[2]*z[21]*z[4]/(z[10]*z[8] + pow(z[21], 2)) - front_.Gy*pow(z[21], 2)/(z[10]*z[8] + pow(z[21], 2)) + front_.Gy)/(sqrt(z[120] + pow(z[21], 2))*sqrt(z[10]*z[8] + pow(z[21], 2)));
  z[165] = -(front_.Gx*z[2]*z[4]*z[43]/(z[10]*z[8] + pow(z[21], 2)) - 2*front_.Gx*z[4]*z[5] - front_.Gy*z[21]*z[43]/(z[10]*z[8] + pow(z[21], 2)) - 2*front_.Gy*z[24])/(2*sqrt(z[120] + pow(z[21], 2))*sqrt(z[10]*z[8] + pow(z[21], 2)));

  ar[0] = rear_.Fx*z[98]*(z[111]*z[118] + z[74]) + rear_.Fz*z[98]*(rear_.a + z[106]*z[118]) - rear_.Tw*z[98] - front_.Tx*z[24] + rear_.Tx*z[101] - z[104]*z[13] - z[104]*z[6] + z[12]*z[21] + z[123]*z[94] + z[28]*z[68] - z[67]*(-z[111]*z[143]*z[22]*z[41] + z[62]) - z[69]*(z[137]*z[144] - z[138]*z[143]*z[42]/2 - z[141]*z[144] - z[21]*z[72]) + z[78]*(-z[104]*z[55] + z[111]*(z[137]*z[144] - z[138]*z[143]*z[44] - z[141]*z[144] - z[21]*z[72]) + z[19]*(-z[111]*z[143]*z[22]*z[44] + z[62]) - z[21]*z[32] + z[22]*z[28] + z[24]*z[53]) + z[79]*(-z[101]*z[27] + z[104]*z[26] + z[106]*(-rear_.R*z[14]*z[99] - z[74]*z[98]) - z[111]*(-rear_.R*z[14]*z[96] + z[90]) + z[94]*(-rear_.a*z[0]*z[99] - z[93]*z[94]) - z[98]*(-z[90]*z[99] - z[93]*z[98])) + z[98]*(rear_.Tw - rear_.Ty);
  ar[1] = -rear_.Tx*z[111] + z[103]*z[118]*z[82] - z[103]*z[118]*z[87] - z[106]*z[13] - z[106]*z[6] + z[109]*z[12]*z[99] - z[111]*z[88] - z[16]*z[84] - z[64]*z[69] - z[68]*z[98]*(z[89] + z[92]*z[99]) + z[78]*(-z[100]*z[111]*z[53] - z[106]*z[55] - z[109]*z[32]*z[99] + z[111]*z[64] - z[19]*(z[106]*z[144]*z[22] - z[111]*z[143]*z[22]*z[37] + z[111]*z[2]*z[73] + z[115]*z[144]*z[9]) + z[22]*(-z[111]*z[92] - z[89]*z[98])) + z[79]*(-rear_.R*z[114]*z[14]*z[94] + rear_.R*z[14]*z[7]*z[94] + z[106]*z[26] + z[111]*z[27] + z[94]*(-rear_.a*z[1]*z[98] + z[74]*z[98]*z[99])) - z[80]*(-z[127]*z[144] - z[143]*z[148]*z[22] + z[47]);
  ar[2] = -front_.Tx*z[22] + z[12]*z[19] + z[125]*z[73] - z[19]*z[67]*(z[111]*z[143]*pow(z[22], 2) + z[111]*z[144] + z[73]) - z[69]*(-pow(z[138], 2)*z[143] - z[144]*pow(z[19], 2) + z[144]*pow(z[22], 2) - z[19]*z[72]) + z[78]*(z[111]*(-z[138]*z[143]*z[19]*z[23] - 2*z[144]*pow(z[19], 2) + 2*z[144]*pow(z[22], 2) - 2*z[19]*z[72])/2 - z[19]*z[32] + z[19]*(z[111]*z[138]*z[143]*z[23] + 2*z[111]*z[144]*z[19] + 2*z[19]*z[73])/2 + pow(z[22], 2)*z[73] + z[22]*z[53]);
  ar[3] = -rear_.Fy*z[118]*z[94] - rear_.Fy*z[17]*z[94] - z[110]*z[144]*z[57]*z[69] - z[111]*z[77] - z[115]*z[144]*z[67]*(z[158]*z[98] + z[94]) + z[118]*z[82]*z[98] - z[118]*z[87]*z[98] + z[124]*z[82] - z[124]*z[87] - z[144]*z[68]*(z[112]*z[114]*z[158] + z[130]*z[158] + z[35]) - z[19]*z[75] + z[22]*z[76] + z[78]*(z[104]*z[52] + z[111]*(z[110]*z[143]*z[154] + z[110]*z[144]*z[24]) + z[19]*(z[102]*z[114]*z[144] - z[122]*z[143]*z[41]) + z[21]*z[58] - z[22]*(z[100]*z[114]*z[144]*z[94] + z[112]*z[114]*z[143]*z[41] + z[130]*z[143]*z[41] - z[144]*z[24]*z[96]) - z[24]*z[47]) - z[79]*z[98]*(z[116]*z[118] - z[118]*z[7]*z[98] + z[16]);
  ar[4] = rear_.Tx*z[96] - z[105]*z[12] + z[123] - z[13]*z[99] - z[2]*z[67]*(2*z[106]*z[144]*z[99] + z[116]*z[143]*z[37] + z[91]) + z[2]*z[69]*(z[112]*z[114]*z[144] - z[130]*z[144] + z[132]*z[143]*z[37] + z[89]) - z[6]*z[99] + z[60] + z[66]*z[68] + z[78]*(z[100]*z[111]*z[47] + z[106]*z[52] + z[109]*z[58]*z[99] - z[111]*(-z[105]*z[144]*z[19] - z[109]*z[117]*z[144] + z[110]*z[143]*z[19]*z[37] + z[2]*z[89]) + z[19]*(z[106]*z[144]*z[97]*z[99] + z[122]*z[143]*z[37] + z[2]*z[91]) + z[22]*z[66]) + z[88]*z[96];
  ar[5] = -front_.Tx*z[110] - z[113]*z[12] - z[21]*z[75] + z[24]*z[76] - z[61]*z[81] + z[65]*z[68] + z[69]*z[99]*(z[131]*z[138]*z[143] + z[144]*z[2]*z[22] - z[50]) + z[78]*(z[111]*(z[110]*z[138]*z[143]*z[19] + z[110]*z[144]*z[22] + z[113]*z[144]*z[19] + z[5]*z[72]*z[99]) + z[19]*z[58] - z[19]*(z[122]*z[138]*z[143] + z[48]) - z[22]*z[47] + z[22]*z[65]);
  ar[6] = -z[100]*z[144]*z[69]*(z[159]*z[19] - z[25])/2 - z[100]*z[144]*z[81]*(-z[158]*z[98] - z[94]) + z[110]*z[144]*z[68]*(-z[159]*z[98] + z[95])/2 + z[60] + z[78]*(-z[104]*z[50] + z[111]*(z[100]*z[144]*z[24] - z[133]*z[143]*z[44]) + z[19]*(-z[100]*z[104]*z[144] - z[100]*z[111]*z[143]*z[44]) - z[21]*z[45] - z[22]*(z[102]*z[144]*z[99] + z[109]*z[143]*z[44]*z[99]) + z[24]*z[46]);
  ar[7] = -z[100]*z[106]*z[75] + z[100]*z[144]*z[54]*z[80] + z[105]*z[76]*z[98] - z[109]*z[144]*z[54]*z[68] - z[111]*z[77] + z[124]*z[82] - z[124]*z[87] + z[144]*z[56]*z[85] - z[16]*z[79]*z[98] + z[78]*(-z[100]*z[111]*z[46] - z[106]*z[50] - z[109]*z[45]*z[99] + z[111]*(-z[11]*z[111]*z[144] + z[133]*z[143]*z[37]) - z[19]*(z[100]*z[106]*z[144] - z[100]*z[111]*z[143]*z[37]) - z[22]*(z[105]*z[144]*z[98] + z[109]*z[143]*z[148]));
  ar[8] = -z[100]*z[111]*z[76] - z[109]*z[75]*z[99] + z[12]*z[2] + z[61]*z[68] - z[67]*(z[111]*z[128]*z[143]*z[19] + z[45]) + z[69]*(z[128]*z[143]*pow(z[19], 2) - z[128]*z[144] + z[131]*z[144] + z[2]*z[72]) + z[78]*(-z[111]*(-2*z[100]*z[144]*z[22] + z[133]*z[143]*z[19]*z[23] + z[144]*z[19]*z[97] + z[72]*z[97])/2 - z[19]*z[45] + z[19]*(z[111]*z[133]*z[143]*z[23] + z[111]*z[144]*z[97] + z[73]*z[97])/2 + z[22]*z[46] + z[22]*(2*z[100]*z[111]*z[144] + z[109]*z[132]*z[143]*z[23] + 2*z[92])/2) + z[88];
  ar[9] = front_.r*z[34]*z[68] + front_.r*z[67]*(z[112]*z[114] + z[130]) - z[144]*z[22]*z[57]*z[78] - z[144]*z[57]*z[68] + z[151]*z[21];
  ar[10] = -z[100]*z[111]*z[76] + z[109]*z[151]*z[99] - z[109]*z[75]*z[99] + z[144]*z[22]*z[56]*z[78] + z[144]*z[56]*z[68];
  ar[11] = front_.r*z[67]*(-z[102]*z[114] + z[135]) + z[125]*z[144]*z[49] + z[144]*pow(z[22], 2)*z[49]*z[78] + z[151]*z[19] + z[35]*z[76];
  ar[12] = z[94]*(z[118]*z[83] + z[118]*z[86] + z[17]*z[83] + z[17]*z[86]);
  ar[13] = z[124]*(z[82] - z[87]);
  ar[14] = 0;
  ar[15] = z[143]*z[154]*z[69] - z[143]*z[41]*z[80]*z[99] + z[144]*z[24]*z[69] - z[144]*z[81]*z[94] + z[34]*z[77] - z[39]*z[75]*z[99];
  ar[16] = z[100]*z[111]*z[77] - z[111]*z[143]*z[19]*z[29]*z[69] - z[111]*z[144]*z[85] + z[121]*z[143]*z[29]*z[67] - z[144]*z[80]*z[96] - z[75]*z[96]*(z[129] - z[136]);
  ar[17] = -z[132]*z[143]*z[22]*z[80] + z[138]*z[143]*z[19]*z[69] + z[144]*z[22]*z[69] - z[35]*z[77];
  ar[18] = 0;
  ar[19] = z[119]*(-z[82] + z[87]);
  ar[20] = 0;
  ar[21] = z[119]*(rear_.Fy*z[94] - z[82]*z[98] + z[87]*z[98]);
  ar[22] = z[103]*(z[83] + z[86])/z[14];
  ar[23] = 0;
  ar[24] = -z[82]*z[94] + z[84] + z[87]*z[94];
  ar[25] = -z[98]*(-z[83] - z[86]);
  ar[26] = 0;
  ar[27] = -z[110]*z[139]*z[152] + z[110]*z[164] - z[139]*z[59]/(z[120] + pow(z[21], 2)) + z[145]*z[161] + z[147]*z[67]*(-z[128]*z[150] + z[129]*z[139]/(z[120] + pow(z[21], 2)) + z[39]) + z[162]*z[22] + z[69]*(z[102]*z[114]*z[139]/(z[120] + pow(z[21], 2)) - z[127]*z[150] + z[34])/sqrt(z[120] + pow(z[21], 2));
  ar[28] = -z[102]*z[147]*z[51] - z[105]*z[153] + z[110]*z[152]*z[36] - z[110]*(z[102]*z[71]*z[99] - z[105]*z[70] - z[149]*z[38]*z[71] - z[2]*z[38]*z[70]*z[99]/(z[120] + pow(z[21], 2)))/(z[120] + pow(z[21], 2)) - z[163]*z[36] + z[21]*(z[102]*z[70]*z[99] + z[105]*z[71] - z[110]*z[155]*z[71] + z[126]*z[155])/(z[120] + pow(z[21], 2)) + z[67]*(-z[105]*z[24] - z[108]*z[21] + z[110]*z[155]*z[24] - z[113]*z[149]*z[38])/sqrt(z[120] + pow(z[21], 2)) + z[69]*(-z[101]*z[110] - z[102]*z[114]*z[155] + z[135]*z[155] - z[21]*z[99])/sqrt(z[120] + pow(z[21], 2));
  ar[29] = -z[110]*z[152]*z[40] + z[110]*z[165] - z[113]*z[153] - z[149]*z[63] + z[156]*z[81]*(-z[129] + z[136]) + z[162]*z[24] + z[163]*z[40] - z[69]*(-z[102]*z[114]*z[157] + z[135]*z[157] + z[35])/sqrt(z[120] + pow(z[21], 2));
  ar[30] = z[110]*z[139]*z[161] + z[110]*z[22]*z[59]/(z[120] + pow(z[21], 2)) + z[139]*z[68]*(z[120]/(z[120] + pow(z[21], 2)) + z[150] - 2)/sqrt(z[120] + pow(z[21], 2)) + z[142]*(z[115]*z[128]*z[149] + z[137]*z[150] - z[137] + z[141]) + z[145]*z[152] - z[147]*z[69]*(z[105]*z[139]/(z[120] + pow(z[21], 2)) - z[134]*z[139]/(z[120] + pow(z[21], 2)) - z[21]*z[98] + z[22]*z[94]) + z[153]*z[22] - z[164]*z[21];
  ar[31] = -z[102]*z[147]*z[31]/sqrt(z[120] + pow(z[21], 2)) + z[105]*z[33]/(z[120] + pow(z[21], 2)) - z[110]*z[149]*z[153]*z[30] - z[110]*(-z[102]*z[70]*z[99] - z[105]*z[71] + z[110]*z[155]*z[71] - z[126]*z[155])/(z[120] + pow(z[21], 2)) - z[120]*z[30]*z[33]/pow(z[120] + pow(z[21], 2), 2) + z[142]*(-z[100]*z[107]*z[97] + z[100]*z[115]*z[155] - z[102]*z[24]*z[99] - z[104]*z[136] - z[140]*z[155]) - z[149]*(-z[102]*z[71]*z[99] + z[105]*z[70] - z[110]*z[155]*z[70] + z[149]*z[38]*z[71]) - z[68]*(-2*z[107]*z[8] + z[110]*z[21]*z[95] + z[120]*z[155] + z[150]*z[38])/sqrt(z[120] + pow(z[21], 2)) - z[69]*(-z[101]*z[21] + z[102]*z[114]*z[94] + z[104]*z[149]*z[38] - z[105]*z[147]*z[38]/sqrt(z[120] + pow(z[21], 2)) - z[115] + z[2]*z[7])/sqrt(z[120] + pow(z[21], 2));
  ar[32] = z[110]*z[156]*z[51] - z[110]*z[63]/(z[120] + pow(z[21], 2)) + z[113]*z[162] + z[142]*(-z[100]*z[115]*z[157] + z[11]*z[114] + z[120] + z[140]*z[157] + pow(z[21], 2) - pow(z[24], 2)) + z[146]*z[68]*(-2*z[117]*z[97] + z[120]*z[160] - 4*z[140] + z[150]*z[43]) - z[146]*z[69]*z[99]*(-z[105]*z[160] + 2*z[108] + z[134]*z[160] + z[24]*z[95]) + z[149]*z[153]*z[40] + z[153]*z[24] - z[165]*z[21];
  ar[33] = z[104]*z[69] + z[21]*z[68] + z[24]*z[67];
  ar[34] = -z[98]*(z[100]*z[81] - z[110]*z[68] - z[69]*z[96]);
  ar[35] = z[19]*z[68] + z[22]*z[67];

  delete [] z;
}

/** Computes the n-d array of shape (12, 22)
 *
 * @param[out] a C-array of with 264 elements
 */
//  void Bicycle::gaf_dr(double ar[264]) const;
void Bicycle::gaf_dr(double ar[264]) const
{
  double * z = new double[45];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = pow(z[3], 2);
  z[7] = pow(z[4], 2);
  z[8] = sqrt(z[6]);
  z[9] = rear_.R/z[8] + rear_.r;
  z[10] = rear_.a*z[1] - rear_.b*z[4];
  z[11] = z[0]*z[5] + z[1]*z[2]*z[3];
  z[12] = z[0]*z[1]*z[5] + z[2]*z[3];
  z[13] = z[0]*z[2] - z[1]*z[3]*z[5];
  z[14] = z[0]*z[1]*z[2] - z[3]*z[5];
  z[15] = front_.a*z[3]*z[4] - front_.b*z[13];
  z[16] = sqrt(pow(z[14], 2) + pow(z[2], 2)*z[7]);
  z[17] = front_.r*z[0]*z[2]*z[7] + front_.r*z[1]*z[14];
  z[18] = -front_.R*z[3]*z[4]/sqrt(pow(z[13], 2) + z[6]*z[7]) + front_.b;
  z[19] = front_.R*z[2]*z[3]*z[7]/sqrt(pow(z[13], 2) + z[6]*z[7]) - front_.b*z[2]*z[4];
  z[20] = front_.R*z[13]/sqrt(pow(z[13], 2) + z[6]*z[7]) - front_.a;
  z[21] = front_.R*z[13]*z[5]/sqrt(pow(z[13], 2) + z[6]*z[7]) - front_.a*z[5];
  z[22] = front_.R*z[1]*z[13]/sqrt(pow(z[13], 2) + z[6]*z[7]) - front_.R*z[3]*z[5]*z[7]/sqrt(pow(z[13], 2) + z[6]*z[7]) - front_.a*z[1] + front_.b*z[4]*z[5];
  z[23] = -front_.a;
  z[24] = -front_.b;
  z[25] = -rear_.b;
  z[26] = -front_.r;
  z[27] = rear_.r*z[0];
  z[28] = -z[1];
  z[29] = -z[2];
  z[30] = -z[5];
  z[31] = -z[29]*z[4];
  z[32] = z[3]*z[4];
  z[33] = z[28]*z[3];
  z[34] = rear_.R/z[8];
  z[35] = z[0]/z[8];
  z[36] = z[3]*(rear_.a*z[4] + rear_.b*z[1]);
  z[37] = -z[12]*z[26];
  z[38] = -z[14]*z[26];
  z[39] = -z[32]*z[9];
  z[40] = front_.R/sqrt(pow(z[13], 2) + z[6]*z[7]);
  z[41] = z[4]/z[16];
  z[42] = -z[32]*z[40];
  z[43] = z[13]*z[40];
  z[44] = z[11]*z[20];

  ar[0] = 0;
  ar[1] = z[33];
  ar[2] = z[0];
  ar[3] = z[32];
  ar[4] = 0;
  ar[5] = 0;
  ar[6] = 0;
  ar[7] = z[0]*(-z[25] - z[32]*z[34]);
  ar[8] = z[36];
  ar[9] = z[0]*(-rear_.a + z[33]*z[34]);
  ar[10] = -z[11];
  ar[11] = z[13];
  ar[12] = z[11];
  ar[13] = z[32];
  ar[14] = 0;
  ar[15] = 0;
  ar[16] = 0;
  ar[17] = z[11]*z[18];
  ar[18] = z[15];
  ar[19] = z[44];
  ar[20] = 0;
  ar[21] = front_.m*(z[11]*z[15] - z[13]*(z[11]*z[24] - z[11]*z[42]) + z[32]*(z[11]*z[23] + z[11]*z[43])) + rear_.m*(z[0]*(rear_.a*z[3]*z[4] - z[1]*z[25]*z[3]) - z[32]*(rear_.a*z[0] - z[0]*z[33]*z[34]) - z[33]*(z[0]*z[25] + z[0]*z[32]*z[34]));
  ar[22] = 0;
  ar[23] = z[4];
  ar[24] = 0;
  ar[25] = z[1];
  ar[26] = 0;
  ar[27] = 0;
  ar[28] = 0;
  ar[29] = -z[27]*z[28];
  ar[30] = z[10] + z[3]*z[9];
  ar[31] = -z[27]*z[4];
  ar[32] = z[31];
  ar[33] = -z[30]*z[4];
  ar[34] = -z[31];
  ar[35] = z[1];
  ar[36] = 0;
  ar[37] = 0;
  ar[38] = 0;
  ar[39] = z[19] + z[37];
  ar[40] = -z[22] - z[38];
  ar[41] = z[4]*(z[0]*z[26] + z[23]*z[29] + z[29]*z[43]);
  ar[42] = 0;
  ar[43] = front_.m*(-z[11]*z[22] + z[13]*z[19] - z[32]*(z[23]*z[31] + z[31]*z[43])) + rear_.m*z[0]*(z[10] + z[28]*z[33]*z[34] + z[3]*z[34]*z[7]);
  ar[44] = 0;
  ar[45] = 0;
  ar[46] = 1;
  ar[47] = 0;
  ar[48] = 0;
  ar[49] = 0;
  ar[50] = 0;
  ar[51] = rear_.b + z[39];
  ar[52] = 0;
  ar[53] = -rear_.a + z[33]*z[9];
  ar[54] = z[30];
  ar[55] = z[2];
  ar[56] = z[5];
  ar[57] = 0;
  ar[58] = 0;
  ar[59] = 0;
  ar[60] = 0;
  ar[61] = -z[30]*(z[18] + z[26]*z[32]);
  ar[62] = -z[29]*(-z[18] - z[26]*z[32]);
  ar[63] = z[21] - z[26]*z[33];
  ar[64] = 0;
  ar[65] = front_.m*(z[11]*(-z[24]*z[29] - z[29]*z[3]*z[4]*z[40]) - z[13]*(-z[24]*z[30] + z[30]*z[42]) + z[21]*z[32]) - rear_.m*z[36];
  ar[66] = 0;
  ar[67] = 0;
  ar[68] = 0;
  ar[69] = 0;
  ar[70] = 0;
  ar[71] = 0;
  ar[72] = 0;
  ar[73] = 0;
  ar[74] = 0;
  ar[75] = 0;
  ar[76] = 0;
  ar[77] = 0;
  ar[78] = 0;
  ar[79] = 1;
  ar[80] = 0;
  ar[81] = 0;
  ar[82] = 0;
  ar[83] = -z[26]*(-z[0]*z[30]*z[7] - z[12]*z[28]);
  ar[84] = -z[17] - z[20];
  ar[85] = 0;
  ar[86] = 1;
  ar[87] = -front_.m*z[44];
  ar[88] = 1;
  ar[89] = 0;
  ar[90] = 0;
  ar[91] = 0;
  ar[92] = 0;
  ar[93] = 0;
  ar[94] = 0;
  ar[95] = z[39];
  ar[96] = 0;
  ar[97] = z[33]*z[9];
  ar[98] = 0;
  ar[99] = 0;
  ar[100] = 0;
  ar[101] = 0;
  ar[102] = 0;
  ar[103] = 0;
  ar[104] = 0;
  ar[105] = 0;
  ar[106] = 0;
  ar[107] = 0;
  ar[108] = 0;
  ar[109] = 0;
  ar[110] = 0;
  ar[111] = 0;
  ar[112] = 0;
  ar[113] = 0;
  ar[114] = 0;
  ar[115] = 0;
  ar[116] = 0;
  ar[117] = 0;
  ar[118] = 0;
  ar[119] = 0;
  ar[120] = 1;
  ar[121] = 0;
  ar[122] = 0;
  ar[123] = 0;
  ar[124] = 0;
  ar[125] = 0;
  ar[126] = 0;
  ar[127] = -z[4]*(-z[29]*z[37] + z[3]*z[40] + z[30]*z[38]);
  ar[128] = 0;
  ar[129] = z[17] + z[43];
  ar[130] = 0;
  ar[131] = 0;
  ar[132] = 0;
  ar[133] = 0;
  ar[134] = 0;
  ar[135] = 0;
  ar[136] = 1;
  ar[137] = 0;
  ar[138] = 0;
  ar[139] = z[32]/z[8];
  ar[140] = 0;
  ar[141] = -z[33]/z[8];
  ar[142] = 0;
  ar[143] = 0;
  ar[144] = 0;
  ar[145] = 0;
  ar[146] = 0;
  ar[147] = 0;
  ar[148] = 0;
  ar[149] = 0;
  ar[150] = 0;
  ar[151] = 0;
  ar[152] = 0;
  ar[153] = 0;
  ar[154] = 0;
  ar[155] = 0;
  ar[156] = 0;
  ar[157] = 0;
  ar[158] = 0;
  ar[159] = 1;
  ar[160] = 0;
  ar[161] = -z[33]*z[35];
  ar[162] = z[8];
  ar[163] = -z[32]*z[35];
  ar[164] = 0;
  ar[165] = 0;
  ar[166] = 0;
  ar[167] = 0;
  ar[168] = 0;
  ar[169] = 0;
  ar[170] = 0;
  ar[171] = 0;
  ar[172] = 0;
  ar[173] = 0;
  ar[174] = 0;
  ar[175] = 0;
  ar[176] = 0;
  ar[177] = 0;
  ar[178] = 0;
  ar[179] = 0;
  ar[180] = 0;
  ar[181] = 0;
  ar[182] = 1;
  ar[183] = z[33];
  ar[184] = z[0];
  ar[185] = z[32];
  ar[186] = 0;
  ar[187] = 0;
  ar[188] = 0;
  ar[189] = 0;
  ar[190] = 0;
  ar[191] = 0;
  ar[192] = 0;
  ar[193] = 0;
  ar[194] = 0;
  ar[195] = 0;
  ar[196] = 0;
  ar[197] = rear_.m;
  ar[198] = 0;
  ar[199] = 0;
  ar[200] = 0;
  ar[201] = 0;
  ar[202] = 0;
  ar[203] = 0;
  ar[204] = 0;
  ar[205] = 0;
  ar[206] = 0;
  ar[207] = 0;
  ar[208] = 0;
  ar[209] = 0;
  ar[210] = 0;
  ar[211] = 0;
  ar[212] = 1;
  ar[213] = 0;
  ar[214] = 0;
  ar[215] = -z[41]*(z[12]*z[29] - z[14]*z[30]);
  ar[216] = 0;
  ar[217] = -(-z[0]*z[29]*z[7] - z[14]*z[28])/z[16];
  ar[218] = 0;
  ar[219] = 0;
  ar[220] = 0;
  ar[221] = 0;
  ar[222] = 0;
  ar[223] = 0;
  ar[224] = 0;
  ar[225] = 0;
  ar[226] = 0;
  ar[227] = 0;
  ar[228] = 0;
  ar[229] = 0;
  ar[230] = 0;
  ar[231] = 0;
  ar[232] = 0;
  ar[233] = 0;
  ar[234] = 0;
  ar[235] = 1;
  ar[236] = 0;
  ar[237] = -(z[12]*z[14] + z[29]*z[30]*z[7])/z[16];
  ar[238] = z[16];
  ar[239] = z[41]*(z[0]*z[14] - z[28]*z[29]);
  ar[240] = 0;
  ar[241] = 0;
  ar[242] = 0;
  ar[243] = 0;
  ar[244] = 0;
  ar[245] = 0;
  ar[246] = 0;
  ar[247] = 0;
  ar[248] = 0;
  ar[249] = 0;
  ar[250] = 0;
  ar[251] = 0;
  ar[252] = 0;
  ar[253] = 0;
  ar[254] = 0;
  ar[255] = 0;
  ar[256] = 0;
  ar[257] = 0;
  ar[258] = 1;
  ar[259] = z[13];
  ar[260] = z[11];
  ar[261] = z[32];
  ar[262] = 0;
  ar[263] = front_.m;

  delete [] z;
}

}
