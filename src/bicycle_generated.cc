#include <cmath>
#include "bicycle.h"

namespace bicycle {

using ::std::sin;
using ::std::cos;
using ::std::sqrt;
using ::std::pow;

/** Computes the n-d array of shape (16)
 *
 * @param[out] a C-array of with 16 elements
 */
//  void Bicycle::gc_r_ogl(double m[16]) const;
void Bicycle::gc_r_ogl(double m[16]) const
{
  double * z = new double[15];

  z[0] = sin(azimuth);
  z[1] = sin(elevation);
  z[2] = sin(twist);
  z[3] = cos(azimuth);
  z[4] = cos(elevation);
  z[5] = cos(state_[1]);
  z[6] = cos(twist);
  z[7] = cam_x + cam_z;
  z[8] = z[0]*z[2] + z[1]*z[3]*z[6];
  z[9] = z[0]*z[1]*z[2] + z[3]*z[6];
  z[10] = z[0]*z[6] - z[1]*z[2]*z[3];
  z[11] = z[0]*z[1]*z[6] - z[2]*z[3];
  z[12] = -z[3];
  z[13] = z[5]/sqrt(pow(z[5], 2));
  z[14] = z[13]*z[4];

  m[0] = z[10]*z[13];
  m[1] = z[13]*z[8];
  m[2] = z[12]*z[14];
  m[3] = 0;
  m[4] = z[13]*z[9];
  m[5] = -z[11]*z[13];
  m[6] = z[0]*z[14];
  m[7] = 0;
  m[8] = z[2]*z[4];
  m[9] = -z[4]*z[6];
  m[10] = -z[1];
  m[11] = 0;
  m[12] = -cam_y*z[9] - z[10]*z[7];
  m[13] = cam_y*z[11] - z[7]*z[8];
  m[14] = -z[4]*(cam_y*z[0] + z[12]*z[7]);
  m[15] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (16)
 *
 * @param[out] a C-array of with 16 elements
 */
//  void Bicycle::wc_r_ogl(double m[16]) const;
void Bicycle::wc_r_ogl(double m[16]) const
{
  double * z = new double[33];

  z[0] = sin(azimuth);
  z[1] = sin(elevation);
  z[2] = sin(state_[1]);
  z[3] = sin(state_[2]);
  z[4] = sin(twist);
  z[5] = cos(azimuth);
  z[6] = cos(elevation);
  z[7] = cos(state_[1]);
  z[8] = cos(state_[2]);
  z[9] = cos(state_[4]);
  z[10] = cos(twist);
  z[11] = cam_x + cam_z;
  z[12] = sqrt(pow(z[7], 2));
  z[13] = rear_.R/z[12] + rear_.r;
  z[14] = z[0]*z[4] + z[1]*z[10]*z[5];
  z[15] = z[0]*z[1]*z[4] + z[10]*z[5];
  z[16] = z[0]*z[2]*z[6] + z[1]*z[7];
  z[17] = z[0]*z[10] - z[1]*z[4]*z[5];
  z[18] = z[0]*z[1]*z[10] - z[4]*z[5];
  z[19] = z[0]*z[6]*z[7] - z[1]*z[2];
  z[20] = z[15]*z[7] + z[2]*z[4]*z[6];
  z[21] = z[16]*z[8] + z[3]*z[5]*z[6];
  z[22] = z[15]*z[2] - z[4]*z[6]*z[7];
  z[23] = -z[16]*z[3] + z[5]*z[6]*z[8];
  z[24] = -z[10]*z[2]*z[6] - z[18]*z[7];
  z[25] = z[14]*z[8] + z[3]*(z[10]*z[6]*z[7] - z[18]*z[2]);
  z[26] = z[14]*z[3] - z[8]*(z[10]*z[6]*z[7] - z[18]*z[2]);
  z[27] = -z[3];
  z[28] = -sin(state_[4]);
  z[29] = rear_.R/z[12];
  z[30] = z[13]*z[6];
  z[31] = z[17]*z[8];
  z[32] = z[22]*z[8];

  m[0] = z[28]*(-z[17]*z[27] - z[32]) - z[9]*(z[22]*z[27] - z[31]);
  m[1] = z[25]*z[9] + z[26]*z[28];
  m[2] = -z[21]*z[28] - z[23]*z[9];
  m[3] = 0;
  m[4] = z[20];
  m[5] = z[24];
  m[6] = z[19];
  m[7] = 0;
  m[8] = z[28]*(z[22]*z[27] - z[31]) + z[9]*(-z[17]*z[27] - z[32]);
  m[9] = -z[25]*z[28] + z[26]*z[9];
  m[10] = -z[21]*z[9] + z[23]*z[28];
  m[11] = 0;
  m[12] = -cam_y*z[15] - z[11]*z[17] + z[2]*z[20]*z[29] - z[30]*z[4];
  m[13] = cam_y*z[18] + z[10]*z[30] - z[11]*z[14] + z[2]*z[24]*z[29];
  m[14] = -cam_y*z[0]*z[6] + z[1]*z[13] + z[11]*z[5]*z[6] + z[19]*z[2]*z[29];
  m[15] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (16)
 *
 * @param[out] a C-array of with 16 elements
 */
//  void Bicycle::mc_r_ogl(double m[16]) const;
void Bicycle::mc_r_ogl(double m[16]) const
{
  double * z = new double[32];

  z[0] = sin(azimuth);
  z[1] = sin(elevation);
  z[2] = sin(state_[1]);
  z[3] = sin(state_[2]);
  z[4] = sin(twist);
  z[5] = cos(azimuth);
  z[6] = cos(elevation);
  z[7] = cos(state_[1]);
  z[8] = cos(state_[2]);
  z[9] = cos(twist);
  z[10] = cam_x + cam_z;
  z[11] = sqrt(pow(z[7], 2));
  z[12] = rear_.R/z[11] + rear_.r;
  z[13] = z[0]*z[1]*z[4] + z[5]*z[9];
  z[14] = z[0]*z[2]*z[6] + z[1]*z[7];
  z[15] = z[0]*z[9] - z[1]*z[4]*z[5];
  z[16] = z[0]*z[1]*z[9] - z[4]*z[5];
  z[17] = z[0]*z[6]*z[7] - z[1]*z[2];
  z[18] = -z[0]*z[4] - z[1]*z[5]*z[9];
  z[19] = z[13]*z[7] + z[2]*z[4]*z[6];
  z[20] = z[14]*z[8] + z[3]*z[5]*z[6];
  z[21] = z[13]*z[2] - z[4]*z[6]*z[7];
  z[22] = z[14]*z[3] - z[5]*z[6]*z[8];
  z[23] = -z[16]*z[7] - z[2]*z[6]*z[9];
  z[24] = z[15]*z[8] + z[21]*z[3];
  z[25] = -z[18]*z[8] + z[3]*(-z[16]*z[2] + z[6]*z[7]*z[9]);
  z[26] = z[15]*z[3] - z[21]*z[8];
  z[27] = -z[18]*z[3] - z[8]*(-z[16]*z[2] + z[6]*z[7]*z[9]);
  z[28] = -rear_.a;
  z[29] = -cam_y;
  z[30] = rear_.R/z[11];
  z[31] = z[12]*z[6];

  m[0] = z[24];
  m[1] = z[25];
  m[2] = z[22];
  m[3] = 0;
  m[4] = z[19];
  m[5] = z[23];
  m[6] = z[17];
  m[7] = 0;
  m[8] = z[26];
  m[9] = z[27];
  m[10] = -z[20];
  m[11] = 0;
  m[12] = rear_.b*z[26] - z[10]*z[15] + z[13]*z[29] + z[19]*z[2]*z[30] - z[24]*z[28] - z[31]*z[4];
  m[13] = rear_.b*z[27] + z[10]*z[18] - z[16]*z[29] + z[2]*z[23]*z[30] - z[25]*z[28] + z[31]*z[9];
  m[14] = -rear_.b*z[20] + z[0]*z[29]*z[6] + z[1]*z[12] + z[10]*z[5]*z[6] + z[17]*z[2]*z[30] - z[22]*z[28];
  m[15] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (16)
 *
 * @param[out] a C-array of with 16 elements
 */
//  void Bicycle::gc_f_ogl(double m[16]) const;
void Bicycle::gc_f_ogl(double m[16]) const
{
  double * z = new double[46];

  z[0] = sin(azimuth);
  z[1] = sin(elevation);
  z[2] = sin(state_[1]);
  z[3] = sin(state_[2]);
  z[4] = sin(state_[3]);
  z[5] = sin(twist);
  z[6] = cos(azimuth);
  z[7] = cos(elevation);
  z[8] = cos(state_[1]);
  z[9] = cos(state_[2]);
  z[10] = cos(state_[3]);
  z[11] = cos(twist);
  z[12] = pow(z[8], 2);
  z[13] = pow(z[9], 2);
  z[14] = sqrt(z[12]);
  z[15] = -cam_x - cam_z;
  z[16] = z[0]*z[5] + z[1]*z[11]*z[6];
  z[17] = z[0]*z[2]*z[7] + z[1]*z[8];
  z[18] = rear_.R/z[14] - front_.r + rear_.r;
  z[19] = z[0]*z[11] - z[1]*z[5]*z[6];
  z[20] = -z[10]*z[3]*z[8] + z[2]*z[4];
  z[21] = z[0]*z[1]*z[11] - z[5]*z[6];
  z[22] = z[0]*z[7]*z[8] - z[1]*z[2];
  z[23] = -z[10]*z[8] + z[2]*z[3]*z[4];
  z[24] = -z[0]*z[1]*z[5] - z[11]*z[6];
  z[25] = z[2]*z[5]*z[7] - z[24]*z[8];
  z[26] = z[17]*z[9] + z[3]*z[6]*z[7];
  z[27] = -z[2]*z[24] - z[5]*z[7]*z[8];
  z[28] = -z[17]*z[3] + z[6]*z[7]*z[9];
  z[29] = -z[11]*z[2]*z[7] - z[21]*z[8];
  z[30] = sqrt(z[12]*z[13] + pow(z[20], 2));
  z[31] = sqrt(z[13]*pow(z[4], 2) + pow(z[23], 2));
  z[32] = z[16]*z[9] + z[3]*(z[11]*z[7]*z[8] - z[2]*z[21]);
  z[33] = -z[19]*z[9] - z[27]*z[3];
  z[34] = front_.R*z[20]/z[30] - front_.c;
  z[35] = z[19]*z[3] - z[27]*z[9];
  z[36] = z[16]*z[3] - z[9]*(z[11]*z[7]*z[8] - z[2]*z[21]);
  z[37] = -z[1];
  z[38] = -z[10];
  z[39] = z[4]*z[9];
  z[40] = z[5]*z[7];
  z[41] = z[11]*z[7];
  z[42] = z[8]*z[9];
  z[43] = rear_.R/z[14];
  z[44] = front_.R/z[30];
  z[45] = z[7]/z[31];

  m[0] = -(z[19]*z[23] + z[24]*z[39])/z[31];
  m[1] = -(z[16]*z[23] + z[21]*z[39])/z[31];
  m[2] = z[45]*(z[0]*z[39] + z[23]*z[6]);
  m[3] = 0;
  m[4] = -(z[19]*z[39] - z[23]*z[24])/z[31];
  m[5] = -(z[16]*z[39] - z[21]*z[23])/z[31];
  m[6] = -z[45]*(z[0]*z[23] - z[39]*z[6]);
  m[7] = 0;
  m[8] = z[40];
  m[9] = -z[41];
  m[10] = z[37];
  m[11] = 0;
  m[12] = -rear_.c*z[33] + cam_y*z[24] + ls_*z[35] + z[15]*z[19] - z[18]*z[40] + z[2]*z[25]*z[43] + z[34]*(z[25]*z[4] + z[33]*z[38]) + z[35]*z[42]*z[44];
  m[13] = rear_.c*z[32] + cam_y*z[21] + ls_*z[36] + z[15]*z[16] + z[18]*z[41] + z[2]*z[29]*z[43] + z[34]*(z[29]*z[4] - z[32]*z[38]) + z[36]*z[42]*z[44];
  m[14] = -rear_.c*z[28] - cam_y*z[0]*z[7] - ls_*z[26] - z[15]*z[6]*z[7] - z[18]*z[37] + z[2]*z[22]*z[43] - z[26]*z[42]*z[44] + z[34]*(z[22]*z[4] + z[28]*z[38]);
  m[15] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (16)
 *
 * @param[out] a C-array of with 16 elements
 */
//  void Bicycle::wc_f_ogl(double m[16]) const;
void Bicycle::wc_f_ogl(double m[16]) const
{
  double * z = new double[44];

  z[0] = sin(azimuth);
  z[1] = sin(elevation);
  z[2] = sin(state_[1]);
  z[3] = sin(state_[2]);
  z[4] = sin(state_[3]);
  z[5] = sin(twist);
  z[6] = cos(azimuth);
  z[7] = cos(elevation);
  z[8] = cos(state_[1]);
  z[9] = cos(state_[2]);
  z[10] = cos(state_[3]);
  z[11] = cos(state_[5]);
  z[12] = cos(twist);
  z[13] = sqrt(pow(z[8], 2));
  z[14] = -cam_x - cam_z;
  z[15] = rear_.R/z[13] + rear_.r;
  z[16] = z[0]*z[5] + z[1]*z[12]*z[6];
  z[17] = z[0]*z[1]*z[5] + z[12]*z[6];
  z[18] = z[0]*z[2]*z[7] + z[1]*z[8];
  z[19] = z[0]*z[12] - z[1]*z[5]*z[6];
  z[20] = z[0]*z[1]*z[12] - z[5]*z[6];
  z[21] = z[0]*z[7]*z[8] - z[1]*z[2];
  z[22] = z[17]*z[8] + z[2]*z[5]*z[7];
  z[23] = z[18]*z[9] + z[3]*z[6]*z[7];
  z[24] = z[17]*z[2] - z[5]*z[7]*z[8];
  z[25] = -z[18]*z[3] + z[6]*z[7]*z[9];
  z[26] = z[12]*z[7]*z[8] - z[2]*z[20];
  z[27] = -z[12]*z[2]*z[7] - z[20]*z[8];
  z[28] = z[16]*z[9] + z[26]*z[3];
  z[29] = -z[19]*z[9] - z[24]*z[3];
  z[30] = -z[19]*z[9] - z[24]*z[3];
  z[31] = z[19]*z[3] - z[24]*z[9];
  z[32] = z[16]*z[3] - z[26]*z[9];
  z[33] = -z[10]*z[25] + z[21]*z[4];
  z[34] = -z[10]*z[29] + z[22]*z[4];
  z[35] = z[10]*z[28] + z[27]*z[4];
  z[36] = -z[2];
  z[37] = -z[3];
  z[38] = -sin(state_[5]);
  z[39] = -z[9];
  z[40] = -z[10];
  z[41] = -z[12];
  z[42] = rear_.R/z[13];
  z[43] = z[15]*z[7];

  m[0] = z[11]*z[34] + z[31]*z[38];
  m[1] = z[11]*z[35] + z[32]*z[38];
  m[2] = z[11]*z[33] - z[23]*z[38];
  m[3] = 0;
  m[4] = -z[22]*z[40] + z[29]*z[4];
  m[5] = -z[4]*(-z[16]*z[39] - z[26]*z[37]) - z[40]*(-z[20]*z[8] - z[36]*z[41]*z[7]);
  m[6] = -z[21]*z[40] + z[25]*z[4];
  m[7] = 0;
  m[8] = z[11]*z[31] - z[34]*z[38];
  m[9] = z[11]*z[32] - z[35]*z[38];
  m[10] = -z[11]*z[23] - z[33]*z[38];
  m[11] = 0;
  m[12] = -front_.c*(z[22]*z[4] + z[30]*z[40]) - rear_.c*z[30] - cam_y*z[17] + ls_*(-z[19]*z[37] + z[24]*z[39]) + z[14]*z[19] - z[22]*z[36]*z[42] - z[43]*z[5];
  m[13] = -front_.c*z[35] + rear_.c*z[28] + cam_y*z[20] + ls_*z[32] + z[14]*z[16] - z[27]*z[36]*z[42] - z[41]*z[43];
  m[14] = -front_.c*(z[21]*z[4] + z[25]*z[40]) - rear_.c*z[25] - cam_y*z[0]*z[7] - ls_*z[23] + z[1]*z[15] - z[14]*z[6]*z[7] - z[21]*z[36]*z[42];
  m[15] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (16)
 *
 * @param[out] a C-array of with 16 elements
 */
//  void Bicycle::mc_f_ogl(double m[16]) const;
void Bicycle::mc_f_ogl(double m[16]) const
{
  double * z = new double[42];

  z[0] = sin(azimuth);
  z[1] = sin(elevation);
  z[2] = sin(state_[1]);
  z[3] = sin(state_[2]);
  z[4] = sin(state_[3]);
  z[5] = sin(twist);
  z[6] = cos(azimuth);
  z[7] = cos(elevation);
  z[8] = cos(state_[1]);
  z[9] = cos(state_[2]);
  z[10] = cos(state_[3]);
  z[11] = cos(twist);
  z[12] = cam_x + cam_z;
  z[13] = front_.a - front_.c;
  z[14] = sqrt(pow(z[8], 2));
  z[15] = rear_.R/z[14] + rear_.r;
  z[16] = z[0]*z[1]*z[5] + z[11]*z[6];
  z[17] = z[0]*z[2]*z[7] + z[1]*z[8];
  z[18] = z[0]*z[11] - z[1]*z[5]*z[6];
  z[19] = z[0]*z[1]*z[11] - z[5]*z[6];
  z[20] = z[0]*z[7]*z[8] - z[1]*z[2];
  z[21] = -z[0]*z[5] - z[1]*z[11]*z[6];
  z[22] = z[16]*z[8] + z[2]*z[5]*z[7];
  z[23] = z[17]*z[9] + z[3]*z[6]*z[7];
  z[24] = z[16]*z[2] - z[5]*z[7]*z[8];
  z[25] = z[11]*z[7]*z[8] - z[19]*z[2];
  z[26] = -z[23];
  z[27] = -z[11]*z[2]*z[7] - z[19]*z[8];
  z[28] = -z[17]*z[3] + z[6]*z[7]*z[9];
  z[29] = -z[21]*z[9] + z[25]*z[3];
  z[30] = -z[18]*z[9] - z[24]*z[3];
  z[31] = z[18]*z[3] - z[24]*z[9];
  z[32] = -z[21]*z[3] - z[25]*z[9];
  z[33] = -z[10]*(-z[17]*z[3] + z[6]*z[7]*z[9]) + z[20]*z[4];
  z[34] = -z[10]*z[30] + z[22]*z[4];
  z[35] = z[10]*z[29] + z[27]*z[4];
  z[36] = -rear_.c;
  z[37] = -cam_y;
  z[38] = -z[10];
  z[39] = -z[11];
  z[40] = rear_.R/z[14];
  z[41] = z[15]*z[7];

  m[0] = z[34];
  m[1] = z[35];
  m[2] = z[33];
  m[3] = 0;
  m[4] = -z[22]*z[38] + z[30]*z[4];
  m[5] = -z[38]*(-z[19]*z[8] + z[2]*z[39]*z[7]) - z[4]*(-z[21]*z[9] + z[25]*z[3]);
  m[6] = -z[20]*z[38] + z[28]*z[4];
  m[7] = 0;
  m[8] = z[31];
  m[9] = z[32];
  m[10] = -z[23];
  m[11] = 0;
  m[12] = front_.b*z[31] + ls_*z[31] - z[12]*z[18] + z[13]*z[34] + z[16]*z[37] + z[2]*z[22]*z[40] + z[30]*z[36] - z[41]*z[5];
  m[13] = front_.b*z[32] + ls_*z[32] + z[12]*z[21] + z[13]*z[35] - z[19]*z[37] + z[2]*z[27]*z[40] - z[29]*z[36] - z[39]*z[41];
  m[14] = front_.b*z[26] + ls_*z[26] + z[0]*z[37]*z[7] + z[1]*z[15] + z[12]*z[6]*z[7] + z[13]*z[33] + z[2]*z[20]*z[40] + z[28]*z[36];
  m[15] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (16)
 *
 * @param[out] a C-array of with 16 elements
 */
//  void Bicycle::N_ogl(double m[16]) const;
void Bicycle::N_ogl(double m[16]) const
{
  double * z = new double[21];

  z[0] = sin(azimuth);
  z[1] = sin(elevation);
  z[2] = sin(state_[0]);
  z[3] = sin(twist);
  z[4] = cos(azimuth);
  z[5] = cos(elevation);
  z[6] = cos(state_[0]);
  z[7] = cos(twist);
  z[8] = cam_x + cam_z;
  z[9] = z[0]*z[6] - z[2]*z[4];
  z[10] = z[0]*z[3] + z[1]*z[4]*z[7];
  z[11] = z[0]*z[1]*z[3] + z[4]*z[7];
  z[12] = z[0]*z[7] - z[1]*z[3]*z[4];
  z[13] = z[0]*z[1]*z[7] - z[3]*z[4];
  z[14] = z[10]*z[6] + z[13]*z[2];
  z[15] = z[11]*z[6] + z[12]*z[2];
  z[16] = z[10]*z[2] - z[13]*z[6];
  z[17] = -z[11]*z[2] + z[12]*z[6];
  z[18] = -z[4];
  z[19] = z[0]*z[2];
  z[20] = -z[18]*z[6];

  m[0] = z[17];
  m[1] = z[14];
  m[2] = z[5]*(-z[19] - z[20]);
  m[3] = 0;
  m[4] = z[15];
  m[5] = z[16];
  m[6] = z[5]*z[9];
  m[7] = 0;
  m[8] = z[3]*z[5];
  m[9] = -z[5]*z[7];
  m[10] = -z[1];
  m[11] = 0;
  m[12] = -cam_y*z[11] - state_[6]*z[17] - state_[7]*z[15] - z[12]*z[8];
  m[13] = cam_y*z[13] - state_[6]*z[14] - state_[7]*z[16] - z[10]*z[8];
  m[14] = -z[5]*(cam_y*z[0] - state_[6]*(z[19] + z[20]) + state_[7]*z[9] + z[18]*z[8]);
  m[15] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (1)
 *
 * @param[out] a C-array of with 1 elements
 */
//  void Bicycle::f_c(double m[1]) const;
void Bicycle::f_c(double m[1]) const
{
  double * z = new double[9];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = cos(state_[1]);
  z[3] = cos(state_[2]);
  z[4] = pow(z[2], 2);
  z[5] = pow(z[3], 2);
  z[6] = z[0]*sin(state_[3]) - z[1]*z[2]*cos(state_[3]);
  z[7] = rear_.R/sqrt(z[4]);
  z[8] = front_.R/sqrt(z[4]*z[5] + pow(z[6], 2));

  m[0] = -rear_.c*z[1]*z[2] + ls_*z[2]*z[3] + front_.r - rear_.r + pow(z[0], 2)*z[7] + z[4]*z[5]*z[8] + z[6]*(-front_.c + z[6]*z[8]) - z[7];

  delete [] z;
}

/** Computes the n-d array of shape (8)
 *
 * @param[out] a C-array of with 8 elements
 */
//  void Bicycle::f_c_dq(double m[8]) const;
void Bicycle::f_c_dq(double m[8]) const
{
  double * z = new double[27];

  z[0] = -2;
  z[1] = sin(state_[1]);
  z[2] = sin(state_[2]);
  z[3] = sin(state_[3]);
  z[4] = cos(state_[1]);
  z[5] = cos(state_[2]);
  z[6] = cos(state_[3]);
  z[7] = pow(z[4], -z[0]);
  z[8] = pow(z[5], -z[0]);
  z[9] = z[1]*z[2]*z[6] + z[3]*z[4];
  z[10] = z[1]*z[3] - z[2]*z[4]*z[6];
  z[11] = pow(z[10], -z[0]);
  z[12] = z[11] + z[7]*z[8];
  z[13] = sqrt(z[12]);
  z[14] = front_.R*z[10]/z[13] - front_.c;
  z[15] = -z[5];
  z[16] = z[1]*z[6];
  z[17] = z[2]*z[4];
  z[18] = z[3]*z[4];
  z[19] = z[4]*z[6];
  z[20] = z[7]*z[8];
  z[21] = z[1]*z[4]*z[8];
  z[22] = -z[15]*z[2]*z[7];
  z[23] = rear_.R*z[1]/sqrt(z[7]);
  z[24] = front_.R/pow(z[12], 3.0/2.0);
  z[25] = front_.R/z[13];
  z[26] = z[10]/z[12];

  m[0] = 0;
  m[1] = rear_.c*z[1]*z[2] + ls_*z[1]*z[15] + z[0]*z[21]*z[25] - z[0]*z[23]*z[4] + pow(z[1], 2)*z[23]/z[4] - z[10]*z[25]*(z[0]*z[16]*z[2] + z[0]*z[18] + z[26]*(z[0]*z[21] + z[10]*(-z[0]*z[16]*z[2] - z[0]*z[18])))/2 + z[14]*z[9] - z[20]*z[24]*(z[10]*z[9] - z[21]) - z[23]/z[4];
  m[2] = rear_.c*z[15]*z[4] - ls_*z[17] + z[0]*z[22]*z[25] + z[10]*z[25]*(z[15]*z[19] + z[26]*(-z[10]*z[15]*z[19] + z[22])) + z[14]*z[15]*z[19] - pow(z[15], 3)*z[24]*pow(z[4], 3)*(z[10]*z[6] + z[17]);
  m[3] = -(z[16] + z[17]*z[3])*(z[10]*z[20]*z[24] + z[10]*z[25]*(z[11]/z[12] - 1) - z[14]);
  m[4] = 0;
  m[5] = 0;
  m[6] = 0;
  m[7] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (3, 12)
 *
 * @param[out] a C-array of with 36 elements
 */
//  void Bicycle::f_v_coefficient(double m[36]) const;
void Bicycle::f_v_coefficient(double m[36]) const
{
  double * z = new double[38];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = pow(z[3], 2);
  z[7] = pow(z[4], 2);
  z[8] = sqrt(z[6]);
  z[9] = rear_.R/z[8] + rear_.r;
  z[10] = z[0]*z[5] + z[1]*z[2]*z[3];
  z[11] = z[0]*z[1]*z[5] + z[2]*z[3];
  z[12] = z[0]*z[2] - z[1]*z[3]*z[5];
  z[13] = z[0]*z[1]*z[2] - z[3]*z[5];
  z[14] = front_.r - z[9];
  z[15] = sqrt(pow(z[12], 2) + z[6]*z[7]);
  z[16] = sqrt(pow(z[13], 2) + pow(z[2], 2)*z[7]);
  z[17] = front_.R/z[15] + z[14];
  z[18] = front_.R*z[12]/z[15] + front_.r*z[0]*z[2]*z[7] + front_.r*z[1]*z[13];
  z[19] = -front_.c;
  z[20] = -front_.r;
  z[21] = rear_.c*z[2];
  z[22] = rear_.c*z[5];
  z[23] = -z[0];
  z[24] = -z[1];
  z[25] = -z[2]*z[23];
  z[26] = -z[23]*z[5];
  z[27] = -z[24]*z[3];
  z[28] = z[2]*z[3];
  z[29] = z[3]*z[4];
  z[30] = -z[7];
  z[31] = -1/z[8];
  z[32] = -rear_.R/z[8];
  z[33] = z[11]*z[2];
  z[34] = z[13]*z[5];
  z[35] = front_.R/z[15];
  z[36] = z[4]/z[16];
  z[37] = z[12]*z[35];

  m[0] = z[29]*(z[10]*z[35] + z[21] + z[26]*z[32]);
  m[1] = -z[11]*z[14] - z[21]*z[24] - z[24]*z[26]*z[32] + z[28]*z[30]*z[35];
  m[2] = z[17]*z[29]*z[5];
  m[3] = -z[20]*(z[11]*z[24] + z[26]*z[30]);
  m[4] = -z[29]*z[5]*z[9];
  m[5] = z[4]*(-z[20]*z[33] + z[20]*z[34] + z[3]*z[35]);
  m[6] = -z[29]*z[31]*z[5];
  m[7] = -z[11]*z[3]*z[31];
  m[8] = z[12];
  m[9] = z[36]*(-z[33] + z[34]);
  m[10] = (z[11]*z[13] - z[2]*z[30]*z[5])/z[16];
  m[11] = -z[12];
  m[12] = z[29]*(z[19] + z[22] - z[25]*z[32]);
  m[13] = z[13]*z[14] - z[19]*z[24] - z[22]*z[24] + z[24]*z[25]*z[32] - z[24]*z[37] + z[3]*z[30]*z[35]*z[5];
  m[14] = -z[17]*z[28]*z[4];
  m[15] = z[18] + z[19];
  m[16] = z[28]*z[4]*z[9];
  m[17] = 0;
  m[18] = z[28]*z[31]*z[4];
  m[19] = z[13]*z[3]*z[31];
  m[20] = z[10];
  m[21] = 0;
  m[22] = -z[16];
  m[23] = -z[10];
  m[24] = rear_.c*z[23] - z[10]*z[19] - z[10]*z[37] - z[23]*z[27]*z[32];
  m[25] = z[4]*(-z[14]*z[23] + z[19]*z[2] + z[2]*z[37] + z[23]*z[32]);
  m[26] = -rear_.c + z[14]*z[27] - z[19]*z[5] - z[37]*z[5];
  m[27] = 0;
  m[28] = -z[27]*z[9];
  m[29] = -z[18];
  m[30] = -z[27]*z[31];
  m[31] = -z[23]*z[29]*z[31];
  m[32] = z[29];
  m[33] = (-z[13]*z[24] - z[25]*z[30])/z[16];
  m[34] = -z[36]*(-z[13]*z[23] + z[2]*z[24]);
  m[35] = -z[29];

  delete [] z;
}

/** Computes the n-d array of shape (3, 12, 3)
 *
 * @param[out] a C-array of with 108 elements
 */
//  void Bicycle::f_v_coefficient_dq(double m[108]) const;
void Bicycle::f_v_coefficient_dq(double m[108]) const
{
  double * z = new double[82];

  z[0] = -2;
  z[1] = sin(state_[1]);
  z[2] = sin(state_[2]);
  z[3] = sin(state_[3]);
  z[4] = cos(state_[1]);
  z[5] = cos(state_[2]);
  z[6] = cos(state_[3]);
  z[7] = pow(z[1], -z[0]);
  z[8] = pow(z[3], -z[0]);
  z[9] = pow(z[4], -z[0]);
  z[10] = pow(z[5], -z[0]);
  z[11] = front_.r - rear_.r;
  z[12] = sqrt(z[9]);
  z[13] = -z[1]*z[11];
  z[14] = rear_.R/z[12] + rear_.r;
  z[15] = z[1]*z[6] + z[2]*z[3]*z[4];
  z[16] = z[1]*z[2]*z[6] + z[3]*z[4];
  z[17] = z[1]*z[3] - z[2]*z[4]*z[6];
  z[18] = z[1]*z[2]*z[3] - z[4]*z[6];
  z[19] = -rear_.R/z[12] + z[11];
  z[20] = -z[16];
  z[21] = pow(z[18], -z[0]);
  z[22] = z[17]*z[6] + z[2]*z[4];
  z[23] = -z[1]*z[18] + z[2]*z[3];
  z[24] = z[10]*z[9] + pow(z[17], -z[0]);
  z[25] = z[10]*z[8] + z[21];
  z[26] = sqrt(z[24]);
  z[27] = pow(z[24], 3.0/2.0);
  z[28] = sqrt(z[25]);
  z[29] = z[23]*z[3]*z[5];
  z[30] = -z[1]*z[10]*z[4] - z[17]*z[20];
  z[31] = front_.R*z[1]/z[26] + front_.R*z[30]*z[4]/z[27];
  z[32] = -front_.R*z[10]*z[22]*z[4]/z[27] + front_.R*z[2]/z[26] + z[19]*z[2];
  z[33] = -front_.R*z[17]*z[30]/z[27] - front_.R*z[20]/z[26] + front_.r*z[10]*z[3]*z[4] + front_.r*z[15]*z[2];
  z[34] = -front_.r;
  z[35] = -rear_.r;
  z[36] = front_.c*z[3];
  z[37] = rear_.c*z[3];
  z[38] = rear_.c*z[6];
  z[39] = -z[1];
  z[40] = -z[2];
  z[41] = -z[4];
  z[42] = -z[5];
  z[43] = -z[6];
  z[44] = z[39]*z[40];
  z[45] = -z[3]*z[39];
  z[46] = z[39]*z[42];
  z[47] = z[39]*z[43];
  z[48] = -z[3]*z[40];
  z[49] = z[40]*z[41];
  z[50] = -z[3]*z[41];
  z[51] = -z[3]*z[42];
  z[52] = z[41]*z[42];
  z[53] = z[41]*z[43];
  z[54] = z[42]*z[43];
  z[55] = -z[10];
  z[56] = -z[3]*z[55];
  z[57] = -rear_.R/z[12];
  z[58] = -z[41]/z[12];
  z[59] = -z[7]/z[41];
  z[60] = -z[55]*z[8];
  z[61] = -z[18]*z[34];
  z[62] = -z[15]*z[39];
  z[63] = -z[15]*z[40];
  z[64] = -z[15]*z[43];
  z[65] = z[17]*z[3];
  z[66] = -z[17]*z[43];
  z[67] = -z[18]*z[39];
  z[68] = -z[18]*z[40];
  z[69] = -z[18]*z[41];
  z[70] = -z[15]*z[20];
  z[71] = z[17]*z[18];
  z[72] = front_.R/z[26];
  z[73] = -z[42]/z[28];
  z[74] = z[18]/z[25];
  z[75] = -z[20]*z[29];
  z[76] = z[21]/z[25];
  z[77] = z[23]/z[25];
  z[78] = front_.R*z[22]/z[27];
  z[79] = z[29]/z[25];
  z[80] = front_.R*z[30]/z[27];
  z[81] = -z[42]*(-z[17]*z[41]*z[78] + z[3]*z[34]*z[44] - z[53]*z[72] + z[61]);

  m[0] = z[42]*(-rear_.R*z[12]*z[43] - z[15]*z[41]*z[80] - z[37]*z[39] + z[62]*z[72] + z[69]*z[72]);
  m[1] = -z[41]*(z[15]*z[41]*z[55]*z[78] + z[37]*z[40] + z[43]*z[44]*z[57] - z[50]*z[55]*z[72] - z[63]*z[72]);
  m[2] = 0;
  m[3] = z[17]*z[19] + z[20]*z[39]*z[57]/z[41] + z[40]*z[43]*z[57]*z[59] - z[43]*z[49]*z[57] - z[45]*z[55]*z[72] - z[50]*z[55]*z[80];
  m[4] = -z[42]*(z[0]*z[41]*z[48]*z[72] - z[19]*z[47] + z[3]*z[55]*z[78]*z[9] + z[37] + z[47]*z[57]);
  m[5] = 0;
  m[6] = -z[54]*(-z[11]*z[39] + z[31]);
  m[7] = -z[32]*z[53];
  m[8] = 0;
  m[9] = -z[34]*(-z[17]*z[40] + z[53]*z[55]);
  m[10] = -z[34]*z[42]*z[50];
  m[11] = 0;
  m[12] = z[35]*z[43]*z[46];
  m[13] = -z[14]*z[43]*z[49];
  m[14] = 0;
  m[15] = z[42]*(z[31] - z[34]*z[64] - z[34]*z[65]);
  m[16] = -z[20]*z[34]*z[48] + z[40]*z[43]*z[61] - z[49]*z[72] - z[55]*z[78]*z[9];
  m[17] = 0;
  m[18] = 0;
  m[19] = z[43]*z[49]/z[12];
  m[20] = 0;
  m[21] = -z[17]*z[58];
  m[22] = z[46]*z[53]/z[12];
  m[23] = 0;
  m[24] = z[16];
  m[25] = z[43]*z[52];
  m[26] = 0;
  m[27] = z[73]*(z[3]*z[70]*z[74] - z[64]*z[76] + z[64] + z[65]);
  m[28] = (-z[20]*z[48] + z[29]*z[54]*z[74] + z[43]*z[68] - z[51]*z[75]/z[25])/z[28];
  m[29] = 0;
  m[30] = -(z[56]*z[64]*z[74] + z[70]*z[76] - z[70] + z[71])/z[28];
  m[31] = (z[0]*z[48]*z[54] - z[18]*z[43]*z[46] + z[20]*z[42]*z[45] - z[43]*z[56]*z[79] + z[74]*z[75])/z[28];
  m[32] = 0;
  m[33] = z[20];
  m[34] = -z[43]*z[52];
  m[35] = 0;
  m[36] = -z[42]*(rear_.R*z[12]*z[3] - front_.c*z[39] + z[38]*z[39]);
  m[37] = z[49]*(front_.c - z[38] + z[45]*z[57]);
  m[38] = 0;
  m[39] = z[15]*z[19] + z[17]*z[40]*z[80] + z[20]*z[40]*z[72] + z[41]*z[48]*z[57] - z[47]*z[55]*z[72] - z[48]*z[57]*z[59] - z[53]*z[55]*z[80] - z[57]*z[67]/z[41];
  m[40] = -z[42]*(-front_.c + z[17]*z[49]*z[78] + z[17]*z[72] + z[19]*z[45] + z[38] - z[43]*z[49]*z[72] - z[43]*z[55]*z[78]*z[9] - z[45]*z[57]);
  m[41] = 0;
  m[42] = z[51]*(-z[13] + z[31]);
  m[43] = z[32]*z[50];
  m[44] = 0;
  m[45] = z[33];
  m[46] = z[81];
  m[47] = 0;
  m[48] = -z[35]*z[42]*z[45];
  m[49] = z[14]*z[41]*z[48];
  m[50] = 0;
  m[51] = 0;
  m[52] = 0;
  m[53] = 0;
  m[54] = 0;
  m[55] = z[48]*z[58];
  m[56] = 0;
  m[57] = -z[15]*z[58];
  m[58] = -z[45]*z[52]/z[12];
  m[59] = 0;
  m[60] = -z[18];
  m[61] = -z[42]*z[50];
  m[62] = 0;
  m[63] = 0;
  m[64] = 0;
  m[65] = 0;
  m[66] = z[15]*z[18]*(z[0] + z[76] + z[60]/z[25])/z[28];
  m[67] = -z[51]*(z[0]*z[48] - z[0]*z[67] + z[23]*z[76] + z[60]*z[77])/z[28];
  m[68] = 0;
  m[69] = z[18];
  m[70] = z[42]*z[50];
  m[71] = 0;
  m[72] = rear_.R*z[12]*z[40] - front_.c*z[18] + rear_.c*z[41] + z[15]*z[17]*z[80] - z[70]*z[72] + z[71]*z[72];
  m[73] = z[52]*(-z[15]*z[17]*z[78] + z[36] - z[39]*z[57] + z[64]*z[72] - z[65]*z[72]);
  m[74] = 0;
  m[75] = z[42]*(z[19]*z[41] + z[20]*z[3]*z[72] - z[41]*z[57] + z[65]*z[80]);
  m[76] = -z[17]*z[48]*z[72] - z[17]*z[50]*z[55]*z[78] - z[19]*z[44] - z[36]*z[40] - z[43]*z[50]*z[55]*z[72] + z[44]*z[57];
  m[77] = 0;
  m[78] = -z[13]*z[40] - z[20]*z[43]*z[72] + z[66]*z[80];
  m[79] = z[52]*(z[19] - z[66]*z[78] + z[72]*pow(-z[43], -z[0]));
  m[80] = 0;
  m[81] = 0;
  m[82] = 0;
  m[83] = 0;
  m[84] = -z[35]*z[44];
  m[85] = -z[14]*z[52];
  m[86] = 0;
  m[87] = -z[33];
  m[88] = -z[81];
  m[89] = 0;
  m[90] = 0;
  m[91] = z[52]/z[12];
  m[92] = 0;
  m[93] = z[12]*z[42];
  m[94] = z[44]*z[58];
  m[95] = 0;
  m[96] = -z[46];
  m[97] = -z[49];
  m[98] = 0;
  m[99] = (z[15]*z[45]*z[55]*z[74] - z[50]*z[55] - z[63]*z[76] + z[63])/z[28];
  m[100] = (-z[18]*z[42] - z[44]*z[51] - z[45]*z[55]*z[79] + z[68]*z[79])/z[28];
  m[101] = 0;
  m[102] = -z[73]*(z[15]*z[48]*z[74] - z[62]*z[76] + z[62] + z[69]);
  m[103] = -(-z[18]*z[44] - z[23]*z[45]*z[55]*z[74] + z[3]*pow(-z[40], -z[0]) + z[40]*z[60]*z[77] + z[56]*z[7] - z[56])/z[28];
  m[104] = 0;
  m[105] = z[46];
  m[106] = z[49];
  m[107] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (3, 12, 3, 3)
 *
 * @param[out] a C-array of with 324 elements
 */
//  void Bicycle::f_v_coefficient_dqdq(double m[324]) const;
void Bicycle::f_v_coefficient_dqdq(double m[324]) const
{
  double * z = new double[185];

  z[0] = -2;
  z[1] = sin(state_[1]);
  z[2] = sin(state_[2]);
  z[3] = sin(state_[3]);
  z[4] = cos(state_[1]);
  z[5] = cos(state_[2]);
  z[6] = cos(state_[3]);
  z[7] = pow(z[1], -z[0]);
  z[8] = pow(z[2], -z[0]);
  z[9] = pow(z[3], -z[0]);
  z[10] = pow(z[3], 3);
  z[11] = pow(z[4], -z[0]);
  z[12] = pow(z[4], 3);
  z[13] = pow(z[5], -z[0]);
  z[14] = pow(z[6], -z[0]);
  z[15] = front_.r - rear_.r;
  z[16] = sqrt(z[11]);
  z[17] = rear_.r*z[1]*z[5];
  z[18] = -z[1]*z[15];
  z[19] = -z[15]*z[4];
  z[20] = rear_.R/z[16] + rear_.r;
  z[21] = rear_.r*z[1]*z[2]*z[3];
  z[22] = z[1]*z[6] + z[2]*z[3]*z[4];
  z[23] = -z[1]*z[3] + z[2]*z[4]*z[6];
  z[24] = -z[23];
  z[25] = z[1]*z[2]*z[3] - z[4]*z[6];
  z[26] = -z[22];
  z[27] = -z[1]*z[2]*z[6] - z[3]*z[4];
  z[28] = pow(z[25], -z[0]);
  z[29] = pow(z[25], 3);
  z[30] = z[2]*z[4] + z[24]*z[6];
  z[31] = z[1]*z[25] - z[2]*z[3];
  z[32] = pow(z[30], -z[0]);
  z[33] = z[11]*z[13] + pow(z[24], -z[0]);
  z[34] = z[13]*z[9] + z[28];
  z[35] = sqrt(z[33]);
  z[36] = pow(z[33], 3.0/2.0);
  z[37] = pow(z[33], 5.0/2.0);
  z[38] = sqrt(z[34]);
  z[39] = pow(z[34], -z[0]);
  z[40] = -z[3]*z[31]*z[5];
  z[41] = -3*z[3]*z[31]*z[5];
  z[42] = z[1]*z[26] - z[25]*z[4];
  z[43] = -z[1]*z[13]*z[4] - z[24]*z[27];
  z[44] = pow(z[43], -z[0]);
  z[45] = z[13]*z[14]*z[4] - z[13]*z[4] + z[2]*z[24]*z[6] + z[4]*z[8];
  z[46] = -z[0]*z[1]*z[2]*z[4] + z[1]*z[24]*z[6] + z[27]*z[4]*z[6];
  z[47] = z[1]*z[2]*z[25] - z[13]*z[3]*z[7] + z[13]*z[3] - z[3]*z[8];
  z[48] = -z[13]*z[7] + z[33] - pow(-z[27], -z[0]);
  z[49] = -z[0]*z[1]*z[26]*z[3]*z[5] - z[0]*z[2]*z[25]*z[26]*z[5]*z[9]/z[34] - z[0]*z[25]*z[26]*z[40]/z[34] + z[0]*z[25]*z[3]*z[4]*z[5];
  z[50] = -front_.R*z[0]*z[2]*z[30]*z[4]/z[36] - 3*front_.R*z[11]*z[13]*z[32]/z[37] + front_.R*z[4]*z[45]/z[36] + front_.R/z[35] - rear_.R/z[16] + z[15];
  z[51] = -front_.R*z[0]*z[1]*z[43]/z[36] + 3*front_.R*z[4]*z[44]/z[37] + front_.R*z[4]*z[48]/z[36] - front_.R*z[4]/z[35];
  z[52] = front_.R*z[0]*z[11]*z[13]*z[30]*z[6]/z[36] + 3*front_.R*z[11]*z[13]*z[24]*z[32]/z[37] + front_.R*z[2]*z[4]*z[6]/z[35] - front_.R*z[24]*z[4]*z[45]/z[36] + front_.r*z[1]*z[3]*z[8] - front_.r*z[2]*z[25];
  z[53] = -z[2]*z[24]*z[3] - z[2]*z[25]*z[26]*z[27]*z[3]/z[34] - z[2]*z[26]*z[28]*z[6]/z[34] + z[2]*z[26]*z[6] + z[24]*z[3]*z[40]*z[5]/z[34] - z[26]*z[40]*z[5]*z[6]/z[34];
  z[54] = front_.R*z[0]*z[27]*z[43]/z[36] - 3*front_.R*z[24]*z[44]/z[37] - front_.R*z[24]*z[48]/z[36] + front_.R*z[24]/z[35] + front_.r*z[1]*z[13]*z[3] + front_.r*z[2]*z[25];
  z[55] = front_.R*z[1]*z[13]*z[30]*z[4]/z[36] - front_.R*z[1]*z[2]/z[35] + 3*front_.R*z[11]*z[13]*z[30]*z[43]/z[37] + front_.R*z[13]*z[4]*z[46]/z[36] - front_.R*z[2]*z[4]*z[43]/z[36];
  z[56] = -z[6]*(-z[1]*z[15]*z[2] + z[55]);
  z[57] = 3*z[1]*z[13]*z[25]*z[26]*z[31]*z[9]/z[39] - z[1]*z[6] + z[13]*z[31]*z[4]*z[9]/z[34] + 3*z[2]*z[26]*z[28]*z[3]*z[31]/z[39] - z[2]*z[26]*z[3]*z[31]/z[34] - z[26]*z[28]/z[34];
  z[58] = front_.r*z[2]*z[24]*z[3] - front_.r*z[2]*z[26]*z[6] - z[55];
  z[59] = -z[5]*(front_.R*z[1]*z[6]/z[35] - 3*front_.R*z[24]*z[30]*z[4]*z[43]/z[37] - front_.R*z[24]*z[46]/z[36] - front_.R*z[27]*z[30]*z[4]/z[36] + front_.R*z[4]*z[43]*z[6]/z[36] - front_.r*z[2]*z[3]*z[4] - front_.r*z[26]);
  z[60] = -z[0]*z[2]*z[25]*z[26]*z[3]*z[6]/z[34] + z[1]*z[24]*z[3] - z[1]*z[26]*z[28]*z[6]/z[34] + z[1]*z[26]*z[6] + 3*z[13]*z[25]*z[26]*z[31]*z[6]*z[9]/z[39] - z[24]*z[25]*z[3]*z[31]/z[34] - z[25]*z[4]*z[6] - 3*z[26]*z[27]*z[28]*z[3]*z[31]/z[39] + z[26]*z[27]*z[3]*z[31]/z[34] + z[27]*z[3]*z[4];
  z[61] = -z[0]*z[1]*z[13]*z[3]*z[4] - 3*z[1]*z[13]*z[26]*z[28]*z[3]*z[31]/z[39] + z[1]*z[13]*z[26]*z[3]*z[31]/z[34] - z[1]*z[2]*z[26]*z[28]/z[34] + z[1]*z[2]*z[26] + 3*z[13]*z[2]*z[25]*z[26]*z[31]*z[9]/z[39] - z[13]*z[25]*z[26]*z[3]/z[34] - z[13]*z[25]*z[3]*z[31]*z[4]/z[34] - z[2]*z[25]*z[4] + z[25]*z[26]*z[3]*z[8]/z[34];
  z[62] = front_.R*z[1]*z[13]*z[3]*z[6]/z[35] - 3*front_.R*z[13]*z[24]*z[3]*z[30]*z[4]*z[43]/z[37] - front_.R*z[13]*z[24]*z[3]*z[46]/z[36] - front_.R*z[13]*z[27]*z[3]*z[30]*z[4]/z[36] + front_.R*z[13]*z[3]*z[4]*z[43]*z[6]/z[36] + front_.R*z[2]*z[24]*z[3]*z[43]/z[36] + front_.R*z[2]*z[27]*z[3]/z[35] - rear_.R*z[2]*z[4]/z[16] + z[2]*z[4]*(rear_.R/z[16] - z[15]);
  z[63] = front_.R*z[0]*z[1]*z[13]*z[3]*z[4]/z[35] + front_.R*z[1]*z[13]*z[26]*z[30]*z[4]/z[36] - front_.R*z[1]*z[2]*z[26]/z[35] - front_.R*z[11]*z[13]*z[25]*z[30]/z[36] + 3*front_.R*z[11]*z[13]*z[26]*z[30]*z[43]/z[37] - front_.R*z[11]*z[13]*z[3]*z[43]/z[36] + front_.R*z[13]*z[26]*z[4]*z[46]/z[36] + front_.R*z[2]*z[25]*z[4]/z[35] - front_.R*z[2]*z[26]*z[4]*z[43]/z[36] + rear_.R*z[16]*z[2]*z[6] + rear_.c*z[1]*z[2]*z[3];
  z[64] = -z[5]*(-front_.R*z[1]*z[24]*z[3]/z[35] - front_.R*z[1]*z[26]*z[6]/z[35] - front_.R*z[24]*z[25]*z[30]*z[4]/z[36] + 3*front_.R*z[24]*z[26]*z[30]*z[4]*z[43]/z[37] + front_.R*z[24]*z[26]*z[46]/z[36] - front_.R*z[24]*z[3]*z[4]*z[43]/z[36] + front_.R*z[25]*z[4]*z[6]/z[35] + front_.R*z[26]*z[27]*z[30]*z[4]/z[36] - front_.R*z[26]*z[4]*z[43]*z[6]/z[36] - front_.R*z[27]*z[3]*z[4]/z[35] + rear_.R*z[16] + front_.c*z[1]*z[3]);
  z[65] = -z[5]*(-front_.R*z[1]*z[13]*z[30]*z[4]*z[6]/z[36] + front_.R*z[1]*z[2]*z[6]/z[35] - 3*front_.R*z[11]*z[13]*z[30]*z[43]*z[6]/z[37] - front_.R*z[13]*z[4]*z[46]*z[6]/z[36] + 3*front_.R*z[2]*z[24]*z[30]*z[4]*z[43]/z[37] + front_.R*z[2]*z[24]*z[46]/z[36] + front_.R*z[2]*z[27]*z[30]*z[4]/z[36] + front_.R*z[2]*z[4]*z[43]*z[6]/z[36] + front_.R*z[24]*z[43]/z[36] + front_.R*z[27]/z[35] - rear_.R*z[3]*z[4]/z[16] + z[3]*z[4]*(rear_.R/z[16] - z[15]));
  z[66] = -front_.c;
  z[67] = -front_.r;
  z[68] = -rear_.r;
  z[69] = -z[2]*z[66];
  z[70] = rear_.c*z[1];
  z[71] = rear_.c*z[3];
  z[72] = -z[1];
  z[73] = -z[2];
  z[74] = -z[3];
  z[75] = -z[4];
  z[76] = z[0]*z[75];
  z[77] = -3*z[75];
  z[78] = -z[5];
  z[79] = -3*z[78];
  z[80] = -z[6];
  z[81] = z[0]*z[80];
  z[82] = z[72]*z[73];
  z[83] = z[72]*z[74];
  z[84] = z[72]*z[78];
  z[85] = z[73]*z[74];
  z[86] = z[73]*z[75];
  z[87] = z[74]*z[75];
  z[88] = z[74]*z[78];
  z[89] = z[75]*z[78];
  z[90] = z[75]*z[80];
  z[91] = z[78]*z[80];
  z[92] = -z[82];
  z[93] = -z[72]*z[80];
  z[94] = -z[89];
  z[95] = -z[7];
  z[96] = z[0]*z[95];
  z[97] = z[0]/z[75];
  z[98] = -z[13];
  z[99] = z[0]*z[98];
  z[100] = -3*z[98];
  z[101] = 3*pow(z[5], 4);
  z[102] = z[72]*z[98];
  z[103] = -z[11]*z[73];
  z[104] = z[74]*z[98];
  z[105] = z[75]*z[98];
  z[106] = z[80]*z[98];
  z[107] = -z[78]*z[83];
  z[108] = -z[80]*z[84];
  z[109] = -z[75]*z[85];
  z[110] = -z[80]*z[86];
  z[111] = z[0]*z[74]*z[8];
  z[112] = -z[107];
  z[113] = -z[108];
  z[114] = -z[109];
  z[115] = z[112]*z[67];
  z[116] = -rear_.R/z[16];
  z[117] = -z[75]/z[16];
  z[118] = pow(z[1], 3)/z[11];
  z[119] = -z[9]*z[98];
  z[120] = z[68]*z[80]*z[92];
  z[121] = z[16];
  z[122] = -z[121]*z[73];
  z[123] = z[117]*z[84];
  z[124] = z[121]*z[91];
  z[125] = z[26]*z[72];
  z[126] = z[26]*z[73];
  z[127] = z[26]*z[75];
  z[128] = z[27]*z[73];
  z[129] = z[27]*z[74];
  z[130] = -z[121]*z[88];
  z[131] = -z[24]*z[73];
  z[132] = -z[24]*z[74];
  z[133] = -z[24]*z[80];
  z[134] = -z[25]*z[72];
  z[135] = -z[25]*z[73];
  z[136] = -z[25]*z[75];
  z[137] = -z[25]*z[80];
  z[138] = 3*z[28];
  z[139] = -z[24]*z[98];
  z[140] = -z[26]*z[92];
  z[141] = -z[24]*z[85];
  z[142] = -z[94]*(rear_.c*z[80] + z[116]*z[83] - z[66]);
  z[143] = -z[24]*z[26];
  z[144] = -z[25]*z[27];
  z[145] = -z[0]*z[144];
  z[146] = front_.R/z[35];
  z[147] = -z[73]*(rear_.R*z[121]*z[74] - z[66]*z[72] - z[70]*z[80]);
  z[148] = -z[80]/z[34];
  z[149] = -z[78]/z[38];
  z[150] = -z[0]*z[40];
  z[151] = 3*z[40];
  z[152] = z[9]/z[34];
  z[153] = z[10]*pow(z[5], 3)/z[34];
  z[154] = -z[26]/z[39];
  z[155] = -z[26]/z[34];
  z[156] = -z[27]/z[34];
  z[157] = -z[3]*z[42]*z[5];
  z[158] = z[25]/z[39];
  z[159] = z[25]/z[34];
  z[160] = pow(-z[26], -z[0])/z[34];
  z[161] = 3*pow(-z[26], -z[0])/z[39];
  z[162] = z[28]/z[34];
  z[163] = z[29]/z[34];
  z[164] = front_.R*z[30]/z[36];
  z[165] = pow(-z[31], -z[0])/z[39];
  z[166] = 3*front_.R*z[32]/z[37];
  z[167] = z[40]/z[34];
  z[168] = front_.R*z[12]*z[32]/z[37];
  z[169] = z[41]/z[39];
  z[170] = z[150]/z[34];
  z[171] = z[40]*z[41];
  z[172] = z[104]*z[155]*z[25];
  z[173] = front_.R*z[43]/z[36];
  z[174] = front_.R*z[44]/z[37];
  z[175] = z[47]/z[34];
  z[176] = front_.R*z[45]/z[36];
  z[177] = front_.R*z[46]/z[36];
  z[178] = front_.R*z[48]/z[36];
  z[179] = z[169]*z[40];
  z[180] = front_.R*z[30]*z[43]/z[37];
  z[181] = 3*z[180];
  z[182] = -z[74]*(-z[18]*z[73] + z[55]);
  z[183] = -z[78]*(z[0]*z[146]*z[74]*z[92] + z[104]*z[11]*z[181] + z[105]*z[164]*z[83] + z[116]*z[90] - z[173]*z[76]*z[85] - z[177]*z[87]*z[98] + z[90]*(-z[116] - z[15]));
  z[184] = -z[78]*(-z[114]*z[67] - z[146]*z[93] + z[164]*z[27]*z[75] + z[173]*z[90] - z[177]*z[24] + z[181]*z[24]*z[75] + z[26]*z[67]);

  m[0] = -z[78]*(-z[0]*z[125]*z[173] - z[0]*z[134]*z[146] - z[116]*z[75]*z[93] + 3*z[127]*z[174] + z[127]*z[178] + z[146]*z[26]*z[76] + z[173]*z[25]*z[76] + z[71]*z[75]);
  m[1] = z[63];
  m[2] = 0;
  m[3] = z[63];
  m[4] = z[94]*(front_.R*z[100]*z[11]*z[26]*z[32]/z[37] + z[11]*z[164]*z[74]*z[99] - z[116]*z[93] + z[126]*z[164]*z[76] + z[127]*z[176] - z[146]*z[26] + z[146]*z[77]*z[85] + z[71]);
  m[5] = 0;
  m[6] = 0;
  m[7] = 0;
  m[8] = 0;
  m[9] = rear_.R*z[118]*z[73]*z[81]/sqrt(z[11]) - rear_.R*z[27]*z[96]/pow(z[11], 3.0/2.0) - z[100]*z[174]*z[87] - z[116]*z[24]*z[72]*z[97] + z[116]*z[27] - z[116]*z[81]*z[92] - z[146]*z[87]*z[98] - z[173]*z[83]*z[99] + z[178]*z[87]*z[98] + z[27]*(-z[116] - z[15]);
  m[10] = z[183];
  m[11] = 0;
  m[12] = z[183];
  m[13] = z[101]*z[168]*z[74] + z[104]*z[11]*z[176] + z[104]*z[146]*z[76] - 4*z[11]*z[164]*z[85]*z[98] - z[116]*z[80]*z[92] + z[146]*z[74]*z[76]*z[8] + z[71]*z[73] - z[80]*z[92]*(-z[116] - z[15]);
  m[14] = 0;
  m[15] = 0;
  m[16] = 0;
  m[17] = 0;
  m[18] = z[91]*(z[19] + z[51]);
  m[19] = z[56];
  m[20] = 0;
  m[21] = z[56];
  m[22] = -z[50]*z[80]*z[94];
  m[23] = 0;
  m[24] = 0;
  m[25] = 0;
  m[26] = 0;
  m[27] = -z[67]*(z[128] + z[93]*z[98]);
  m[28] = z[115];
  m[29] = 0;
  m[30] = z[115];
  m[31] = z[114]*z[67];
  m[32] = 0;
  m[33] = 0;
  m[34] = 0;
  m[35] = 0;
  m[36] = -z[68]*z[80]*z[94];
  m[37] = z[120];
  m[38] = 0;
  m[39] = z[120];
  m[40] = z[20]*z[80]*z[94];
  m[41] = 0;
  m[42] = 0;
  m[43] = 0;
  m[44] = 0;
  m[45] = -z[78]*(z[129]*z[67] - z[137]*z[67] + z[51]);
  m[46] = z[58];
  m[47] = 0;
  m[48] = z[58];
  m[49] = z[78]*(-z[0]*z[103]*z[164] + z[11]*z[176] + z[12]*z[166]*z[98] - z[129]*z[67] + z[137]*z[67] - z[146]*z[75]);
  m[50] = 0;
  m[51] = 0;
  m[52] = 0;
  m[53] = 0;
  m[54] = 0;
  m[55] = 0;
  m[56] = 0;
  m[57] = 0;
  m[58] = -z[80]*z[94]/z[121];
  m[59] = 0;
  m[60] = 0;
  m[61] = 0;
  m[62] = 0;
  m[63] = z[117]*z[27];
  m[64] = z[124];
  m[65] = 0;
  m[66] = z[124];
  m[67] = z[90]*z[92]/z[121];
  m[68] = 0;
  m[69] = 0;
  m[70] = 0;
  m[71] = 0;
  m[72] = z[23];
  m[73] = z[108];
  m[74] = 0;
  m[75] = z[108];
  m[76] = z[110];
  m[77] = 0;
  m[78] = 0;
  m[79] = 0;
  m[80] = 0;
  m[81] = -z[149]*(-z[0]*z[132]*z[155]*z[25] + z[129]*z[138]*pow(-z[26], -z[0])/z[39] - z[129]*z[160] + z[129]*z[162] - z[129] + 3*z[137]*z[160] + z[137] - z[148]*z[29] + z[161]*z[29]*z[80]);
  m[82] = (z[102]*z[152]*z[26]*z[27] + z[105]*z[144]*z[152] - z[106]*z[155]*z[25]*z[83] - z[106]*z[162]*z[87] + z[144]*z[154]*z[41]*z[88] - z[154]*z[28]*z[41]*z[91] + z[53])/z[38];
  m[83] = 0;
  m[84] = (z[144]*z[151]*z[154]*z[88] + z[154]*z[28]*z[40]*z[79]*z[80] + z[156]*z[157]*z[88] - z[157]*z[159]*z[91] + z[53])/z[38];
  m[85] = (-z[135]*z[167]*z[81] + z[137]*z[175]*z[88] + z[150]*z[156]*z[85] - z[152]*z[27]*z[47]*z[78] + z[158]*z[171]*z[91] + z[179]*z[27]*z[88] - z[25]*z[91] - z[27]*z[88])/z[38];
  m[86] = 0;
  m[87] = 0;
  m[88] = 0;
  m[89] = 0;
  m[90] = -(z[0]*z[143]*z[162] - z[0]*z[143] + z[104]*z[138]*z[80]*pow(-z[26], -z[0])/z[39] - z[104]*z[148]*z[28] + z[104]*z[148]*pow(-z[26], -z[0]) + 3*z[144]*z[160] + z[145] - z[156]*z[29] + z[161]*z[27]*z[29])/z[38];
  m[91] = -z[149]*(z[119]*z[25]*z[90]/z[34] + z[119]*z[26]*z[93]/z[34] + z[145]*z[155]*z[83] - z[162]*z[27]*z[87] + z[60]);
  m[92] = 0;
  m[93] = -z[149]*(-z[106]*z[152]*z[42] - z[129]*z[159]*z[42] + z[144]*z[155]*z[83] + z[60]);
  m[94] = (-z[104]*z[179]*z[80] - z[104]*z[81]*z[95] - z[104]*z[81] + z[106]*z[152]*z[47] - z[112]*z[150]*z[156] + z[129]*z[159]*z[47] + z[129]*z[92] + z[137]*z[92] + z[144]*z[179] + z[159]*z[40]*z[81]*z[84] - 4*z[167]*z[85]*z[91] - z[74]*z[8]*z[81])/z[38];
  m[95] = 0;
  m[96] = 0;
  m[97] = 0;
  m[98] = 0;
  m[99] = z[24];
  m[100] = z[113];
  m[101] = 0;
  m[102] = z[113];
  m[103] = -z[110];
  m[104] = 0;
  m[105] = 0;
  m[106] = 0;
  m[107] = 0;
  m[108] = z[142];
  m[109] = z[147];
  m[110] = 0;
  m[111] = z[147];
  m[112] = z[142];
  m[113] = 0;
  m[114] = 0;
  m[115] = 0;
  m[116] = 0;
  m[117] = -rear_.R*z[0]*z[118]*z[85]/sqrt(z[11]) - rear_.R*z[25]*z[96]/pow(z[11], 3.0/2.0) + z[0]*z[116]*z[74]*z[92] + z[0]*z[128]*z[173] - z[102]*z[173]*z[81] - z[106]*z[174]*z[77] + z[116]*z[125]*z[97] + z[116]*z[25] - z[131]*z[146] + 3*z[131]*z[174] + z[131]*z[178] - z[146]*z[90]*z[98] + z[178]*z[90]*z[98] + z[25]*(-z[116] - z[15]);
  m[118] = z[65];
  m[119] = 0;
  m[120] = z[65];
  m[121] = -rear_.c*z[73]*z[80] + z[101]*z[168]*z[80] + z[103]*z[139]*z[166] - z[103]*z[164]*z[81]*z[98] + z[106]*z[11]*z[176] + z[116]*z[74]*z[92] - z[131]*z[146] + z[139]*z[164]*z[76] - z[146]*z[8]*z[90] - z[176]*z[24]*z[86] + z[69] + z[74]*z[92]*(-z[116] - z[15]);
  m[122] = 0;
  m[123] = 0;
  m[124] = 0;
  m[125] = 0;
  m[126] = -z[88]*(z[15]*z[75] + z[51]);
  m[127] = z[182];
  m[128] = 0;
  m[129] = z[182];
  m[130] = -z[50]*z[78]*z[87];
  m[131] = 0;
  m[132] = 0;
  m[133] = 0;
  m[134] = 0;
  m[135] = -z[54];
  m[136] = z[184];
  m[137] = 0;
  m[138] = z[184];
  m[139] = z[52];
  m[140] = 0;
  m[141] = 0;
  m[142] = 0;
  m[143] = 0;
  m[144] = -z[68]*z[78]*z[87];
  m[145] = z[21];
  m[146] = 0;
  m[147] = z[21];
  m[148] = z[20]*z[78]*z[87];
  m[149] = 0;
  m[150] = 0;
  m[151] = 0;
  m[152] = 0;
  m[153] = 0;
  m[154] = 0;
  m[155] = 0;
  m[156] = 0;
  m[157] = 0;
  m[158] = 0;
  m[159] = 0;
  m[160] = 0;
  m[161] = 0;
  m[162] = 0;
  m[163] = 0;
  m[164] = 0;
  m[165] = 0;
  m[166] = -z[78]*z[87]/z[121];
  m[167] = 0;
  m[168] = 0;
  m[169] = 0;
  m[170] = 0;
  m[171] = z[117]*z[25];
  m[172] = z[130];
  m[173] = 0;
  m[174] = z[130];
  m[175] = -z[87]*z[92]/z[121];
  m[176] = 0;
  m[177] = 0;
  m[178] = 0;
  m[179] = 0;
  m[180] = z[26];
  m[181] = z[112];
  m[182] = 0;
  m[183] = z[112];
  m[184] = z[114];
  m[185] = 0;
  m[186] = 0;
  m[187] = 0;
  m[188] = 0;
  m[189] = 0;
  m[190] = 0;
  m[191] = 0;
  m[192] = 0;
  m[193] = 0;
  m[194] = 0;
  m[195] = 0;
  m[196] = 0;
  m[197] = 0;
  m[198] = -(z[0]*z[28] - z[0]*pow(-z[26], -z[0]) + z[100]*z[28]*z[9]*pow(-z[26], -z[0])/z[39] - z[119]*z[160] + z[119]*z[162] + 3*z[158]*pow(z[25], 3)*pow(-z[26], -z[0]) + z[159]*pow(z[25], 3) - 5*z[160]*z[28])/z[38];
  m[199] = (-z[112]*z[138]*z[155] + z[119]*z[154]*z[25]*z[41] + z[125]*z[153] + z[136]*z[153] + z[154]*z[29]*z[41] - z[163]*z[78]*z[87] + z[49])/z[38];
  m[200] = 0;
  m[201] = (-z[0]*z[112]*z[162]*z[26] + z[119]*z[151]*z[154]*z[25] + z[119]*z[157]/z[34] + z[151]*z[154]*z[29] + z[157]*z[162] + z[49])/z[38];
  m[202] = z[74]*(-z[0]*z[25]*z[92] + z[10]*z[101]*z[165] + z[104]*z[138]*z[165] + z[104]*z[96] + z[111] + z[119]*z[175] - 4*z[119]*z[31]*z[73]/z[34] + 4*z[159]*z[31]*z[83]*z[98] + z[162]*z[47] + z[74]*z[99])/z[38];
  m[203] = 0;
  m[204] = 0;
  m[205] = 0;
  m[206] = 0;
  m[207] = z[22];
  m[208] = z[107];
  m[209] = 0;
  m[210] = z[107];
  m[211] = z[109];
  m[212] = 0;
  m[213] = 0;
  m[214] = 0;
  m[215] = 0;
  m[216] = -z[0]*z[143]*z[146] + z[0]*z[173]*z[24]*z[25] - z[0]*z[173]*z[26]*z[27] - z[116]*z[75]*z[92] - 3*z[143]*z[174] - z[143]*z[178] + z[145]*z[146] - z[26]*z[66] + z[70];
  m[217] = z[64];
  m[218] = 0;
  m[219] = z[64];
  m[220] = -z[75]*(front_.R*z[139]*z[26]*z[32]*z[77]/z[37] - z[104]*z[146]*z[76]*z[80] - z[104]*z[164]*z[24]*z[76] - z[106]*z[164]*z[26]*z[76] + z[116]*z[92] + z[126]*z[146]*z[80] - z[141]*z[146] + z[143]*z[176] + z[69]*z[74]);
  m[221] = 0;
  m[222] = 0;
  m[223] = 0;
  m[224] = 0;
  m[225] = -z[78]*(z[0]*z[129]*z[173] - z[116]*z[72] - z[132]*z[146] + 3*z[132]*z[174] + z[132]*z[178] - z[72]*(-z[116] - z[15]));
  m[226] = z[62];
  m[227] = 0;
  m[228] = z[62];
  m[229] = z[78]*(-front_.R*z[100]*z[11]*z[132]*z[32]/z[37] + z[104]*z[11]*z[164]*z[81] + z[116]*z[72] + z[132]*z[146] - z[141]*z[164]*z[76] - 3*z[146]*z[85]*z[90] + z[176]*z[24]*z[87] - z[66]*z[74] + z[72]*(-z[116] - z[15]));
  m[230] = 0;
  m[231] = 0;
  m[232] = 0;
  m[233] = 0;
  m[234] = z[133]*z[146] - 3*z[133]*z[174] - z[133]*z[178] - z[173]*z[27]*z[81] - z[19]*z[73];
  m[235] = -z[78]*(z[133]*z[177] + z[133]*z[180]*z[77] + z[14]*z[146]*z[72] + z[14]*z[173]*z[75] + z[164]*z[27]*z[90] + z[18]);
  m[236] = 0;
  m[237] = z[78]*(-z[133]*z[177] - z[14]*z[146]*z[72] - z[14]*z[173]*z[75] - z[15]*z[72] - z[164]*z[27]*z[90] - z[181]*z[24]*z[90]);
  m[238] = z[75]*(front_.R*z[106]*z[24]*z[32]*z[77]/z[37] - z[133]*z[176] - z[14]*z[146]*z[73] + z[14]*z[164]*z[76]*z[98] - z[73]*(z[116] + z[15]));
  m[239] = 0;
  m[240] = 0;
  m[241] = 0;
  m[242] = 0;
  m[243] = 0;
  m[244] = 0;
  m[245] = 0;
  m[246] = 0;
  m[247] = 0;
  m[248] = 0;
  m[249] = 0;
  m[250] = 0;
  m[251] = 0;
  m[252] = -z[68]*z[86];
  m[253] = z[17];
  m[254] = 0;
  m[255] = z[17];
  m[256] = z[20]*z[86];
  m[257] = 0;
  m[258] = 0;
  m[259] = 0;
  m[260] = 0;
  m[261] = z[54];
  m[262] = z[59];
  m[263] = 0;
  m[264] = z[59];
  m[265] = -z[52];
  m[266] = 0;
  m[267] = 0;
  m[268] = 0;
  m[269] = 0;
  m[270] = 0;
  m[271] = 0;
  m[272] = 0;
  m[273] = 0;
  m[274] = -z[86]/z[121];
  m[275] = 0;
  m[276] = 0;
  m[277] = 0;
  m[278] = 0;
  m[279] = z[123];
  m[280] = z[122];
  m[281] = 0;
  m[282] = z[122];
  m[283] = z[123];
  m[284] = 0;
  m[285] = 0;
  m[286] = 0;
  m[287] = 0;
  m[288] = z[94];
  m[289] = z[82];
  m[290] = 0;
  m[291] = z[82];
  m[292] = z[94];
  m[293] = 0;
  m[294] = 0;
  m[295] = 0;
  m[296] = 0;
  m[297] = -(3*z[135]*z[160] + z[135] + z[138]*z[83]*z[98]*pow(-z[26], -z[0])/z[39] - z[160]*z[83]*z[98] + z[161]*z[29]*z[73] + z[162]*z[83]*z[98] + z[163]*z[73] + z[172]*z[76] - z[83]*z[98])/z[38];
  m[298] = -z[149]*(z[102]*z[136]*z[152] - z[114]*z[162] - z[119]*z[155]*z[95] + z[57]);
  m[299] = 0;
  m[300] = -z[149]*(-z[102]*z[152]*z[42] - z[140]*z[159]*z[74] - z[159]*z[42]*z[85] + z[57]);
  m[301] = (z[102]*z[152]*z[47] + z[135]*z[179] - z[135] + z[159]*z[47]*z[85] - z[170]*z[25]*z[78] + z[170]*z[88]*z[92] - z[179]*z[83]*z[98] + z[8]*z[83])/z[38];
  m[302] = 0;
  m[303] = 0;
  m[304] = 0;
  m[305] = 0;
  m[306] = z[149]*(-z[0]*z[134] + 3*z[134]*z[160] + z[138]*z[85]*pow(-z[26], -z[0])/z[39] + z[155]*z[28]*z[76] - z[160]*z[85] + z[161]*z[29]*z[72] + z[162]*z[85] + z[163]*z[72] + z[26]*z[76]);
  m[307] = -(-z[105]*z[162]*z[83] - z[119]*z[140]/z[34] + z[119]*z[25]*z[86]/z[34] - z[172]*z[96] + z[61])/z[38];
  m[308] = 0;
  m[309] = -(z[119]*z[42]*z[73]/z[34] - z[159]*z[42]*z[83]*z[98] + z[172]*z[95] + z[61])/z[38];
  m[310] = (-z[104]*z[167]*z[96] - z[111]*z[167] + z[112]*z[159]*z[47] - z[150]*z[159]*z[92] + z[152]*z[47]*z[73]*z[78] - z[158]*z[171]*z[84] - z[167]*z[74]*z[99] - z[169]*z[40]*z[78]*z[85] + z[25]*z[84] + 4*z[78]*z[85] - z[79]*z[85]*z[95])/z[38];
  m[311] = 0;
  m[312] = 0;
  m[313] = 0;
  m[314] = 0;
  m[315] = z[89];
  m[316] = z[92];
  m[317] = 0;
  m[318] = z[92];
  m[319] = z[89];
  m[320] = 0;
  m[321] = 0;
  m[322] = 0;
  m[323] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (8)
 *
 * @param[out] a C-array of with 8 elements
 */
//  void Bicycle::f_1(double m[8]) const;
void Bicycle::f_1(double m[8]) const
{
  double * z = new double[13];

  z[0] = sin(state_[0]);
  z[1] = sin(state_[1]);
  z[2] = cos(state_[0]);
  z[3] = cos(state_[1]);
  z[4] = state_[10] + state_[12];
  z[5] = pow(z[1], 2);
  z[6] = sqrt(pow(z[3], 2));
  z[7] = rear_.R/z[6] + rear_.r;
  z[8] = z[1]*(rear_.R*state_[9]*z[1]/z[6] - state_[9]*z[1]*z[7]) - z[3]*(rear_.R*state_[9]*z[5]/(z[3]*z[6]) + state_[9]*z[3]*z[7]);
  z[9] = -state_[9];
  z[10] = rear_.R/z[6];
  z[11] = z[3]*z[7];
  z[12] = -z[3]*z[9]*(z[3] + z[5]/z[3]);

  m[0] = -state_[8];
  m[1] = z[9];
  m[2] = -state_[10];
  m[3] = -state_[11];
  m[4] = -state_[12];
  m[5] = -state_[13];
  m[6] = -z[0]*z[10]*z[12] - z[0]*z[8] + z[11]*z[2]*z[4];
  m[7] = z[0]*z[11]*z[4] + z[10]*z[12]*z[2] + z[2]*z[8];

  delete [] z;
}

/** Computes the n-d array of shape (8, 8)
 *
 * @param[out] a C-array of with 64 elements
 */
//  void Bicycle::f_1_dq(double m[64]) const;
void Bicycle::f_1_dq(double m[64]) const
{
  double * z = new double[22];

  z[0] = sin(state_[0]);
  z[1] = sin(state_[1]);
  z[2] = cos(state_[1]);
  z[3] = state_[10] + state_[12];
  z[4] = pow(z[1], 2);
  z[5] = pow(z[2], 2);
  z[6] = sqrt(z[5]);
  z[7] = z[4]/z[5] + 1;
  z[8] = z[2] + z[4]/z[2];
  z[9] = -rear_.R/z[6] - rear_.r;
  z[10] = rear_.R*state_[9]*z[1]/z[6] + state_[9]*z[1]*z[9];
  z[11] = rear_.R*state_[9]*z[4]/(z[2]*z[6]) - state_[9]*z[2]*z[9];
  z[12] = z[1]*z[10] - z[11]*z[2];
  z[13] = z[1]*z[11] + z[1]*(rear_.R*state_[9]*z[2]/z[6] + state_[9]*z[2]*z[9]) + z[10]*z[2] - z[2]*(2*rear_.R*state_[9]*pow(z[1], 3)/pow(z[5], 3.0/2.0) + 3*rear_.R*state_[9]*z[1]/z[6] + state_[9]*z[1]*z[9]);
  z[14] = state_[9]*z[1];
  z[15] = state_[9]*z[2];
  z[16] = -cos(state_[0]);
  z[17] = -z[2];
  z[18] = z[1]*z[3];
  z[19] = -z[17]*z[3];
  z[20] = rear_.R/z[6];
  z[21] = z[0]*z[8];

  m[0] = 0;
  m[1] = 0;
  m[2] = 0;
  m[3] = 0;
  m[4] = 0;
  m[5] = 0;
  m[6] = 0;
  m[7] = 0;
  m[8] = 0;
  m[9] = 0;
  m[10] = 0;
  m[11] = 0;
  m[12] = 0;
  m[13] = 0;
  m[14] = 0;
  m[15] = 0;
  m[16] = 0;
  m[17] = 0;
  m[18] = 0;
  m[19] = 0;
  m[20] = 0;
  m[21] = 0;
  m[22] = 0;
  m[23] = 0;
  m[24] = 0;
  m[25] = 0;
  m[26] = 0;
  m[27] = 0;
  m[28] = 0;
  m[29] = 0;
  m[30] = 0;
  m[31] = 0;
  m[32] = 0;
  m[33] = 0;
  m[34] = 0;
  m[35] = 0;
  m[36] = 0;
  m[37] = 0;
  m[38] = 0;
  m[39] = 0;
  m[40] = 0;
  m[41] = 0;
  m[42] = 0;
  m[43] = 0;
  m[44] = 0;
  m[45] = 0;
  m[46] = 0;
  m[47] = 0;
  m[48] = z[0]*z[19]*z[9] + z[12]*z[16] + z[15]*z[16]*z[20]*z[8];
  m[49] = -z[0]*z[13] + 2*z[0]*z[14]*z[17]*z[20]*z[7] + z[14]*z[20]*z[21] - z[16]*z[18]*z[20] - z[16]*z[18]*z[9];
  m[50] = 0;
  m[51] = 0;
  m[52] = 0;
  m[53] = 0;
  m[54] = 0;
  m[55] = 0;
  m[56] = -z[0]*z[12] - z[15]*z[20]*z[21] + z[16]*z[19]*z[9];
  m[57] = z[0]*z[18]*z[20] + z[0]*z[18]*z[9] - z[13]*z[16] + 2*z[14]*z[16]*z[17]*z[20]*z[7] + z[14]*z[16]*z[20]*z[8];
  m[58] = 0;
  m[59] = 0;
  m[60] = 0;
  m[61] = 0;
  m[62] = 0;
  m[63] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (8, 12)
 *
 * @param[out] a C-array of with 96 elements
 */
//  void Bicycle::f_1_du(double m[96]) const;
void Bicycle::f_1_du(double m[96]) const
{
  double * z = new double[11];

  z[0] = sin(state_[0]);
  z[1] = sin(state_[1]);
  z[2] = cos(state_[0]);
  z[3] = cos(state_[1]);
  z[4] = pow(z[1], 2);
  z[5] = sqrt(pow(z[3], 2));
  z[6] = rear_.R/z[5] + rear_.r;
  z[7] = rear_.R*z[3]*(z[3] + z[4]/z[3])/z[5] + z[1]*(rear_.R*z[1]/z[5] - z[1]*z[6]) - z[3]*(rear_.R*z[4]/(z[3]*z[5]) + z[3]*z[6]);
  z[8] = z[3]*z[6];
  z[9] = z[0]*z[8];
  z[10] = z[2]*z[8];

  m[0] = -1;
  m[1] = 0;
  m[2] = 0;
  m[3] = 0;
  m[4] = 0;
  m[5] = 0;
  m[6] = 0;
  m[7] = 0;
  m[8] = 0;
  m[9] = 0;
  m[10] = 0;
  m[11] = 0;
  m[12] = 0;
  m[13] = -1;
  m[14] = 0;
  m[15] = 0;
  m[16] = 0;
  m[17] = 0;
  m[18] = 0;
  m[19] = 0;
  m[20] = 0;
  m[21] = 0;
  m[22] = 0;
  m[23] = 0;
  m[24] = 0;
  m[25] = 0;
  m[26] = -1;
  m[27] = 0;
  m[28] = 0;
  m[29] = 0;
  m[30] = 0;
  m[31] = 0;
  m[32] = 0;
  m[33] = 0;
  m[34] = 0;
  m[35] = 0;
  m[36] = 0;
  m[37] = 0;
  m[38] = 0;
  m[39] = -1;
  m[40] = 0;
  m[41] = 0;
  m[42] = 0;
  m[43] = 0;
  m[44] = 0;
  m[45] = 0;
  m[46] = 0;
  m[47] = 0;
  m[48] = 0;
  m[49] = 0;
  m[50] = 0;
  m[51] = 0;
  m[52] = -1;
  m[53] = 0;
  m[54] = 0;
  m[55] = 0;
  m[56] = 0;
  m[57] = 0;
  m[58] = 0;
  m[59] = 0;
  m[60] = 0;
  m[61] = 0;
  m[62] = 0;
  m[63] = 0;
  m[64] = 0;
  m[65] = -1;
  m[66] = 0;
  m[67] = 0;
  m[68] = 0;
  m[69] = 0;
  m[70] = 0;
  m[71] = 0;
  m[72] = 0;
  m[73] = -z[0]*z[7];
  m[74] = z[10];
  m[75] = 0;
  m[76] = z[10];
  m[77] = 0;
  m[78] = 0;
  m[79] = 0;
  m[80] = 0;
  m[81] = 0;
  m[82] = 0;
  m[83] = 0;
  m[84] = 0;
  m[85] = z[2]*z[7];
  m[86] = z[9];
  m[87] = 0;
  m[88] = z[9];
  m[89] = 0;
  m[90] = 0;
  m[91] = 0;
  m[92] = 0;
  m[93] = 0;
  m[94] = 0;
  m[95] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (12, 12)
 *
 * @param[out] a C-array of with 144 elements
 */
//  void Bicycle::gif_dud(double m[144]) const;
void Bicycle::gif_dud(double m[144]) const
{
  double * z = new double[154];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = pow(front_.r, 2);
  z[7] = pow(z[0], 2);
  z[8] = pow(z[1], 2);
  z[9] = pow(z[2], 2);
  z[10] = pow(z[3], 2);
  z[11] = pow(z[4], 2);
  z[12] = sqrt(z[10]);
  z[13] = rear_.Ixx*z[4] + rear_.Ixz*z[1];
  z[14] = rear_.Ixz*z[4] + rear_.Izz*z[1];
  z[15] = rear_.a*z[4] + rear_.b*z[1];
  z[16] = rear_.Ixx*z[1] - rear_.Ixz*z[4];
  z[17] = rear_.Ixz*z[1] - rear_.Izz*z[4];
  z[18] = rear_.R/z[12] + rear_.r;
  z[19] = rear_.a*z[1] - rear_.b*z[4];
  z[20] = front_.Ixx*z[4]*z[5] + front_.Ixz*z[1];
  z[21] = front_.Ixz*z[4]*z[5] + front_.Izz*z[1];
  z[22] = pow(z[18], 2);
  z[23] = -z[18];
  z[24] = z[0]*z[5] + z[1]*z[2]*z[3];
  z[25] = rear_.a*z[3]*z[4] + rear_.b*z[1]*z[3];
  z[26] = z[0]*z[1]*z[5] + z[2]*z[3];
  z[27] = -z[0]*z[2] + z[1]*z[3]*z[5];
  z[28] = -z[27];
  z[29] = -z[0]*z[1]*z[2] + z[3]*z[5];
  z[30] = -z[29];
  z[31] = rear_.R*z[1]*z[3]/z[12] + rear_.a;
  z[32] = rear_.R*z[3]*z[4]/z[12] - rear_.b;
  z[33] = rear_.R*z[0]*z[1]*z[3]/z[12] + rear_.a*z[0];
  z[34] = rear_.R*z[0]*z[3]*z[4]/z[12] - rear_.b*z[0];
  z[35] = front_.Iyy*z[24]*z[5] + rear_.Iyy*z[0];
  z[36] = front_.Ixx*z[28] + front_.Ixz*z[3]*z[4];
  z[37] = front_.Ixz*z[28] + front_.Izz*z[3]*z[4];
  z[38] = z[19] - z[23]*z[3];
  z[39] = z[0]*z[30] - z[1]*z[2];
  z[40] = front_.a*z[3]*z[4] - front_.b*z[28];
  z[41] = z[1]*z[28] - z[11]*z[3]*z[5];
  z[42] = front_.r*z[0]*z[11]*z[5] + front_.r*z[1]*z[26];
  z[43] = front_.r*z[11]*z[9] + front_.r*pow(z[30], 2);
  z[44] = -z[0]*z[11]*z[2] - z[1]*z[30];
  z[45] = -front_.r*z[0]*z[11]*z[2] - front_.r*z[1]*z[30];
  z[46] = z[0]*z[28] + z[26]*z[3];
  z[47] = z[2]*z[26] - z[30]*z[5];
  z[48] = z[1]*z[31] + z[32]*z[4];
  z[49] = front_.R*z[3]*z[4]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.b;
  z[50] = -rear_.J + rear_.m*z[23]*z[3]*z[38];
  z[51] = -front_.r*z[2]*z[26]*z[4] + front_.r*z[30]*z[4]*z[5];
  z[52] = front_.R*z[2]*z[3]*z[4]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.b*z[2];
  z[53] = front_.R*z[3]*z[4]*z[5]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.b*z[5];
  z[54] = rear_.a*z[33] - rear_.b*z[34];
  z[55] = front_.R*z[11]*z[2]*z[3]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.b*z[2]*z[4];
  z[56] = -z[1]*z[33] - z[34]*z[4];
  z[57] = front_.R*z[28]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.a;
  z[58] = front_.R*z[28]*z[5]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.a*z[5];
  z[59] = front_.R*z[2]*z[28]*z[4]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.a*z[2]*z[4];
  z[60] = front_.R*z[24]*z[3]*z[4]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.b*z[24];
  z[61] = -(z[11]*z[2]*z[5] + z[26]*z[30])/sqrt(z[11]*z[9] + pow(z[30], 2));
  z[62] = front_.R*z[24]*z[28]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.a*z[24];
  z[63] = front_.R*z[1]*z[28]/sqrt(z[10]*z[11] + pow(z[28], 2)) - front_.R*z[11]*z[3]*z[5]/sqrt(z[10]*z[11] + pow(z[28], 2));
  z[64] = rear_.R*z[0]*z[1]*z[34]/z[12] - rear_.R*z[0]*z[33]*z[4]/z[12] + z[19]*z[25];
  z[65] = front_.R*z[0]*z[28]*z[4]/sqrt(z[10]*z[11] + pow(z[28], 2)) + front_.R*z[26]*z[3]*z[4]/sqrt(z[10]*z[11] + pow(z[28], 2));
  z[66] = -front_.a*z[1] + front_.b*z[4]*z[5] + z[63];
  z[67] = z[1]*z[58] - z[2]*z[4]*z[52] - z[4]*z[5]*z[53];
  z[68] = -front_.r*z[2]*z[3]*z[4]*z[57] - z[0]*z[3]*z[4]*z[6] - z[52]*z[57];
  z[69] = -z[0]*z[4]*z[58] - z[26]*z[53] - z[30]*z[52];
  z[70] = z[1]*z[62] - z[2]*z[4]*z[40] - z[4]*z[5]*z[60];
  z[71] = front_.R*z[28]*z[59]/sqrt(z[10]*z[11] + pow(z[28], 2)) + front_.R*z[3]*z[4]*z[55]/sqrt(z[10]*z[11] + pow(z[28], 2)) + z[2]*z[4]*z[6];
  z[72] = front_.R*z[28]*z[58]/sqrt(z[10]*z[11] + pow(z[28], 2)) + front_.R*z[3]*z[4]*z[53]/sqrt(z[10]*z[11] + pow(z[28], 2)) - z[3]*z[30]*z[6];
  z[73] = -z[0]*z[4]*z[62] - z[26]*z[60] - z[30]*z[40];
  z[74] = -z[1]*z[59] + z[2]*z[4]*z[66] + z[4]*z[5]*z[55];
  z[75] = front_.R*z[28]*z[62]/sqrt(z[10]*z[11] + pow(z[28], 2)) + front_.R*z[3]*z[4]*z[60]/sqrt(z[10]*z[11] + pow(z[28], 2));
  z[76] = front_.r*z[30]*z[57] + z[1]*z[6] + z[57]*z[66];
  z[77] = z[0]*z[4]*z[59] + z[26]*z[55] + z[30]*z[66];
  z[78] = z[40]*z[52] + z[53]*z[60] + z[58]*z[62];
  z[79] = z[52]*z[66] + z[53]*z[55] + z[58]*z[59];
  z[80] = -rear_.b;
  z[81] = -front_.m;
  z[82] = -rear_.m;
  z[83] = -front_.r;
  z[84] = front_.Ixz*z[2];
  z[85] = front_.Iyy*z[2];
  z[86] = front_.J*z[5];
  z[87] = rear_.J*z[0];
  z[88] = rear_.a*z[0];
  z[89] = rear_.a*z[4];
  z[90] = -z[1]*z[80];
  z[91] = -z[4]*z[83];
  z[92] = -z[1];
  z[93] = -z[2];
  z[94] = -z[4];
  z[95] = -z[0]*z[93];
  z[96] = z[0]*z[3];
  z[97] = z[92]*z[93];
  z[98] = -z[3]*z[92];
  z[99] = -z[3]*z[93];
  z[100] = z[93]*z[94];
  z[101] = -z[3]*z[94];
  z[102] = z[3]*z[5];
  z[103] = -z[5]*z[94];
  z[104] = rear_.R/z[3];
  z[105] = -z[11]*z[83];
  z[106] = front_.J*z[100];
  z[107] = -z[11];
  z[108] = -z[107]*z[3];
  z[109] = rear_.R/z[12];
  z[110] = pow(rear_.R, 2)/z[10];
  z[111] = z[103]*z[85];
  z[112] = -1/z[12];
  z[113] = -z[112]*z[3];
  z[114] = z[7]*z[8];
  z[115] = -z[107]*z[7];
  z[116] = -z[107]*z[9];
  z[117] = -z[10]*z[107];
  z[118] = -z[23]*z[3];
  z[119] = z[19]*z[3];
  z[120] = -z[15]*z[3]*z[82];
  z[121] = front_.J*z[24];
  z[122] = -z[26]*z[83];
  z[123] = -z[30]*z[83];
  z[124] = z[10]*z[22];
  z[125] = -z[123]*z[3];
  z[126] = z[0]*z[33];
  z[127] = z[12]*z[23]*z[82];
  z[128] = -z[112]*z[15]*z[82]*z[96];
  z[129] = z[0]*z[34];
  z[130] = z[118]*z[19];
  z[131] = front_.R/sqrt(z[117] + pow(z[28], 2));
  z[132] = -z[94]/sqrt(z[116] + pow(z[30], 2));
  z[133] = pow(front_.R, 2)/(z[117] + pow(z[28], 2));
  z[134] = -z[113]*z[38]*z[82];
  z[135] = -z[49]*z[93];
  z[136] = z[0]*z[82]*(z[108]*z[109] + z[109]*z[3]*z[8] + z[19]);
  z[137] = z[39]/sqrt(z[116] + pow(z[30], 2));
  z[138] = -z[107]*z[57];
  z[139] = z[82]*z[96]*(z[15] + z[31]*z[94] - z[32]*z[92]);
  z[140] = -z[137]*z[81]*z[91];
  z[141] = -z[24]*z[57]*z[81];
  z[142] = z[113]*z[82]*(z[10]*z[15] - z[31]*z[7]*z[94] + z[32]*z[7]*z[92]);
  z[143] = z[47]*z[49];
  z[144] = -z[40]*z[57];
  z[145] = -z[49]*z[61];
  z[146] = z[40]*z[66];
  z[147] = z[59]*z[62];
  z[148] = z[24]*z[81]*(z[101]*z[57] - z[28]*z[49] + z[40]);
  z[149] = z[81]*(z[101]*z[5]*z[57] + z[135]*z[24] - z[28]*z[49]*z[5]);
  z[150] = -z[69]*z[83];
  z[151] = -z[73]*z[83];
  z[152] = z[81]*(z[100]*z[28]*z[49] - z[138]*z[99] - z[24]*z[66]);
  z[153] = -z[77]*z[83];

  m[0] = -front_.Iyy*pow(z[24], 2) - rear_.Iyy*z[7] + z[10]*z[16]*z[92] - z[10]*z[17]*z[94] - z[101]*z[37] - z[28]*z[36] + z[81]*(pow(z[40], 2) + pow(z[60], 2) + pow(z[62], 2)) + z[82]*(pow(z[25], 2) + pow(z[33], 2) + pow(z[34], 2));
  m[1] = -z[101]*z[14] - z[101]*z[21] + z[13]*z[98] - z[20]*z[28] - z[24]*z[85]*z[94] + z[81]*(-z[146] - z[147] + z[151] - z[55]*z[60]) + z[82]*(-z[23]*(-z[126]*z[94] + z[129]*z[92] + z[25]*z[3]) + z[64]);
  m[2] = front_.Ixx*z[28]*z[93] - z[101]*z[84] - z[35] + z[81]*(z[3]*z[70]*z[83] + z[78]) + z[82]*(-z[118]*z[56] + z[54]);
  m[3] = -z[37] + z[81]*(z[0]*z[70]*z[91] + z[144] - z[151]*z[92]);
  m[4] = -z[118]*z[56]*z[82] - z[87];
  m[5] = -z[121] + z[81]*(z[123]*z[70] + z[73]*z[91]*z[93] + z[75]);
  m[6] = -z[0]*z[113]*z[48]*z[82];
  m[7] = z[142];
  m[8] = z[139];
  m[9] = -z[81]*(-z[100]*z[73] + z[30]*z[70])/sqrt(z[116] + pow(z[30], 2));
  m[10] = -z[81]*(z[100]*z[70] + z[30]*z[73])/sqrt(z[116] + pow(z[30], 2));
  m[11] = z[148];
  m[12] = z[101]*z[16] - z[103]*z[36] + z[17]*z[98] - z[24]*z[85]*z[94] + z[37]*z[92] + z[81]*(-z[0]*z[62]*z[91] - z[122]*z[60] - z[123]*z[40] - z[146] - z[147] - z[55]*z[60]) + z[82]*(z[118]*z[25] + z[126]*z[23]*z[94] - z[129]*z[23]*z[92] + z[64]);
  m[13] = -front_.Iyy*z[116] - z[103]*z[20] + z[13]*z[94] + z[14]*z[92] + z[21]*z[92] + z[81]*(z[0]*z[59]*z[91] + z[122]*z[55] + z[123]*z[66] + z[153] + pow(z[55], 2) + pow(z[59], 2) + z[6] + pow(z[66], 2)) + z[82]*(z[109]*z[114]*z[23] + z[109]*z[115]*z[23] + z[110]*z[114] + z[110]*z[115] + z[130] + pow(z[19], 2) + z[22] + z[23]*(z[109]*z[114] + z[109]*z[115] - z[119]));
  m[14] = -front_.Ixx*z[100]*z[5] + front_.Ixz*z[1]*z[93] - z[0]*z[82]*(z[109]*z[89] + z[109]*z[90] + z[23]*z[89] + z[23]*z[90]) + z[111] + z[81]*(-z[0]*z[58]*z[91] - z[122]*z[53] - z[123]*z[52] + z[3]*z[74]*z[83] - z[79]);
  m[15] = -z[21] + z[81]*(z[0]*z[74]*z[91] - z[153]*z[92] + z[76]);
  m[16] = 0;
  m[17] = z[106] + z[81]*(-z[0]*z[131]*z[28]*z[91] + z[123]*z[74] - z[131]*z[26]*z[3]*z[91] - z[71] + z[77]*z[91]*z[93]);
  m[18] = 0;
  m[19] = z[113]*z[82]*(-z[109]*z[114] - z[109]*z[115] + z[119] - z[23]);
  m[20] = z[136];
  m[21] = z[81]*(z[100]*z[77] - z[30]*z[74] - z[91]*z[93])/sqrt(z[116] + pow(z[30], 2));
  m[22] = -z[81]*(z[100]*z[74] + z[123] + z[30]*z[77])/sqrt(z[116] + pow(z[30], 2));
  m[23] = z[152];
  m[24] = -z[35] + z[36]*z[93] + z[81]*(z[102]*z[60]*z[91] + z[40]*z[91]*z[99] + z[62]*z[83]*z[98] + z[78]) + z[82]*(-z[101]*z[23]*z[34] - z[23]*z[33]*z[98] + z[54]);
  m[25] = z[111] + z[20]*z[93] + z[81]*(-z[102]*z[55]*z[91] + z[150] - z[59]*z[83]*z[98] - z[66]*z[91]*z[99] - z[79]) - z[82]*(z[0]*z[109]*z[90] - z[109]*z[88]*z[94] + z[23]*(z[0]*z[90] - z[88]*z[94]));
  m[26] = -front_.Ixx*z[9] - front_.Iyy*pow(z[5], 2) - rear_.Iyy + z[81]*(z[10]*z[6] + z[102]*z[53]*z[91] + z[3]*z[67]*z[83] + pow(z[52], 2) + z[52]*z[91]*z[99] + pow(z[53], 2) + pow(z[58], 2) + z[58]*z[83]*z[98]) + z[82]*(pow(rear_.a, 2) + rear_.a*z[1]*z[118] - z[118]*z[80]*z[94] + z[124] + z[130] + pow(z[80], 2));
  m[27] = z[81]*(z[0]*z[67]*z[91] - z[150]*z[92] + z[68]) - z[84];
  m[28] = z[50];
  m[29] = z[81]*(z[10]*z[105]*z[131]*z[5] + z[123]*z[67] + z[131]*z[28]*z[83]*z[98] + z[69]*z[91]*z[93] + z[72]) - z[86];
  m[30] = z[134];
  m[31] = z[128];
  m[32] = z[120];
  m[33] = -z[81]*(-z[100]*z[69] + z[125] + z[30]*z[67])/sqrt(z[116] + pow(z[30], 2));
  m[34] = z[81]*(-z[100]*z[67] - z[30]*z[69] + z[91]*z[99])/sqrt(z[116] + pow(z[30], 2));
  m[35] = z[149];
  m[36] = -z[37] + z[81]*(z[144] + z[40]*z[45] - z[42]*z[60]);
  m[37] = -z[21] + z[81]*(z[42]*z[55] - z[45]*z[66] + z[76]);
  m[38] = z[81]*(-z[42]*z[53] + z[45]*z[52] + z[68]) - z[84];
  m[39] = -front_.Izz + z[81]*(z[105]*z[57]*z[95] + z[115]*z[6] - z[123]*z[57]*z[92] - z[45]*z[57] + pow(z[57], 2) + z[6]*z[8]);
  m[40] = 0;
  m[41] = -z[81]*z[91]*(-z[0]*z[123] + z[131]*z[3]*(-z[0]*z[107]*z[5] - z[26]*z[92]) - z[83]*z[97]);
  m[42] = 0;
  m[43] = 0;
  m[44] = 0;
  m[45] = z[140];
  m[46] = -z[81]*(z[116]*z[57] + pow(z[30], 2)*z[57] - z[45])/sqrt(z[116] + pow(z[30], 2));
  m[47] = z[141];
  m[48] = -z[118]*z[56]*z[82] - z[87];
  m[49] = 0;
  m[50] = z[50];
  m[51] = 0;
  m[52] = -rear_.J + z[124]*z[82];
  m[53] = 0;
  m[54] = z[127];
  m[55] = 0;
  m[56] = 0;
  m[57] = 0;
  m[58] = 0;
  m[59] = 0;
  m[60] = -z[121] + z[81]*(-z[45]*z[62] - z[51]*z[60] + z[75]);
  m[61] = z[106] + z[81]*(z[45]*z[59] + z[51]*z[55] + z[65]*z[83] - z[71]);
  m[62] = z[81]*(z[3]*z[63]*z[83] - z[45]*z[58] - z[51]*z[53] + z[72]) - z[86];
  m[63] = z[81]*z[91]*(z[0]*z[123] + z[0]*z[131]*z[41] + z[131]*z[46]*z[92] + z[83]*z[97]);
  m[64] = 0;
  m[65] = -front_.J + z[81]*(-z[101]*z[131]*z[51] + z[116]*z[6] + z[117]*z[133] + z[123]*z[63] - z[131]*z[28]*z[45] + z[133]*pow(z[28], 2) + pow(z[30], 2)*z[6] - z[65]*z[91]*z[93]);
  m[66] = 0;
  m[67] = 0;
  m[68] = 0;
  m[69] = -z[81]*(z[107]*z[131]*z[46]*z[93] + z[131]*z[30]*z[41] + z[43])/sqrt(z[116] + pow(z[30], 2));
  m[70] = z[131]*z[132]*z[81]*(z[30]*z[46] + z[41]*z[93]);
  m[71] = 0;
  m[72] = z[112]*z[48]*z[82]*z[96];
  m[73] = 0;
  m[74] = z[134];
  m[75] = 0;
  m[76] = z[127];
  m[77] = 0;
  m[78] = z[82];
  m[79] = 0;
  m[80] = 0;
  m[81] = 0;
  m[82] = 0;
  m[83] = 0;
  m[84] = z[142];
  m[85] = -z[82]*(z[104]*z[114] + z[104]*z[115] + z[113]*z[23] - z[12]*z[19]);
  m[86] = z[128];
  m[87] = 0;
  m[88] = 0;
  m[89] = 0;
  m[90] = 0;
  m[91] = z[82];
  m[92] = 0;
  m[93] = 0;
  m[94] = 0;
  m[95] = 0;
  m[96] = z[139];
  m[97] = z[136];
  m[98] = z[120];
  m[99] = 0;
  m[100] = 0;
  m[101] = 0;
  m[102] = 0;
  m[103] = 0;
  m[104] = z[82];
  m[105] = 0;
  m[106] = 0;
  m[107] = 0;
  m[108] = -z[24]*z[81]*(-z[143]*z[94] - z[44]*z[57])/sqrt(z[116] + pow(z[30], 2));
  m[109] = z[100]*z[81]*(z[132]*z[47]*z[49] - z[44]*z[57]/sqrt(z[116] + pow(z[30], 2)) - z[83]/sqrt(z[116] + pow(z[30], 2)));
  m[110] = -z[81]*(z[103]*z[143] + z[125] - z[44]*z[5]*z[57])/sqrt(z[116] + pow(z[30], 2));
  m[111] = z[140];
  m[112] = 0;
  m[113] = -z[81]*(z[108]*z[131]*z[47] - z[131]*z[28]*z[44] + z[43])/sqrt(z[116] + pow(z[30], 2));
  m[114] = 0;
  m[115] = 0;
  m[116] = 0;
  m[117] = z[81];
  m[118] = 0;
  m[119] = 0;
  m[120] = z[81]*(z[132]*z[24]*z[39]*z[57] + z[145]*z[24] + z[40]*sqrt(z[116] + pow(z[30], 2)));
  m[121] = z[81]*(z[100]*z[49]*(-z[107]*z[5]*z[93] - z[26]*z[30])/sqrt(z[116] + pow(z[30], 2)) - z[123]/sqrt(z[116] + pow(z[30], 2)) + z[137]*z[138]*z[93] - z[66]*sqrt(z[116] + pow(z[30], 2)));
  m[122] = z[81]*(z[103]*z[137]*z[57] + z[135]*sqrt(z[116] + pow(z[30], 2)) + z[145]*z[5] + z[91]*z[99]/sqrt(z[116] + pow(z[30], 2)));
  m[123] = z[81]*(-z[105]*z[95]/sqrt(z[116] + pow(z[30], 2)) + z[123]*z[92]/sqrt(z[116] + pow(z[30], 2)) - z[57]*sqrt(z[116] + pow(z[30], 2)));
  m[124] = 0;
  m[125] = -z[131]*z[81]*z[94]*(z[137]*z[28] - z[3]*z[61]);
  m[126] = 0;
  m[127] = 0;
  m[128] = 0;
  m[129] = 0;
  m[130] = z[81];
  m[131] = 0;
  m[132] = z[148];
  m[133] = z[152];
  m[134] = z[149];
  m[135] = z[141];
  m[136] = 0;
  m[137] = 0;
  m[138] = 0;
  m[139] = 0;
  m[140] = 0;
  m[141] = 0;
  m[142] = 0;
  m[143] = z[81];

  delete [] z;
}

/** Computes the n-d array of shape (12)
 *
 * @param[out] a C-array of with 12 elements
 */
//  void Bicycle::gif_ud_zero(double m[12]) const;
void Bicycle::gif_ud_zero(double m[12]) const
{
  double * z = new double[119];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = pow(z[0], 2);
  z[7] = pow(z[2], 2);
  z[8] = pow(z[3], 2);
  z[9] = pow(z[4], 2);
  z[10] = state_[10] + state_[8]*z[0];
  z[11] = sqrt(z[8]);
  z[12] = pow(z[10], 2);
  z[13] = state_[10]*z[3] + state_[12]*z[3];
  z[14] = rear_.a*z[1] - rear_.b*z[4];
  z[15] = state_[8]*z[3]*z[4] + state_[9]*z[1];
  z[16] = state_[8]*z[1]*z[3] - state_[9]*z[4];
  z[17] = state_[11] + z[15];
  z[18] = -rear_.R/z[11] - rear_.r;
  z[19] = z[0]*z[5] + z[1]*z[2]*z[3];
  z[20] = rear_.a*z[3]*z[4] + rear_.b*z[1]*z[3];
  z[21] = -z[15];
  z[22] = z[0]*z[1]*z[5] + z[2]*z[3];
  z[23] = -z[0]*z[2] + z[1]*z[3]*z[5];
  z[24] = -z[23];
  z[25] = -z[0]*z[1]*z[2] + z[3]*z[5];
  z[26] = -z[25];
  z[27] = rear_.R*z[0]*z[1]*z[3]/z[11] + rear_.a*z[0];
  z[28] = rear_.R*z[0]*z[3]*z[4]/z[11] - rear_.b*z[0];
  z[29] = state_[10]*state_[11]*z[4] + state_[10]*state_[13]*z[1]*z[2] - state_[11]*state_[13]*z[4]*z[5];
  z[30] = -state_[10]*state_[8]*z[1]*z[3] + state_[10]*state_[9]*z[4] - state_[8]*state_[9]*z[0]*z[4];
  z[31] = -state_[10]*state_[8]*z[3]*z[4] - state_[10]*state_[9]*z[1] + state_[8]*state_[9]*z[0]*z[1];
  z[32] = front_.a*z[3]*z[4] - front_.b*z[24];
  z[33] = -rear_.a*z[21] + rear_.b*z[16];
  z[34] = -state_[10]*z[5] - state_[8]*z[19] + state_[9]*z[2]*z[4];
  z[35] = -rear_.Ixx*z[16] - rear_.Ixz*z[21];
  z[36] = -rear_.Ixz*z[16] - rear_.Izz*z[21];
  z[37] = -state_[10]*z[2] - state_[8]*z[24] - state_[9]*z[4]*z[5];
  z[38] = -front_.r*z[0]*z[2]*z[9] - front_.r*z[1]*z[26];
  z[39] = -state_[10]*z[3]*z[4]*z[5] + state_[11]*z[0]*z[5] + state_[11]*z[1]*z[2]*z[3] + state_[9]*z[0]*z[1]*z[5] + state_[9]*z[2]*z[3];
  z[40] = front_.R*z[2]*z[3]*z[4]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.b*z[2];
  z[41] = front_.R*z[3]*z[4]*z[5]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.b*z[5];
  z[42] = -state_[10]*z[0]*z[2]*z[4] - state_[11]*z[0]*z[1]*z[5] - state_[11]*z[2]*z[3] - state_[9]*z[0]*z[5] - state_[9]*z[1]*z[2]*z[3];
  z[43] = -front_.Ixx*z[37] + front_.Ixz*z[17];
  z[44] = -front_.Ixz*z[37] + front_.Izz*z[17];
  z[45] = front_.a*z[17] + front_.b*z[37];
  z[46] = front_.R*z[2]*z[3]*z[9]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.b*z[2]*z[4];
  z[47] = front_.R*z[24]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.a;
  z[48] = front_.R*z[24]*z[5]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.a*z[5];
  z[49] = rear_.R*pow(state_[9], 2)*z[0]/(z[11]*z[3]) + state_[8]*(state_[14]*z[3]/z[11] + z[13]*z[18]);
  z[50] = front_.R*z[2]*z[24]*z[4]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.a*z[2]*z[4];
  z[51] = -state_[10]*state_[11]*z[0]*z[1] + state_[10]*state_[9]*z[0] + state_[11]*state_[9]*z[3]*z[4] - state_[13]*z[42];
  z[52] = -state_[10]*state_[8]*z[3]*z[4]*z[5] - state_[10]*state_[9]*z[1]*z[5] + state_[11]*z[10]*z[5] + state_[11]*z[16]*z[2] + state_[8]*state_[9]*z[22];
  z[53] = state_[10]*state_[11]*z[5] - state_[10]*state_[9]*z[1]*z[5] - state_[11]*state_[9]*z[2]*z[4] + state_[8]*z[39];
  z[54] = state_[10]*state_[8]*z[2]*z[3]*z[4] + state_[10]*state_[9]*z[1]*z[2] - state_[11]*z[10]*z[2] + state_[11]*z[16]*z[5] - state_[8]*state_[9]*z[26];
  z[55] = state_[10]*state_[11]*z[2] - state_[10]*state_[9]*z[1]*z[2] + state_[11]*state_[9]*z[4]*z[5] - state_[8]*(state_[10]*z[2]*z[3]*z[4] - state_[11]*z[0]*z[2] + state_[11]*z[1]*z[3]*z[5] - state_[9]*z[0]*z[1]*z[2] + state_[9]*z[3]*z[5]);
  z[56] = front_.R*z[19]*z[3]*z[4]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.b*z[19];
  z[57] = front_.R*z[19]*z[24]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.a*z[19];
  z[58] = -rear_.R*state_[9]*z[0]*z[13]/(z[11]*z[3]) - state_[8]*(state_[15]*z[3]/z[11] - state_[9]*z[18]) - z[18]*(state_[10]*state_[9]*z[0] + state_[12]*state_[9]*z[0]);
  z[59] = state_[10]*z[1]*z[4]*z[7] - state_[11]*z[2]*z[5]*z[9] + z[26]*z[42];
  z[60] = state_[10]*z[1]*z[4]*z[8] + state_[9]*z[0]*z[3]*z[9] - z[24]*z[39];
  z[61] = 2*state_[10]*z[1]*z[4]*z[7] - 2*state_[11]*z[2]*z[5]*z[9] - z[26]*(2*state_[10]*z[0]*z[2]*z[4] + 2*state_[11]*z[0]*z[1]*z[5] + 2*state_[11]*z[2]*z[3] + 2*state_[9]*z[0]*z[5] + 2*state_[9]*z[1]*z[2]*z[3]);
  z[62] = 2*state_[10]*z[1]*z[4]*z[8] + 2*state_[9]*z[0]*z[3]*z[9] - z[24]*(-2*state_[10]*z[3]*z[4]*z[5] + 2*state_[11]*z[0]*z[5] + 2*state_[11]*z[1]*z[2]*z[3] + 2*state_[9]*z[0]*z[1]*z[5] + 2*state_[9]*z[2]*z[3]);
  z[63] = front_.R*z[1]*z[24]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[3]*z[5]*z[9]/sqrt(pow(z[24], 2) + z[8]*z[9]);
  z[64] = rear_.Iyy*state_[8]*state_[9]*z[3] + z[16]*z[36] - z[21]*z[35];
  z[65] = front_.r*(state_[11]*z[1] - state_[13]*z[2]*z[4] + state_[9]) + state_[17]*z[2]*z[4]/sqrt(pow(z[26], 2) + z[7]*z[9]) - state_[18]*z[26]/sqrt(pow(z[26], 2) + z[7]*z[9]);
  z[66] = -front_.a*z[1] + front_.b*z[4]*z[5] + z[63];
  z[67] = -front_.r*(state_[10]*z[3] - state_[11]*z[0]*z[4] - state_[13]*z[26]) - state_[17]*z[26]/sqrt(pow(z[26], 2) + z[7]*z[9]) - state_[18]*z[2]*z[4]/sqrt(pow(z[26], 2) + z[7]*z[9]);
  z[68] = front_.R*z[17]*z[24]/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.R*z[3]*z[37]*z[4]/sqrt(pow(z[24], 2) + z[8]*z[9]);
  z[69] = rear_.Ixx*z[31] + rear_.Ixz*z[30] + rear_.Iyy*z[10]*z[21] + rear_.J*state_[12]*z[21] + z[10]*z[36];
  z[70] = rear_.Ixz*z[31] - rear_.Iyy*z[10]*z[16] + rear_.Izz*z[30] - rear_.J*state_[12]*z[16] - z[10]*z[35];
  z[71] = -rear_.R*z[0]*pow(z[16], 2)/z[11] - rear_.R*z[0]*pow(z[21], 2)/z[11] - rear_.a*z[10]*z[16] + rear_.a*z[30] - rear_.b*z[10]*z[21] - rear_.b*z[31];
  z[72] = -rear_.R*z[0]*pow(z[16], 2)/z[11] - rear_.R*z[0]*pow(z[21], 2)/z[11] - rear_.a*z[10]*z[16] + rear_.a*z[30] - rear_.b*z[10]*z[21] - rear_.b*z[31];
  z[73] = rear_.R*state_[9]*z[16]*z[3]/z[11] + rear_.R*state_[9]*z[16]*z[6]/(z[11]*z[3]) + rear_.R*z[0]*z[10]*z[21]/z[11] - rear_.R*z[0]*z[31]/z[11] + rear_.a*state_[8]*state_[9]*z[3] + rear_.b*z[12] + z[16]*z[33];
  z[74] = rear_.R*state_[9]*z[21]*z[3]/z[11] + rear_.R*state_[9]*z[21]*z[6]/(z[11]*z[3]) - rear_.R*z[0]*z[10]*z[16]/z[11] - rear_.R*z[0]*z[30]/z[11] - rear_.a*z[12] + rear_.b*state_[8]*state_[9]*z[3] + z[21]*z[33];
  z[75] = -z[73];
  z[76] = rear_.R*state_[9]*z[21]*z[3]/z[11] + rear_.R*state_[9]*z[21]*z[6]/(z[11]*z[3]) - rear_.R*z[0]*z[10]*z[16]/z[11] - rear_.R*z[0]*z[30]/z[11] - rear_.a*z[12] + rear_.b*state_[8]*state_[9]*z[3] + z[21]*z[33];
  z[77] = -z[73];
  z[78] = front_.Iyy*z[54] + z[17]*z[43] + z[37]*z[44];
  z[79] = front_.Ixx*z[52] + front_.Ixz*z[30] + front_.Iyy*z[17]*z[34] - front_.J*state_[13]*z[17] - z[34]*z[44];
  z[80] = front_.Ixz*z[52] + front_.Iyy*z[34]*z[37] + front_.Izz*z[30] - front_.J*state_[13]*z[37] + z[34]*z[43];
  z[81] = front_.r*z[29] - state_[10]*state_[17]*z[1]*z[2]/sqrt(pow(z[26], 2) + z[7]*z[9]) + state_[11]*state_[17]*z[4]*z[5]/sqrt(pow(z[26], 2) + z[7]*z[9]) + state_[17]*z[2]*z[4]*z[59]/pow(pow(z[26], 2) + z[7]*z[9], 3.0/2.0) - state_[18]*z[26]*z[59]/pow(pow(z[26], 2) + z[7]*z[9], 3.0/2.0) + state_[18]*z[42]/sqrt(pow(z[26], 2) + z[7]*z[9]) + state_[8]*z[67];
  z[82] = front_.r*z[51] + state_[10]*state_[18]*z[1]*z[2]/sqrt(pow(z[26], 2) + z[7]*z[9]) - state_[11]*state_[18]*z[4]*z[5]/sqrt(pow(z[26], 2) + z[7]*z[9]) - state_[17]*z[26]*z[59]/pow(pow(z[26], 2) + z[7]*z[9], 3.0/2.0) + state_[17]*z[42]/sqrt(pow(z[26], 2) + z[7]*z[9]) - state_[18]*z[2]*z[4]*z[59]/pow(pow(z[26], 2) + z[7]*z[9], 3.0/2.0) - state_[8]*z[65];
  z[83] = -front_.R*state_[10]*z[1]*z[3]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*state_[9]*z[0]*z[4]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.R*z[24]*z[34]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[3]*z[4]*z[55]/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.R*z[3]*z[4]*z[60]*(state_[13] - z[34])/pow(pow(z[24], 2) + z[8]*z[9], 3.0/2.0) + front_.a*pow(z[34], 2) - front_.b*z[54] + z[17]*z[45] - z[17]*z[68];
  z[84] = front_.R*z[24]*z[55]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[24]*z[60]*(state_[13] - z[34])/pow(pow(z[24], 2) + z[8]*z[9], 3.0/2.0) + front_.R*z[3]*z[34]*z[4]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[39]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.a*z[54] + front_.b*pow(z[34], 2) + z[37]*z[45] - z[37]*z[68];
  z[85] = -front_.R*z[24]*z[55]/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.R*z[24]*z[62]*(state_[13] - z[34])/(2*pow(pow(z[24], 2) + z[8]*z[9], 3.0/2.0)) - front_.R*z[3]*z[34]*z[4]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.R*z[39]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.a*z[54] - front_.b*pow(z[34], 2) - z[37]*z[45] + z[37]*z[68];
  z[86] = front_.R*state_[10]*z[1]*z[3]*z[37]/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.R*state_[9]*z[0]*z[37]*z[4]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[17]*z[24]*z[60]/pow(pow(z[24], 2) + z[8]*z[9], 3.0/2.0) - front_.R*z[17]*z[3]*z[4]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[17]*z[39]/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[24]*z[30]/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.R*z[24]*z[37]*(state_[13] - z[34])/sqrt(pow(z[24], 2) + z[8]*z[9]) - front_.R*z[3]*z[37]*z[4]*z[60]/pow(pow(z[24], 2) + z[8]*z[9], 3.0/2.0) + front_.R*z[3]*z[4]*z[53]/sqrt(pow(z[24], 2) + z[8]*z[9]) + front_.a*z[30] + front_.a*z[34]*z[37] - front_.b*z[17]*z[34] - front_.b*z[52];
  z[87] = -front_.a;
  z[88] = -front_.b;
  z[89] = -rear_.b;
  z[90] = -front_.m;
  z[91] = -rear_.m;
  z[92] = -front_.r;
  z[93] = -state_[13];
  z[94] = -state_[8];
  z[95] = state_[10]*z[2];
  z[96] = state_[11]*z[4];
  z[97] = -z[0];
  z[98] = -z[1];
  z[99] = -z[2];
  z[100] = -z[4];
  z[101] = -z[5];
  z[102] = z[97]*z[98];
  z[103] = z[100]*z[97];
  z[104] = z[100]*z[99];
  z[105] = -z[100]*z[3];
  z[106] = z[100]*z[101];
  z[107] = rear_.R/z[11];
  z[108] = z[3]/z[11];
  z[109] = -z[18]*z[3];
  z[110] = -z[22]*z[92];
  z[111] = -z[26]*z[92];
  z[112] = front_.R/sqrt(pow(z[24], 2) + z[8]*z[9]);
  z[113] = state_[17]/sqrt(pow(z[26], 2) + z[7]*z[9]);
  z[114] = state_[18]/sqrt(pow(z[26], 2) + z[7]*z[9]);
  z[115] = z[112]*z[24];
  z[116] = -z[81]*z[92];
  z[117] = z[26]*z[81];
  z[118] = z[84]*z[92];

  m[0] = -z[105]*z[70] - z[105]*z[80] - z[19]*z[78] - z[24]*z[79] - z[3]*z[69]*z[98] + z[64]*z[97] + z[90]*(z[32]*z[86] + z[56]*z[83] - z[57]*z[84] + z[81]*(-z[103]*z[57] - z[22]*z[56] - z[26]*z[32]) + z[82]*(-z[104]*z[32] - z[106]*z[56] - z[57]*z[98])) + z[91]*(z[20]*z[72] - z[27]*z[77] - z[28]*z[76] + z[49]*(-z[102]*z[28] + z[103]*z[27] + z[20]*z[3]) + z[58]*(z[100]*z[28] + z[27]*z[98]));
  m[1] = z[100]*z[69] + z[104]*z[78] - z[106]*z[79] + z[70]*z[98] + z[80]*z[98] + z[90]*(-z[103]*z[118] - z[110]*z[83] - z[111]*z[86] + z[116] - z[46]*z[83] + z[50]*z[84] - z[66]*z[86] + z[81]*(z[103]*z[50] + z[22]*z[46] + z[26]*z[66]) + z[82]*(z[104]*z[66] + z[106]*z[46] + z[50]*z[98])) + z[91]*(-z[102]*z[107]*z[76] - z[102]*z[18]*z[76] + z[103]*z[107]*z[77] + z[103]*z[18]*z[77] + z[109]*z[72] + z[14]*z[72] - z[18]*z[49] - z[49]*(z[107]*z[6]*z[9] + z[107]*z[6]*pow(z[98], 2) - z[14]*z[3]));
  m[2] = z[101]*z[78] - z[64] + z[79]*z[99] + z[90]*(-z[100]*z[3]*z[86]*z[92]*z[99] + z[101]*z[105]*z[83]*z[92] + z[118]*z[3]*z[98] + z[3]*z[82]*z[92] + z[40]*z[86] + z[41]*z[83] - z[48]*z[84] + z[81]*(-z[103]*z[48] - z[22]*z[41] - z[26]*z[40]) + z[82]*(-z[104]*z[40] - z[106]*z[41] - z[48]*z[98])) + z[91]*(-rear_.a*z[77] + z[105]*z[18]*z[76] - z[109]*z[58] + z[109]*z[77]*z[98] - z[14]*z[58] + z[49]*(-rear_.a*z[0]*z[100] + z[1]*z[89]*z[97]) - z[76]*z[89]);
  m[3] = -z[80] + z[90]*(-z[103]*z[82]*z[92] + z[104]*z[47]*z[82] - z[116]*z[98] + z[117]*z[47] + z[38]*z[86] - z[47]*z[86] - z[83]*(-z[101]*z[9]*z[92]*z[97] - z[110]*z[98]));
  m[4] = -z[3]*(-rear_.J*state_[9]*z[94] + z[18]*z[91]*(z[100]*z[76] - z[58] + z[77]*z[98]));
  m[5] = -front_.J*z[54] + z[90]*(-z[104]*z[116] + z[105]*z[112]*z[83] + z[111]*z[82] - z[115]*z[84] + z[38]*z[84] + z[63]*z[82] - z[81]*(z[103]*z[115] + z[105]*z[112]*z[22]) - z[83]*(-z[104]*z[110] + z[106]*z[111]));
  m[6] = z[108]*z[91]*(-z[100]*z[74] + z[58] - z[75]*z[98]);
  m[7] = z[108]*z[91]*(z[102]*z[74] - z[103]*z[75] + z[3]*z[71] + z[49]);
  m[8] = z[91]*(z[105]*z[75] + z[3]*z[74]*z[98] - z[71]*z[97]);
  m[9] = z[90]*(-z[100]*z[83]*(-z[101]*z[26] + z[22]*z[99])/sqrt(pow(z[26], 2) + z[7]*z[9]) + z[104]*(z[100]*z[113]*z[61]*z[99]/(2*pow(z[26], 2) + 2*z[7]*z[9]) - z[101]*z[113]*z[96] + z[113]*z[95]*z[98] - z[114]*z[26]*z[61]/(2*pow(z[26], 2) + 2*z[7]*z[9]) + z[114]*z[42] - z[29]*z[92] - z[67]*z[94])/sqrt(pow(z[26], 2) + z[7]*z[9]) - z[26]*(z[101]*z[114]*z[96] - z[104]*z[114]*z[61]/(2*pow(z[26], 2) + 2*z[7]*z[9]) - z[113]*z[26]*z[61]/(2*pow(z[26], 2) + 2*z[7]*z[9]) + z[113]*z[42] - z[114]*z[95]*z[98] - z[51]*z[92] + z[65]*z[94])/sqrt(pow(z[26], 2) + z[7]*z[9]) - z[85]*(-z[26]*z[98] + z[9]*z[97]*z[99])/sqrt(pow(z[26], 2) + z[7]*z[9]));
  m[10] = z[90]*(z[100]*z[84]*(-z[26]*z[97] - z[98]*z[99])/sqrt(pow(z[26], 2) + z[7]*z[9]) - z[104]*z[82]/sqrt(pow(z[26], 2) + z[7]*z[9]) - z[117]/sqrt(pow(z[26], 2) + z[7]*z[9]) - z[83]*(-z[101]*z[9]*z[99] - z[22]*z[26])/sqrt(pow(z[26], 2) + z[7]*z[9]) + z[86]*sqrt(pow(z[26], 2) + z[7]*z[9]));
  m[11] = z[90]*(z[105]*z[85] + z[19]*(-state_[10]*z[112]*z[3]*z[37]*z[98] - state_[9]*z[0]*z[100]*z[112]*z[37] - z[105]*z[112]*z[17]*(-z[34] - z[93]) - z[105]*z[112]*z[37]*z[62]/(2*pow(z[24], 2) + 2*z[8]*z[9]) + z[105]*z[112]*z[53] - z[112]*z[17]*z[39] - z[115]*z[17]*z[62]/(2*pow(z[24], 2) + 2*z[8]*z[9]) - z[115]*z[30] + z[115]*z[37]*(-z[34] - z[93]) + z[17]*z[34]*z[88] - z[30]*z[87] - z[34]*z[37]*z[87] + z[52]*z[88]) - z[24]*z[83]);

  delete [] z;
}

/** Computes the n-d array of shape (12)
 *
 * @param[out] a C-array of with 12 elements
 */
//  void Bicycle::gif_ud_zero_steady(double m[12]) const;
void Bicycle::gif_ud_zero_steady(double m[12]) const
{
  double * z = new double[94];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = pow(state_[8], 2);
  z[7] = pow(z[0], 2);
  z[8] = pow(z[1], 2);
  z[9] = pow(z[3], 2);
  z[10] = pow(z[4], 2);
  z[11] = sqrt(z[9]);
  z[12] = rear_.R/z[11] + rear_.r;
  z[13] = rear_.a*z[1] - rear_.b*z[4];
  z[14] = rear_.a*z[3]*z[4] + rear_.b*z[1]*z[3];
  z[15] = z[0]*z[2] - z[1]*z[3]*z[5];
  z[16] = -z[0]*z[1]*z[2] + z[3]*z[5];
  z[17] = -z[16];
  z[18] = -z[0]*z[5] - z[1]*z[2]*z[3];
  z[19] = -z[0]*z[1]*z[5] - z[2]*z[3];
  z[20] = rear_.a*state_[8]*z[3]*z[4] + rear_.b*state_[8]*z[1]*z[3];
  z[21] = pow(z[15], 2);
  z[22] = rear_.Ixx*state_[8]*z[1]*z[3] - rear_.Ixz*state_[8]*z[3]*z[4];
  z[23] = rear_.Ixz*state_[8]*z[1]*z[3] - rear_.Izz*state_[8]*z[3]*z[4];
  z[24] = state_[13] - state_[8]*z[18];
  z[25] = rear_.R*z[0]*z[1]*z[3]/z[11] + rear_.a*z[0];
  z[26] = rear_.R*z[0]*z[3]*z[4]/z[11] - rear_.b*z[0];
  z[27] = front_.a*z[3]*z[4] - front_.b*z[15];
  z[28] = front_.Ixx*state_[8]*z[15] + front_.Ixz*state_[8]*z[3]*z[4];
  z[29] = front_.Ixz*state_[8]*z[15] + front_.Izz*state_[8]*z[3]*z[4];
  z[30] = front_.a*state_[8]*z[3]*z[4] - front_.b*state_[8]*z[15];
  z[31] = sqrt(z[10]*z[9] + z[21]);
  z[32] = -rear_.Iyy*state_[8]*z[0]*z[1]*z[3] - rear_.J*state_[12]*z[1]*z[3] + z[0]*z[22];
  z[33] = rear_.R*z[10]*z[3]/z[11] + rear_.R*z[3]*z[8]/z[11] + z[13];
  z[34] = -rear_.Iyy*state_[8]*z[0]*z[3]*z[4] - rear_.J*state_[12]*z[3]*z[4] - z[0]*z[23];
  z[35] = front_.R*z[2]*z[3]*z[4]/z[31] - front_.b*z[2];
  z[36] = front_.R*z[3]*z[4]*z[5]/z[31] - front_.b*z[5];
  z[37] = rear_.R*state_[8]*z[1]*z[3]*z[7]/z[11] + rear_.a*state_[8]*z[7] + z[20]*z[3]*z[4];
  z[38] = front_.R*z[10]*z[2]*z[3]/z[31] - front_.b*z[2]*z[4];
  z[39] = -rear_.R*state_[8]*z[3]*z[4]*z[7]/z[11] + rear_.b*state_[8]*z[7] + z[1]*z[20]*z[3];
  z[40] = front_.R*z[15]/z[31] - front_.a;
  z[41] = rear_.R*z[1]*z[3]*z[6]*z[7]/z[11] + rear_.a*z[6]*z[7] + state_[8]*z[20]*z[3]*z[4];
  z[42] = -rear_.R*z[3]*z[4]*z[6]*z[7]/z[11] + rear_.b*z[6]*z[7] + state_[8]*z[1]*z[20]*z[3];
  z[43] = front_.R*z[15]*z[5]/z[31] - front_.a*z[5];
  z[44] = front_.R*z[15]*z[2]*z[4]/z[31] - front_.a*z[2]*z[4];
  z[45] = -front_.R*z[18]*z[3]*z[4]/z[31] + front_.b*z[18];
  z[46] = -front_.Iyy*state_[8]*z[18]*z[3]*z[4] + front_.J*state_[13]*z[3]*z[4] + z[18]*z[29];
  z[47] = -rear_.R*z[0]*z[10]*z[11]*z[6] - rear_.R*z[0]*z[11]*z[6]*z[8] - rear_.a*z[0]*z[1]*z[3]*z[6] + rear_.b*z[0]*z[3]*z[4]*z[6];
  z[48] = z[15]*z[29] - z[28]*z[3]*z[4];
  z[49] = -front_.R*z[15]*z[18]/z[31] + front_.a*z[18];
  z[50] = -front_.Iyy*state_[8]*z[15]*z[18] + front_.J*state_[13]*z[15] + z[18]*z[28];
  z[51] = front_.R*z[1]*z[15]/z[31] - front_.R*z[10]*z[3]*z[5]/z[31] - front_.a*z[1] + front_.b*z[4]*z[5];
  z[52] = z[1]*z[39] + z[37]*z[4];
  z[53] = front_.R*z[15]*z[18]*z[24]/z[31] + front_.a*state_[8]*pow(z[18], 2) + z[3]*z[30]*z[4];
  z[54] = -front_.R*z[18]*z[24]*z[3]*z[4]/z[31] - front_.b*state_[8]*pow(z[18], 2) + z[15]*z[30];
  z[55] = -front_.R*state_[8]*z[15]*z[18]*z[24]/z[31] - front_.a*pow(z[18], 2)*z[6] - state_[8]*z[3]*z[30]*z[4];
  z[56] = front_.R*state_[8]*z[18]*z[24]*z[3]*z[4]/z[31] + front_.b*pow(z[18], 2)*z[6] - state_[8]*z[15]*z[30];
  z[57] = front_.R*z[10]*z[24]*z[9]/z[31] + front_.R*z[21]*z[24]/z[31] + front_.a*state_[8]*z[15]*z[18] + front_.b*state_[8]*z[18]*z[3]*z[4];
  z[58] = front_.R*state_[8]*z[10]*z[24]*z[9]/z[31] + front_.R*state_[8]*z[21]*z[24]/z[31] + front_.a*z[15]*z[18]*z[6] + front_.b*z[18]*z[3]*z[4]*z[6];
  z[59] = -front_.m;
  z[60] = -rear_.m;
  z[61] = front_.r*state_[13];
  z[62] = state_[8]*z[3];
  z[63] = -z[1];
  z[64] = -z[4];
  z[65] = -z[0]*z[63];
  z[66] = z[0]*z[2];
  z[67] = -z[0]*z[64];
  z[68] = -z[3]*z[63];
  z[69] = z[2]*z[3];
  z[70] = -z[2]*z[64];
  z[71] = -z[3]*z[64];
  z[72] = -z[5]*z[64];
  z[73] = pow(front_.r, 2)*state_[13]*state_[8];
  z[74] = -z[10];
  z[75] = rear_.R/z[11];
  z[76] = z[6]*z[9];
  z[77] = -pow(z[2], 2)*z[74];
  z[78] = state_[12]*z[12];
  z[79] = -front_.r*z[19];
  z[80] = front_.r*z[17];
  z[81] = state_[8]*z[15];
  z[82] = -z[19]*z[2];
  z[83] = -z[18]*z[6];
  z[84] = -z[17]*z[63];
  z[85] = z[17]*z[5];
  z[86] = front_.R/z[31];
  z[87] = z[61]/sqrt(pow(z[17], 2) + z[77]);
  z[88] = state_[8]*z[40];
  z[89] = z[12]*z[41];
  z[90] = z[12]*z[42];
  z[91] = state_[8]*z[46];
  z[92] = state_[8]*z[48];
  z[93] = -front_.r*z[56];

  m[0] = -state_[8]*z[18]*z[48] - z[0]*z[62]*(z[22]*z[64] + z[23]*z[63]) + z[32]*z[62]*z[64] - z[34]*z[62]*z[63] + z[46]*z[81] + z[50]*z[62]*z[64] + z[59]*(state_[8]*z[17]*z[61]*(-z[17]*z[27] + z[19]*z[45] - z[49]*z[67]) + state_[8]*z[61]*z[70]*(-z[27]*z[70] - z[45]*z[72] - z[49]*z[63]) - z[27]*z[58] - z[45]*z[55] - z[49]*z[56]) + z[60]*(z[14]*z[47] + z[25]*z[42] + z[26]*z[41] - z[62]*z[78]*(z[14]*z[3] + z[25]*z[67] - z[26]*z[65]));
  m[1] = state_[8]*z[32]*z[63] + state_[8]*z[34]*z[64] + state_[8]*z[50]*z[63] + z[59]*(state_[8]*z[17]*z[61]*(z[17]*z[51] - z[19]*z[38] + z[44]*z[67]) + state_[8]*z[61]*z[70]*(z[38]*z[72] + z[44]*z[63] + z[51]*z[70]) + z[17]*z[73] + z[38]*z[55] + z[44]*z[56] + z[51]*z[58] + z[55]*z[79] + z[58]*z[80] - z[67]*z[93]) + z[60]*(z[12]*z[3]*z[47] - z[12]*z[62]*z[78] + z[13]*z[47] + z[41]*z[65]*z[75] - z[42]*z[67]*z[75] + z[62]*z[78]*(-z[13]*z[3] - z[7]*z[74]*z[75] + z[7]*z[75]*z[8]) - z[65]*z[89] + z[67]*z[90]) - z[70]*z[92] + z[72]*z[91];
  m[2] = z[2]*z[91] + z[5]*z[92] + z[59]*(-front_.r*z[5]*z[55]*z[71] + front_.r*z[58]*z[64]*z[69] + state_[8]*z[17]*z[61]*(-z[17]*z[35] + z[19]*z[36] - z[43]*z[67]) + state_[8]*z[61]*z[70]*(-z[35]*z[70] - z[36]*z[72] - z[43]*z[63]) - z[35]*z[58] - z[36]*z[55] - z[43]*z[56] + z[64]*z[69]*z[73] - z[68]*z[93]) + z[60]*(rear_.a*z[42] - rear_.b*z[41] - z[62]*z[78]*(-rear_.a*z[0]*z[64] - rear_.b*z[0]*z[63]) + z[68]*z[90] + z[71]*z[89]) - z[63]*z[76]*(rear_.Ixz*z[1] + rear_.Izz*z[64]) - z[64]*z[76]*(rear_.Ixx*z[1] + rear_.Ixz*z[64]);
  m[3] = -front_.Iyy*z[15]*z[83] - front_.J*state_[13]*z[81] + z[59]*(pow(z[17], 2)*z[61]*z[88] + z[40]*z[58] + z[55]*(-front_.r*z[0]*z[5]*z[74] - z[63]*z[79]) - z[58]*(front_.r*z[66]*z[74] + z[63]*z[80]) + z[61]*z[77]*z[88] - z[66]*z[73]*z[74] + z[73]*z[84]) + z[83]*(front_.Ixx*z[15] + front_.Ixz*z[71]);
  m[4] = z[12]*z[52]*z[60]*z[62];
  m[5] = state_[8]*z[59]*(front_.r*z[53]*z[64]*(-z[82] + z[85]) + front_.r*z[54]*(-z[66]*z[74] + z[84]) + z[15]*z[54]*z[86] + z[17]*z[61]*z[64]*z[86]*(z[0]*z[15] - z[19]*z[3]) + z[53]*z[71]*z[86] + z[61]*z[70]*z[86]*(-z[15]*z[63] + z[3]*z[5]*z[74]));
  m[6] = -z[52]*z[60]*z[62]/z[11];
  m[7] = -z[60]*z[62]*(state_[8]*z[0]*z[33]*z[9] + z[3]*z[78] + z[37]*z[65] - z[39]*z[67])/z[11];
  m[8] = -z[60]*z[62]*(state_[8]*z[33]*z[7] + z[37]*z[63] - z[39]*z[64]);
  m[9] = -state_[8]*z[59]*(-z[53]*z[64]*(z[82] - z[85]) - z[54]*(z[66]*z[74] - z[84]))/sqrt(pow(z[17], 2) + z[77]);
  m[10] = -state_[8]*z[59]*(pow(z[17], 2)*z[87] + z[53]*(z[17]*z[19] + z[2]*z[5]*z[74])/sqrt(pow(z[17], 2) + z[77]) + z[54]*z[64]*(z[0]*z[17] + z[2]*z[63])/sqrt(pow(z[17], 2) + z[77]) + z[57]*sqrt(pow(z[17], 2) + z[77]) + z[77]*z[87]);
  m[11] = -state_[8]*z[59]*(z[15]*z[53] - z[18]*z[57] - z[54]*z[71]);

  delete [] z;
}

/** Computes the n-d array of shape (12, 8)
 *
 * @param[out] a C-array of with 96 elements
 */
//  void Bicycle::gif_ud_zero_dq(double m[96]) const;
void Bicycle::gif_ud_zero_dq(double m[96]) const
{
  double * z = new double[374];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = pow(state_[9], 2);
  z[7] = pow(z[0], 2);
  z[8] = pow(z[0], 3);
  z[9] = pow(z[1], 2);
  z[10] = pow(z[2], 2);
  z[11] = pow(z[3], 2);
  z[12] = pow(z[4], 2);
  z[13] = pow(z[5], 2);
  z[14] = state_[10] + state_[8]*z[0];
  z[15] = sqrt(z[11]);
  z[16] = pow(z[14], 2);
  z[17] = -z[14];
  z[18] = rear_.a*z[4] + rear_.b*z[1];
  z[19] = state_[10]*z[0] + state_[12]*z[0];
  z[20] = state_[10]*z[3] + state_[12]*z[3];
  z[21] = rear_.a*z[1] - rear_.b*z[4];
  z[22] = state_[10]*state_[9]*z[0] + state_[12]*state_[9]*z[0];
  z[23] = state_[8]*z[3]*z[4] + state_[9]*z[1];
  z[24] = state_[8]*z[1]*z[3] - state_[9]*z[4];
  z[25] = -rear_.R/z[15] - rear_.r;
  z[26] = rear_.a*z[0]*z[4] + rear_.b*z[0]*z[1];
  z[27] = rear_.a*z[3]*z[4] + rear_.b*z[1]*z[3];
  z[28] = -z[23];
  z[29] = -z[0]*z[2] + z[1]*z[3]*z[5];
  z[30] = -z[29];
  z[31] = rear_.a*z[1]*z[3] - rear_.b*z[3]*z[4];
  z[32] = -z[0]*z[1]*z[2] + z[3]*z[5];
  z[33] = -z[32];
  z[34] = -z[0]*z[5] - z[1]*z[2]*z[3];
  z[35] = 2*z[0]*z[5] + 2*z[1]*z[2]*z[3];
  z[36] = -z[0]*z[1]*z[5] - z[2]*z[3];
  z[37] = 2*z[0]*z[1]*z[5] + 2*z[2]*z[3];
  z[38] = rear_.a*state_[8]*z[0]*z[4] + rear_.b*state_[8]*z[0]*z[1];
  z[39] = state_[10]*state_[8]*z[0]*z[4] + state_[8]*state_[9]*z[1]*z[3];
  z[40] = state_[8]*z[2]*z[3]*z[4] + state_[9]*z[1]*z[2];
  z[41] = front_.a*z[1]*z[3] - front_.b*z[3]*z[4]*z[5];
  z[42] = rear_.Ixx*state_[8]*z[0]*z[1] - rear_.Ixz*state_[8]*z[0]*z[4];
  z[43] = rear_.Ixz*state_[8]*z[0]*z[1] - rear_.Izz*state_[8]*z[0]*z[4];
  z[44] = state_[10]*state_[8]*z[0]*z[1] - state_[8]*state_[9]*z[3]*z[4];
  z[45] = -state_[11] - z[23];
  z[46] = -state_[8]*z[3]*z[4]*z[5] - state_[9]*z[1]*z[5];
  z[47] = rear_.R*z[1]*z[15] + rear_.a*z[3];
  z[48] = rear_.R*z[0]*z[1]*z[3]/z[15] + rear_.a*z[0];
  z[49] = rear_.R*z[15]*z[4] - rear_.b*z[3];
  z[50] = rear_.R*z[0]*z[3]*z[4]/z[15] - rear_.b*z[0];
  z[51] = -state_[10]*state_[11]*z[1] + state_[10]*state_[13]*z[2]*z[4] + state_[11]*state_[13]*z[1]*z[5];
  z[52] = state_[10]*state_[11]*z[4] + state_[10]*state_[13]*z[1]*z[2] - state_[11]*state_[13]*z[4]*z[5];
  z[53] = front_.a*z[0]*z[4] - front_.b*z[36];
  z[54] = -state_[10]*state_[8]*z[1]*z[3] + state_[10]*state_[9]*z[4] - state_[8]*state_[9]*z[0]*z[4];
  z[55] = -state_[10]*state_[8]*z[3]*z[4] - state_[10]*state_[9]*z[1] + state_[8]*state_[9]*z[0]*z[1];
  z[56] = z[0]*z[33] - z[1]*z[2];
  z[57] = front_.a*z[3]*z[4] - front_.b*z[30];
  z[58] = front_.a*state_[8]*z[0]*z[4] - front_.b*state_[8]*z[36];
  z[59] = state_[10]*z[0]*z[4]*z[5] - state_[11]*z[0]*z[1]*z[2] + state_[11]*z[3]*z[5];
  z[60] = -front_.Ixx*state_[8]*z[36] - front_.Ixz*state_[8]*z[0]*z[4];
  z[61] = -front_.Ixz*state_[8]*z[36] - front_.Izz*state_[8]*z[0]*z[4];
  z[62] = state_[10]*z[1]*z[3]*z[5] + state_[11]*z[2]*z[3]*z[4] + state_[9]*z[0]*z[4]*z[5];
  z[63] = state_[10]*z[0]*z[1]*z[2] - state_[11]*z[0]*z[4]*z[5] - state_[9]*z[2]*z[3]*z[4];
  z[64] = -rear_.a*z[28] + rear_.b*z[24];
  z[65] = front_.r*z[0]*z[12]*z[5] - front_.r*z[1]*z[36];
  z[66] = -state_[10]*z[5] + state_[8]*z[34] + state_[9]*z[2]*z[4];
  z[67] = -rear_.Ixx*z[24] - rear_.Ixz*z[28];
  z[68] = -rear_.Ixz*z[24] - rear_.Izz*z[28];
  z[69] = -rear_.a*z[24] - rear_.b*z[28];
  z[70] = rear_.Ixx*z[28] - rear_.Ixz*z[24];
  z[71] = rear_.Ixz*z[28] - rear_.Izz*z[24];
  z[72] = front_.r*z[0]*z[1]*z[2]*z[4] - front_.r*z[33]*z[4];
  z[73] = -state_[10]*z[2] - state_[8]*z[30] - state_[9]*z[4]*z[5];
  z[74] = -z[2]*z[4]*z[56];
  z[75] = -front_.r*z[0]*z[12]*z[2] - front_.r*z[1]*z[33];
  z[76] = z[1]*z[11]*z[4] + z[3]*z[30]*z[4]*z[5];
  z[77] = -z[0]*z[2]*z[33]*z[4] + z[1]*z[10]*z[4];
  z[78] = rear_.R*z[6]/z[15] + 2*rear_.R*z[6]*z[7]/pow(z[11], 3.0/2.0);
  z[79] = -front_.a*z[24] - front_.b*z[46];
  z[80] = z[77];
  z[81] = front_.Ixx*z[46] - front_.Ixz*z[24];
  z[82] = front_.Ixz*z[46] - front_.Izz*z[24];
  z[83] = z[79];
  z[84] = z[2]*z[36] + z[33]*z[5];
  z[85] = -rear_.Iyy*z[17]*z[28] + rear_.J*state_[12]*z[28];
  z[86] = z[12]*z[2]*z[5] - z[33]*z[36];
  z[87] = -z[0]*z[12]*z[3] - z[30]*z[36];
  z[88] = state_[9]*z[0]*z[2] - state_[9]*z[1]*z[3]*z[5] - z[59];
  z[89] = -state_[10]*z[2]*z[3]*z[4] + state_[11]*z[0]*z[2] - state_[11]*z[1]*z[3]*z[5] + state_[9]*z[0]*z[1]*z[2] - state_[9]*z[3]*z[5];
  z[90] = -2*z[0]*z[12]*z[3] + z[30]*z[37];
  z[91] = z[12]*z[2]*z[5] + z[33]*z[37]/2;
  z[92] = 2*z[12]*z[2]*z[5] + z[33]*z[37];
  z[93] = front_.r*z[2]*z[36]*z[4] + front_.r*z[33]*z[4]*z[5];
  z[94] = state_[10]*z[3]*z[4]*z[5] - state_[11]*z[0]*z[5] - state_[11]*z[1]*z[2]*z[3] - state_[9]*z[0]*z[1]*z[5] - state_[9]*z[2]*z[3];
  z[95] = -z[0]*z[12]*z[3] + z[30]*z[37]/2;
  z[96] = front_.R*z[2]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.b*z[2];
  z[97] = front_.R*z[3]*z[4]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.b*z[5];
  z[98] = state_[10]*state_[8]*z[1]*z[3]*z[5] - state_[10]*state_[9]*z[4]*z[5] - state_[11]*z[2]*z[28] + state_[8]*state_[9]*z[0]*z[4]*z[5];
  z[99] = -state_[10]*z[0]*z[2]*z[4] - state_[11]*z[0]*z[1]*z[5] - state_[11]*z[2]*z[3] - state_[9]*z[0]*z[5] - state_[9]*z[1]*z[2]*z[3];
  z[100] = 2*state_[10]*z[0]*z[2]*z[4] + 2*state_[11]*z[0]*z[1]*z[5] + 2*state_[11]*z[2]*z[3] + 2*state_[9]*z[0]*z[5] + 2*state_[9]*z[1]*z[2]*z[3];
  z[101] = 2*state_[10]*z[0]*z[4]*z[5] - 2*state_[11]*z[0]*z[1]*z[2] + 2*state_[11]*z[3]*z[5] - 2*state_[9]*z[0]*z[2] + 2*state_[9]*z[1]*z[3]*z[5];
  z[102] = -2*state_[10]*z[3]*z[4]*z[5] + 2*state_[11]*z[0]*z[5] + 2*state_[11]*z[1]*z[2]*z[3] + 2*state_[9]*z[0]*z[1]*z[5] + 2*state_[9]*z[2]*z[3];
  z[103] = -state_[10]*state_[9]*z[4]*z[5] + state_[11]*state_[9]*z[1]*z[2] + state_[8]*z[62];
  z[104] = -state_[10]*state_[8]*z[1]*z[2]*z[3] + state_[10]*state_[9]*z[2]*z[4] - state_[11]*z[28]*z[5] - state_[8]*state_[9]*z[0]*z[2]*z[4];
  z[105] = state_[10]*state_[11]*z[0]*z[4] + state_[11]*state_[9]*z[1]*z[3] + state_[13]*z[63];
  z[106] = state_[10]*state_[9]*z[2]*z[4] + state_[11]*state_[9]*z[1]*z[5] - state_[8]*(state_[10]*z[1]*z[2]*z[3] - state_[11]*z[3]*z[4]*z[5] + state_[9]*z[0]*z[2]*z[4]);
  z[107] = z[104];
  z[108] = -front_.a*z[45] + front_.b*z[73];
  z[109] = state_[10]*state_[8]*z[0]*z[4]*z[5] - state_[11]*state_[8]*z[0]*z[1]*z[2] + state_[11]*state_[8]*z[3]*z[5] - state_[8]*state_[9]*z[30];
  z[110] = front_.Ixx*z[73] + front_.Ixz*z[45];
  z[111] = front_.Ixz*z[73] + front_.Izz*z[45];
  z[112] = front_.R*z[12]*z[2]*z[3]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.b*z[2]*z[4];
  z[113] = -state_[10]*state_[8]*z[0]*z[2]*z[4] - state_[11]*state_[8]*z[0]*z[1]*z[5] - state_[11]*state_[8]*z[2]*z[3] + state_[8]*state_[9]*z[34];
  z[114] = front_.R*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a;
  z[115] = front_.R*z[30]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*z[5];
  z[116] = -rear_.R*z[0]*z[6]/(z[15]*z[3]) - state_[8]*(state_[14]*z[3]/z[15] + z[20]*z[25]);
  z[117] = front_.R*z[2]*z[30]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*z[2]*z[4];
  z[118] = -(z[0]*z[12]*z[2] + z[1]*z[33])/sqrt(z[10]*z[12] + pow(z[33], 2));
  z[119] = -state_[10]*state_[11]*z[0]*z[1] + state_[10]*state_[9]*z[0] + state_[11]*state_[9]*z[3]*z[4] - state_[13]*z[99];
  z[120] = state_[10]*state_[11]*z[5] - state_[10]*state_[9]*z[1]*z[5] - state_[11]*state_[9]*z[2]*z[4] - state_[8]*z[94];
  z[121] = state_[10]*state_[8]*z[2]*z[3]*z[4] + state_[10]*state_[9]*z[1]*z[2] + state_[11]*z[17]*z[2] + state_[11]*z[24]*z[5] - state_[8]*state_[9]*z[33];
  z[122] = state_[10]*state_[8]*z[3]*z[4]*z[5] + state_[10]*state_[9]*z[1]*z[5] + state_[11]*z[17]*z[5] - state_[11]*z[2]*z[24] + state_[8]*state_[9]*z[36];
  z[123] = state_[10]*state_[11]*z[2] - state_[10]*state_[9]*z[1]*z[2] + state_[11]*state_[9]*z[4]*z[5] + state_[8]*z[89];
  z[124] = -front_.R*z[3]*z[34]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.b*z[34];
  z[125] = -z[4]*z[84]/sqrt(z[10]*z[12] + pow(z[33], 2));
  z[126] = -z[86]/sqrt(z[10]*z[12] + pow(z[33], 2));
  z[127] = -front_.R*z[30]*z[34]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[34];
  z[128] = -rear_.R*state_[9]*z[0]*z[20]/(z[15]*z[3]) - state_[8]*(state_[15]*z[3]/z[15] - state_[9]*z[25]) - z[22]*z[25];
  z[129] = state_[10]*z[1]*z[10]*z[4] - state_[11]*z[12]*z[2]*z[5] + z[33]*z[99];
  z[130] = state_[10]*z[1]*z[11]*z[4] + state_[9]*z[0]*z[12]*z[3] + z[30]*z[94];
  z[131] = state_[8]*(-rear_.R*z[0]*z[20]/(z[15]*z[3]) - z[19]*z[25]) + z[78];
  z[132] = -rear_.Iyy*state_[8]*state_[9]*z[0] - state_[8]*z[0]*z[1]*z[68] - state_[8]*z[0]*z[4]*z[67];
  z[133] = 2*state_[10]*z[1]*z[10]*z[4] - 2*state_[11]*z[12]*z[2]*z[5] - z[100]*z[33];
  z[134] = 2*state_[10]*z[1]*z[11]*z[4] + 2*state_[9]*z[0]*z[12]*z[3] - z[102]*z[30];
  z[135] = state_[10]*z[1]*z[10]*z[4] - state_[11]*z[12]*z[2]*z[5] - z[100]*z[33]/2;
  z[136] = front_.R*z[1]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[12]*z[3]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[137] = -rear_.a*z[17]*z[28] + rear_.a*z[55] + rear_.b*z[17]*z[24] + rear_.b*z[54];
  z[138] = front_.r*(state_[11]*z[1] - state_[13]*z[2]*z[4] + state_[9]) + state_[17]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[18]*z[33]/sqrt(z[10]*z[12] + pow(z[33], 2));
  z[139] = -front_.a*z[1] + front_.b*z[4]*z[5] + z[136];
  z[140] = -front_.R*z[0]*z[30]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[36]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[141] = -front_.R*pow(z[30], 2)*z[34]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[34]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[142] = -front_.R*z[1]*z[2]*z[3]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[2]*z[3]*z[4]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[143] = -front_.R*z[1]*z[3]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[5]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[144] = -front_.R*z[2]*z[3]*z[30]*z[34]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - z[97];
  z[145] = -front_.R*z[3]*z[30]*z[34]*z[4]*z[5]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + z[96];
  z[146] = -z[33]*z[89] + z[34]*z[99];
  z[147] = -z[30]*z[89] + z[34]*z[94];
  z[148] = -front_.R*z[12]*z[2]*z[3]*z[30]*z[34]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[12]*z[3]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.b*z[4]*z[5];
  z[149] = front_.R*z[0]*z[4]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[5]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[150] = -front_.R*z[3]*z[4]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[151] = -front_.r*(state_[10]*z[3] - state_[11]*z[0]*z[4] - state_[13]*z[33]) - state_[17]*z[33]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[18]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2));
  z[152] = -z[102]*z[34] + z[30]*(2*state_[10]*z[2]*z[3]*z[4] - 2*state_[11]*z[0]*z[2] + 2*state_[11]*z[1]*z[3]*z[5] - 2*state_[9]*z[0]*z[1]*z[2] + 2*state_[9]*z[3]*z[5]);
  z[153] = -front_.R*z[0]*z[2]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[2]*z[3]*z[4]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[154] = -2*front_.R*z[1]*z[2]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[12]*z[2]*z[3]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.b*z[1]*z[2];
  z[155] = -front_.R*z[13]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[5]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[156] = -front_.R*z[0]*z[12]*z[2]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[12]*z[2]*z[3]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[157] = front_.R*z[3]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[45]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[158] = -state_[10]*z[11]*z[12] + state_[10]*z[11]*z[9] + 2*state_[9]*z[0]*z[1]*z[3]*z[4] + z[3]*z[4]*z[5]*z[94] + z[30]*z[62];
  z[159] = -rear_.Ixx*z[54] + rear_.Ixz*z[55] - rear_.Iyy*z[17]*z[24] + rear_.J*state_[12]*z[24] - z[17]*z[71];
  z[160] = rear_.Ixx*z[55] + rear_.Ixz*z[54] - z[17]*z[68] + z[85];
  z[161] = state_[10]*z[10]*z[12] - state_[10]*z[10]*z[9] + 2*state_[11]*z[1]*z[2]*z[4]*z[5] + z[0]*z[2]*z[4]*z[99] + z[33]*z[63];
  z[162] = -rear_.Ixz*z[54] + rear_.Izz*z[55] + z[17]*z[70] + z[85];
  z[163] = rear_.Ixz*z[55] + rear_.Iyy*z[17]*z[24] + rear_.Izz*z[54] - rear_.J*state_[12]*z[24] + z[17]*z[67];
  z[164] = -2*state_[10]*z[11]*z[12] + 2*state_[10]*z[11]*z[9] + 4*state_[9]*z[0]*z[1]*z[3]*z[4] - z[102]*z[3]*z[4]*z[5] + z[30]*(2*state_[10]*z[1]*z[3]*z[5] + 2*state_[11]*z[2]*z[3]*z[4] + 2*state_[9]*z[0]*z[4]*z[5]);
  z[165] = front_.R*z[30]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[36]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[166] = 2*state_[10]*z[10]*z[12] - 2*state_[10]*z[10]*z[9] + 4*state_[11]*z[1]*z[2]*z[4]*z[5] - z[0]*z[100]*z[2]*z[4] - z[33]*(-2*state_[10]*z[0]*z[1]*z[2] + 2*state_[11]*z[0]*z[4]*z[5] + 2*state_[9]*z[2]*z[3]*z[4]);
  z[167] = front_.R*z[3]*z[30]*pow(z[34], 2)*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[30]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.b*z[30];
  z[168] = rear_.Ixx*z[39] + rear_.Ixz*z[44] - rear_.Iyy*state_[8]*z[0]*z[17]*z[4] + rear_.Iyy*state_[8]*z[28]*z[3] + rear_.J*state_[12]*state_[8]*z[0]*z[4] + state_[8]*z[3]*z[68] - z[17]*z[43];
  z[169] = -front_.R*z[30]*z[5]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[36]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[170] = front_.Ixz*z[98] + front_.Izz*z[55] + z[66]*z[81];
  z[171] = rear_.Ixz*z[39] - rear_.Iyy*state_[8]*z[0]*z[1]*z[17] - rear_.Iyy*state_[8]*z[24]*z[3] + rear_.Izz*z[44] + rear_.J*state_[12]*state_[8]*z[0]*z[1] - state_[8]*z[3]*z[67] + z[17]*z[42];
  z[172] = rear_.R*z[0]*pow(z[24], 2)/z[15] + rear_.R*z[0]*pow(z[28], 2)/z[15] - rear_.a*z[17]*z[24] - rear_.a*z[54] - rear_.b*z[17]*z[28] + rear_.b*z[55];
  z[173] = -rear_.R*state_[8]*state_[9]*z[0]/(z[15]*z[3]) + rear_.R*state_[9]*z[0]*z[19]/(z[15]*z[3]) - rear_.R*state_[9]*z[20]/z[15] - 2*rear_.R*state_[9]*z[20]*z[7]/pow(z[11], 3.0/2.0) + rear_.R*z[0]*z[22]/(z[15]*z[3]) - z[25]*(state_[10]*state_[9]*z[3] + state_[12]*state_[9]*z[3]);
  z[174] = front_.R*z[2]*z[30]*z[4]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[2]*z[36]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[175] = -z[172];
  z[176] = -z[172];
  z[177] = 2*state_[10]*z[0]*z[1]*z[3]*z[4] - state_[9]*z[11]*z[12] + state_[9]*z[12]*z[7] - z[30]*z[88] + z[36]*z[94];
  z[178] = 2*state_[10]*z[1]*z[2]*z[4]*z[5] + state_[11]*z[10]*z[12] - state_[11]*z[12]*z[13] + z[33]*z[88] - z[36]*z[99];
  z[179] = 4*state_[10]*z[0]*z[1]*z[3]*z[4] - 2*state_[9]*z[11]*z[12] + 2*state_[9]*z[12]*z[7] + z[101]*z[30] - z[102]*z[36];
  z[180] = 2*state_[10]*z[1]*z[2]*z[4]*z[5] + state_[11]*z[10]*z[12] - state_[11]*z[12]*z[13] + z[100]*z[36]/2 - z[101]*z[33]/2;
  z[181] = -rear_.R*state_[9]*z[28]*z[3]/z[15] - rear_.R*state_[9]*z[28]*z[7]/(z[15]*z[3]) - rear_.R*z[0]*z[17]*z[24]/z[15] + rear_.R*z[0]*z[54]/z[15] - z[28]*z[64];
  z[182] = z[1]*z[115] - z[2]*z[4]*z[96] - z[4]*z[5]*z[97];
  z[183] = rear_.R*state_[9]*z[24]*z[3]/z[15] + rear_.R*state_[9]*z[24]*z[7]/(z[15]*z[3]) - rear_.R*z[0]*z[17]*z[28]/z[15] - rear_.R*z[0]*z[55]/z[15] + z[24]*z[64];
  z[184] = -z[181];
  z[185] = front_.R*z[2]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*pow(z[30], 2)*z[34]*z[5]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[34]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*z[2];
  z[186] = -state_[17]*pow(z[33], 2)*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[34]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[18]*z[2]*z[33]*z[34]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0);
  z[187] = front_.Iyy*state_[8]*z[33]*z[73] + front_.Iyy*state_[8]*z[36]*z[66] - front_.J*state_[13]*state_[8]*z[36] - state_[8]*z[110]*z[33];
  z[188] = -front_.R*z[2]*pow(z[30], 2)*z[34]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[2]*z[34]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[4]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[4]*z[5];
  z[189] = -z[24]*z[67] + z[24]*z[71] - z[28]*z[68] - z[28]*z[70];
  z[190] = -rear_.a*state_[8]*state_[9]*z[3] - rear_.b*z[16] - z[183];
  z[191] = -front_.R*pow(z[30], 2)*pow(z[34], 2)/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*pow(z[30], 2)/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*pow(z[34], 2)/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[30];
  z[192] = -rear_.a*z[16] + rear_.b*state_[8]*state_[9]*z[3] + z[184];
  z[193] = front_.R*z[1]*pow(z[30], 2)*z[34]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[1]*z[34]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[12]*z[3]*z[30]*z[34]*z[5]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[194] = -z[0]*z[115]*z[4] - z[33]*z[96] + z[36]*z[97];
  z[195] = -rear_.a*state_[8]*state_[9]*z[3] - rear_.b*z[16] - z[183];
  z[196] = -front_.R*z[1]*z[2]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[12]*z[2]*z[3]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[2]*z[30]*z[4]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.a*z[1]*z[2];
  z[197] = front_.R*z[1]*z[3]*z[34]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[11]*z[12]*z[2]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[34]*z[4]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.b*z[2]*z[3]*z[4];
  z[198] = z[1]*z[127] - z[124]*z[4]*z[5] - z[2]*z[4]*z[57];
  z[199] = front_.Iyy*z[121] + z[110]*z[45] - z[111]*z[73];
  z[200] = z[183] + z[28]*z[69];
  z[201] = z[183] + z[28]*z[69];
  z[202] = z[184] - z[24]*z[69];
  z[203] = front_.R*z[2]*z[3]*z[30]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[34]*z[4]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[34]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.a*z[2]*z[3]*z[4];
  z[204] = -front_.R*z[0]*z[34]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[33]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[34]*z[4]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.b*z[33];
  z[205] = -z[0]*z[127]*z[4] + z[124]*z[36] - z[33]*z[57];
  z[206] = -z[1]*z[117] + z[112]*z[4]*z[5] + z[139]*z[2]*z[4];
  z[207] = front_.Ixx*z[121] + front_.Ixz*pow(z[66], 2) + front_.Iyy*z[45]*z[73] - z[111]*z[73];
  z[208] = front_.R*state_[8]*z[0]*z[30]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[3]*z[36]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[0]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[36]*z[45]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[209] = -front_.Ixx*z[122] + front_.Ixz*z[54] - front_.Iyy*z[45]*z[66] + front_.J*state_[13]*z[45] + z[111]*z[66];
  z[210] = z[112] + z[193];
  z[211] = -front_.R*z[30]*z[33]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[34]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[34]*z[36]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[33];
  z[212] = front_.r*(state_[11]*z[4] + state_[13]*z[1]*z[2]) - state_[17]*z[1]*z[2]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[17]*z[2]*z[4]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[0]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[18]*z[33]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0);
  z[213] = front_.R*z[1]*z[3]*z[4]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[1]*z[30]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[12]*z[3]*z[5]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[214] = z[0]*z[117]*z[4] - z[112]*z[36] + z[139]*z[33];
  z[215] = -front_.r*(state_[11]*z[0]*z[1] - state_[13]*z[0]*z[2]*z[4]) - state_[17]*z[0]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[17]*z[33]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[1]*z[2]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[18]*z[2]*z[4]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0);
  z[216] = front_.Ixx*z[45]*z[66] - front_.Ixz*z[66]*z[73] + front_.Iyy*z[122] - z[111]*z[66];
  z[217] = -front_.a*z[4] - front_.b*z[1]*z[5] + z[213];
  z[218] = -front_.Ixz*z[122] + front_.Iyy*z[66]*z[73] + front_.Izz*z[54] - front_.J*state_[13]*z[73] - z[110]*z[66];
  z[219] = -front_.R*z[0]*z[12]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[1]*z[30]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[1]*z[36]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[12]*z[3]*z[5]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[220] = front_.Ixx*z[109] + front_.Ixz*z[44] - front_.Iyy*state_[8]*z[0]*z[4]*z[66] - front_.Iyy*state_[8]*z[33]*z[45] + front_.J*state_[13]*state_[8]*z[0]*z[4] + state_[8]*z[111]*z[33] - z[61]*z[66];
  z[221] = front_.Iyy*z[113] + state_[8]*z[0]*z[110]*z[4] - state_[8]*z[111]*z[36] - z[45]*z[60] + z[61]*z[73];
  z[222] = 2*rear_.R*state_[8]*z[1]*z[24]*z[7]/z[15] - 2*rear_.R*state_[8]*z[28]*z[4]*z[7]/z[15] - rear_.R*pow(z[24], 2)*z[3]/z[15] - rear_.R*pow(z[24], 2)*z[7]/(z[15]*z[3]) - rear_.R*pow(z[28], 2)*z[3]/z[15] - rear_.R*pow(z[28], 2)*z[7]/(z[15]*z[3]) - rear_.a*state_[8]*z[0]*z[1]*z[17] - rear_.a*state_[8]*z[24]*z[3] + rear_.a*z[44] + rear_.b*state_[8]*z[0]*z[17]*z[4] - rear_.b*state_[8]*z[28]*z[3] - rear_.b*z[39];
  z[223] = 2*rear_.R*state_[8]*z[1]*z[24]*z[7]/z[15] - 2*rear_.R*state_[8]*z[28]*z[4]*z[7]/z[15] - rear_.R*pow(z[24], 2)*z[3]/z[15] - rear_.R*pow(z[24], 2)*z[7]/(z[15]*z[3]) - rear_.R*pow(z[28], 2)*z[3]/z[15] - rear_.R*pow(z[28], 2)*z[7]/(z[15]*z[3]) - rear_.a*state_[8]*z[0]*z[1]*z[17] - rear_.a*state_[8]*z[24]*z[3] + rear_.a*z[44] + rear_.b*state_[8]*z[0]*z[17]*z[4] - rear_.b*state_[8]*z[28]*z[3] - rear_.b*z[39];
  z[224] = front_.Iyy*z[104] + z[110]*z[24] + z[111]*z[46] - z[45]*z[81] + z[73]*z[82];
  z[225] = front_.Ixx*z[98] + front_.Ixz*z[55] - front_.Iyy*z[24]*z[66] + front_.Iyy*z[40]*z[45] + front_.J*state_[13]*z[24] - z[111]*z[40] - z[66]*z[82];
  z[226] = -front_.R*z[3]*z[30]*z[34]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[3]*z[4]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*pow(z[30], 2)*z[34]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[34]*z[45]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[227] = front_.R*z[3]*z[30]*z[35]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 2*front_.R*z[3]*z[4]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*pow(z[30], 2)*z[35]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 2*front_.R*z[34]*z[45]/sqrt(z[11]*z[12] + pow(z[30], 2));
  z[228] = front_.Ixz*z[109] + front_.Izz*z[44] + z[187] + z[60]*z[66];
  z[229] = front_.R*z[123]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*pow(z[66], 2) + front_.b*z[121];
  z[230] = -front_.Ixx*pow(z[66], 2) + front_.Ixz*z[121] + front_.Iyy*pow(z[66], 2) - front_.Iyy*pow(z[73], 2) - front_.J*state_[13]*z[66] + z[110]*z[73];
  z[231] = -front_.Iyy*z[40]*z[73] - front_.Iyy*z[46]*z[66] + front_.J*state_[13]*z[46] + z[110]*z[40] + z[170];
  z[232] = rear_.R*state_[8]*state_[9]*z[0]*z[3]*z[4]/z[15] + rear_.R*state_[8]*state_[9]*z[4]*z[8]/(z[15]*z[3]) - rear_.R*state_[8]*z[0]*z[24]*z[3]/z[15] - rear_.R*state_[8]*z[1]*z[17]*z[7]/z[15] + 2*rear_.R*state_[9]*z[0]*z[28]/z[15] + 2*rear_.R*state_[9]*z[28]*z[8]/pow(z[11], 3.0/2.0) - rear_.R*z[0]*z[44]/z[15] + rear_.R*z[17]*z[24]*z[3]/z[15] + rear_.R*z[17]*z[24]*z[7]/(z[15]*z[3]) - rear_.R*z[3]*z[54]/z[15] - rear_.R*z[54]*z[7]/(z[15]*z[3]) + 2*rear_.a*state_[8]*z[17]*z[3] - rear_.b*state_[8]*state_[9]*z[0] + state_[8]*z[0]*z[4]*z[64] - z[28]*z[38];
  z[233] = -z[1]*z[192]*z[25]*z[3] + z[195]*z[25]*z[3]*z[4];
  z[234] = -rear_.R*state_[8]*state_[9]*z[0]*z[1]*z[3]/z[15] - rear_.R*state_[8]*state_[9]*z[1]*z[8]/(z[15]*z[3]) + rear_.R*state_[8]*z[0]*z[28]*z[3]/z[15] - rear_.R*state_[8]*z[17]*z[4]*z[7]/z[15] + 2*rear_.R*state_[9]*z[0]*z[24]/z[15] + 2*rear_.R*state_[9]*z[24]*z[8]/pow(z[11], 3.0/2.0) - rear_.R*z[0]*z[39]/z[15] - rear_.R*z[17]*z[28]*z[3]/z[15] - rear_.R*z[17]*z[28]*z[7]/(z[15]*z[3]) - rear_.R*z[3]*z[55]/z[15] - rear_.R*z[55]*z[7]/(z[15]*z[3]) - rear_.a*state_[8]*state_[9]*z[0] - 2*rear_.b*state_[8]*z[17]*z[3] - state_[8]*z[0]*z[1]*z[64] - z[24]*z[38];
  z[235] = z[232];
  z[236] = front_.R*z[1]*z[3]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[24]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[4]*z[45]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[46]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[4]*z[73]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*z[45]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0);
  z[237] = front_.R*z[3]*z[4]*z[73]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[30]*z[45]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + z[208];
  z[238] = front_.R*z[3]*z[4]*z[73]*z[95]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[30]*z[45]*z[95]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + z[208];
  z[239] = -front_.r*state_[13]*z[88] - state_[10]*state_[18]*z[1]*z[2]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[10]*state_[18]*z[1]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[18]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[18]*z[4]*z[5]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[86]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[88]/sqrt(z[10]*z[12] + pow(z[33], 2));
  z[240] = front_.r*z[52] - state_[10]*state_[17]*z[1]*z[2]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[17]*z[4]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[17]*z[129]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[129]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[99]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[8]*z[151];
  z[241] = front_.r*z[52] - state_[10]*state_[17]*z[1]*z[2]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[17]*z[4]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[17]*z[133]*z[2]*z[4]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) - state_[18]*z[133]*z[33]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) + state_[18]*z[99]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[8]*z[151];
  z[242] = front_.r*z[119] + state_[10]*state_[18]*z[1]*z[2]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[18]*z[4]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[17]*z[129]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[99]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[18]*z[129]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[8]*z[138];
  z[243] = front_.r*z[119] + state_[10]*state_[18]*z[1]*z[2]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[18]*z[4]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[17]*z[133]*z[33]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) + state_[17]*z[99]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[18]*z[133]*z[2]*z[4]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) - state_[8]*z[138];
  z[244] = -state_[10]*state_[17]*z[1]*z[2]*z[33]*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[11]*state_[17]*z[33]*z[34]*z[4]*z[5]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[146]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[146]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[33]*z[34]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[89]/sqrt(z[10]*z[12] + pow(z[33], 2));
  z[245] = -front_.r*(state_[10]*state_[11]*z[1]*z[3] - state_[10]*state_[9]*z[3] + state_[11]*state_[9]*z[0]*z[4] + state_[13]*z[89]) + state_[10]*state_[18]*z[1]*z[2]*z[33]*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[11]*state_[18]*z[33]*z[34]*z[4]*z[5]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[146]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[33]*z[34]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[89]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[18]*z[146]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0);
  z[246] = front_.r*(state_[10]*state_[13]*z[1]*z[5] + state_[11]*state_[13]*z[2]*z[4]) + state_[10]*state_[17]*z[1]*z[2]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[10]*state_[17]*z[1]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[17]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[17]*z[4]*z[5]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[86]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[88]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[8]*(-front_.r*state_[13]*z[36] + state_[17]*z[33]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[36]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[18]*z[2]*z[4]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[4]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)));
  z[247] = -rear_.R*z[0]*z[1]*z[195]/z[15] - rear_.R*z[0]*z[192]*z[4]/z[15] - z[0]*z[1]*z[195]*z[25] - z[0]*z[192]*z[25]*z[4];
  z[248] = -front_.R*state_[10]*z[1]*z[3]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[130]*z[3]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - z[108]*z[45] + z[157]*z[45] - z[229];
  z[249] = front_.R*z[123]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[130]*z[30]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[94]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[121] + front_.b*pow(z[66], 2) + z[108]*z[73] - z[157]*z[73];
  z[250] = -front_.R*z[123]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[134]*z[30]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[3]*z[4]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[94]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*z[121] - front_.b*pow(z[66], 2) - z[108]*z[73] + z[157]*z[73];
  z[251] = front_.R*state_[10]*z[1]*z[3]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[130]*z[3]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[130]*z[30]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[45]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[54]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[45]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[54] + front_.a*z[66]*z[73] + front_.b*z[122] + front_.b*z[45]*z[66];
  z[252] = front_.R*state_[10]*z[1]*z[3]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[134]*z[3]*z[4]*z[73]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[134]*z[30]*z[45]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[3]*z[4]*z[45]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[54]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[45]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[54] + front_.a*z[66]*z[73] + front_.b*z[122] + front_.b*z[45]*z[66];
  z[253] = 3*state_[17]*z[129]*z[2]*z[33]*z[34]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - 3*state_[18]*z[129]*pow(z[33], 2)*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[18]*z[129]*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[8]*(-front_.r*(-state_[10]*z[0] - state_[11]*z[3]*z[4] + state_[13]*z[34]) + z[186]) + z[244];
  z[254] = -3*state_[17]*z[129]*pow(z[33], 2)*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[17]*z[129]*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - 3*state_[18]*z[129]*z[2]*z[33]*z[34]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - state_[8]*(state_[17]*z[2]*z[33]*z[34]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*pow(z[33], 2)*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[34]/sqrt(z[10]*z[12] + pow(z[33], 2))) + z[245];
  z[255] = front_.r*z[51] - state_[10]*state_[17]*z[1]*z[2]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[10]*state_[17]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[17]*z[1]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[17]*z[4]*z[5]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[1]*z[129]*z[2]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + 3*state_[17]*z[129]*z[2]*z[4]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[17]*z[161]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[0]*z[129]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - 3*state_[18]*z[129]*z[33]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - state_[18]*z[161]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[63]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[18]*z[77]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[8]*z[215];
  z[256] = -front_.r*z[105] + state_[10]*state_[18]*z[1]*z[2]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[10]*state_[18]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[18]*z[1]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[18]*z[4]*z[5]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[0]*z[129]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - 3*state_[17]*z[129]*z[33]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - state_[17]*z[161]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[63]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[17]*z[77]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[1]*z[129]*z[2]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - 3*state_[18]*z[129]*z[2]*z[4]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - state_[18]*z[161]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[8]*z[212];
  z[257] = -front_.r*z[105] + state_[10]*state_[18]*z[1]*z[2]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[10]*state_[18]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[18]*z[1]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[18]*z[4]*z[5]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[0]*z[133]*z[2]*z[4]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) - 3*state_[17]*z[133]*z[33]*z[77]/(2*pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0)) - state_[17]*z[166]*z[33]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) + state_[17]*z[63]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[17]*z[77]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[1]*z[133]*z[2]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) - 3*state_[18]*z[133]*z[2]*z[4]*z[77]/(2*pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0)) - state_[18]*z[166]*z[2]*z[4]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) - state_[8]*z[212];
  z[258] = -3*state_[17]*z[129]*z[2]*z[4]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[17]*z[129]*z[4]*z[5]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[178]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + 3*state_[18]*z[129]*z[33]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[18]*z[129]*z[36]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[178]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + z[246];
  z[259] = 3*state_[17]*z[129]*z[33]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[17]*z[129]*z[36]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[178]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + 3*state_[18]*z[129]*z[2]*z[4]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - state_[18]*z[129]*z[4]*z[5]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[178]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[8]*(-front_.r*state_[13]*z[4]*z[5] - state_[17]*z[2]*z[4]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[4]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[18]*z[33]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[36]/sqrt(z[10]*z[12] + pow(z[33], 2))) + z[239];
  z[260] = 3*state_[17]*z[135]*z[33]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[17]*z[135]*z[36]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[180]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + 3*state_[18]*z[135]*z[2]*z[4]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - state_[18]*z[135]*z[4]*z[5]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[180]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[8]*(-front_.r*state_[13]*z[4]*z[5] - state_[17]*z[2]*z[4]*z[91]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[4]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[18]*z[33]*z[91]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[18]*z[36]/sqrt(z[10]*z[12] + pow(z[33], 2))) + z[239];
  z[261] = -front_.R*state_[10]*z[1]*z[3]*z[30]*z[34]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*state_[10]*z[1]*z[3]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[30]*z[34]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*state_[9]*z[0]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[120]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[123]*z[3]*z[30]*z[34]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + 3*front_.R*z[130]*z[3]*z[30]*z[34]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) + front_.R*z[130]*z[3]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[147]*z[3]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*pow(z[30], 2)*z[34]*z[66]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*z[66]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[34]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - 2*front_.a*z[66]*z[73] - front_.b*z[122] - front_.b*z[45]*z[66] - z[226]*z[45];
  z[262] = front_.R*state_[10]*z[1]*z[3]*z[30]*z[34]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[10]*z[1]*z[3]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[30]*z[34]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[9]*z[0]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[123]*z[3]*z[30]*z[34]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 3*front_.R*z[134]*z[3]*z[30]*z[34]*z[4]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) - front_.R*z[134]*z[3]*z[4]*z[73]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[152]*z[3]*z[4]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*pow(z[30], 2)*z[34]*z[66]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[30]*z[66]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[34]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + 2*front_.a*z[66]*z[73] + front_.b*z[122] + front_.b*z[45]*z[66] + z[227]*z[45]/2;
  z[263] = front_.R*z[1]*z[3]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[106]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[123]*z[3]*z[4]*z[5]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[123]*z[30]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[130]*z[3]*z[4]*z[5]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[130]*z[30]*z[40]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + 3*front_.R*z[130]*z[30]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) - front_.R*z[158]*z[30]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[3]*z[4]*z[40]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[40]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[4]*z[66]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[40]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[62]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[76]*z[94]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + 2*front_.b*z[40]*z[66] + z[108]*z[46] - z[157]*z[46] - z[236]*z[73];
  z[264] = front_.R*z[120]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[123]*pow(z[30], 2)*z[34]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[123]*z[34]/sqrt(z[11]*z[12] + pow(z[30], 2)) - 3*front_.R*z[130]*pow(z[30], 2)*z[34]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) - front_.R*z[130]*z[30]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[130]*z[34]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[147]*z[30]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[30]*z[34]*z[4]*z[66]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[66]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[4]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[34]*z[94]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[73]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[89]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.a*z[122] - front_.b*z[66]*z[73] + z[108]*z[66] - z[157]*z[66] + z[226]*z[73];
  z[265] = -front_.R*z[120]*z[30]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[123]*pow(z[30], 2)*z[34]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[123]*z[34]/sqrt(z[11]*z[12] + pow(z[30], 2)) + 3*front_.R*z[134]*pow(z[30], 2)*z[34]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) + front_.R*z[134]*z[30]*z[73]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[134]*z[34]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[152]*z[30]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[3]*z[30]*z[34]*z[4]*z[66]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[3]*z[4]*z[66]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[34]*z[94]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[73]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[89]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*z[122] + front_.b*z[66]*z[73] - z[108]*z[66] + z[157]*z[66] - z[227]*z[73]/2;
  z[266] = front_.R*state_[10]*z[1]*z[3]*z[40]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[10]*z[1]*z[3]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[10]*z[3]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[1]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[4]*z[40]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[4]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[1]*z[123]*z[3]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[1]*z[130]*z[3]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[106]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[123]*z[3]*z[4]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[130]*z[3]*z[4]*z[40]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 3*front_.R*z[130]*z[3]*z[4]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) + front_.R*z[158]*z[3]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[5]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[40]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[40]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[66]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + 2*front_.a*z[40]*z[66] + z[108]*z[24] - z[157]*z[24] + z[236]*z[45];
  z[267] = -front_.a*z[107] + z[263] - z[73]*z[83];
  z[268] = front_.a*z[104] - z[263] + z[73]*z[79];
  z[269] = -front_.b*z[104] - z[266] - z[45]*z[79];
  z[270] = front_.b*z[107] + z[266] + z[45]*z[83];
  z[271] = -front_.R*state_[8]*z[130]*z[30]*z[33]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[8]*z[3]*z[33]*z[4]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[3]*z[33]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[30]*z[99]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[33]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[0]*z[4]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[123]*z[30]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[123]*z[36]/sqrt(z[11]*z[12] + pow(z[30], 2)) - 3*front_.R*z[130]*z[30]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) - front_.R*z[130]*z[36]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[177]*z[30]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[66]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[87]*z[94]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[88]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*z[113] - 2*front_.b*state_[8]*z[33]*z[66] - state_[8]*z[108]*z[36] + state_[8]*z[157]*z[36] - z[237]*z[73] + z[58]*z[73];
  z[272] = -front_.R*state_[10]*state_[8]*z[1]*z[3]*z[33]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[10]*z[0]*z[1]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[10]*z[1]*z[3]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*state_[8]*state_[9]*z[0]*z[33]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[130]*z[3]*z[33]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*state_[8]*z[3]*z[4]*z[99]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[30]*z[33]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[30]*z[33]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[4]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[9]*z[3]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[0]*z[123]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[0]*z[130]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[123]*z[3]*z[4]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + 3*front_.R*z[130]*z[3]*z[4]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) + front_.R*z[177]*z[3]*z[4]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*z[66]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[36]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - 2*front_.a*state_[8]*z[33]*z[66] + front_.b*z[113] + state_[8]*z[0]*z[108]*z[4] - state_[8]*z[0]*z[157]*z[4] + z[237]*z[45] - z[45]*z[58];
  z[273] = -front_.R*state_[8]*z[134]*z[30]*z[33]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*state_[8]*z[3]*z[33]*z[4]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[3]*z[33]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[30]*z[99]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[33]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[0]*z[4]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[123]*z[30]*z[90]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[123]*z[36]/sqrt(z[11]*z[12] + pow(z[30], 2)) - 3*front_.R*z[134]*z[30]*z[90]*(state_[13] - z[66])/(4*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) - front_.R*z[134]*z[36]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[179]*z[30]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[3]*z[4]*z[66]*z[90]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[88]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[90]*z[94]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.a*z[113] - 2*front_.b*state_[8]*z[33]*z[66] - state_[8]*z[108]*z[36] + state_[8]*z[157]*z[36] - z[238]*z[73] + z[58]*z[73];
  z[274] = -front_.r*z[0]*z[1]*z[249] - front_.r*z[0]*z[2]*z[251]*z[4] - front_.r*z[0]*z[248]*z[4]*z[5];
  z[275] = front_.R*state_[10]*z[1]*z[3]*z[30]*z[34]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[10]*z[1]*z[3]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[30]*z[34]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[9]*z[0]*z[4]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[30]*z[34]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 3*front_.R*z[130]*z[3]*z[30]*z[34]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) - front_.R*z[130]*z[3]*z[4]*z[66]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + 3*front_.R*z[130]*pow(z[30], 2)*z[34]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) - front_.R*z[130]*z[34]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[147]*z[3]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[147]*z[30]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[30]*z[34]*z[4]*z[45]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[45]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*pow(z[30], 2)*z[34]*z[54]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*pow(z[30], 2)*z[34]*z[73]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[30]*z[34]*z[45]*z[94]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*pow(z[73], 2)/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[34]*z[54]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[34]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[45]*z[89]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*pow(z[73], 2) - front_.b*z[45]*z[73] - z[229];
  z[276] = -front_.R*state_[10]*state_[8]*z[1]*z[3]*z[33]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[10]*z[0]*z[1]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[10]*z[1]*z[3]*z[90]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*state_[8]*state_[9]*z[0]*z[33]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[134]*z[3]*z[33]*z[4]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*state_[8]*z[3]*z[4]*z[99]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[30]*z[33]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[30]*z[33]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[4]*z[90]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*state_[9]*z[3]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[0]*z[123]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[0]*z[134]*z[4]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[123]*z[3]*z[4]*z[90]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + 3*front_.R*z[134]*z[3]*z[4]*z[90]*(state_[13] - z[66])/(4*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) + front_.R*z[179]*z[3]*z[4]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[30]*z[66]*z[90]*(state_[13] - z[66])/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[36]*z[66]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - 2*front_.a*state_[8]*z[33]*z[66] + front_.b*z[113] + state_[8]*z[0]*z[108]*z[4] - state_[8]*z[0]*z[157]*z[4] + z[238]*z[45] - z[45]*z[58];
  z[277] = front_.R*state_[10]*z[1]*z[3]*z[30]*z[34]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[10]*z[1]*z[3]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[30]*z[34]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[9]*z[0]*z[4]*z[66]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[30]*z[34]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 3*front_.R*z[134]*z[3]*z[30]*z[34]*z[4]*z[73]/(2*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) - front_.R*z[134]*z[3]*z[4]*z[66]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + 3*front_.R*z[134]*pow(z[30], 2)*z[34]*z[45]/(2*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) - front_.R*z[134]*z[34]*z[45]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[152]*z[3]*z[4]*z[73]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[152]*z[30]*z[45]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[3]*z[30]*z[34]*z[4]*z[45]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[45]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*pow(z[30], 2)*z[34]*z[54]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*pow(z[30], 2)*z[34]*z[73]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[30]*z[34]*z[45]*z[94]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*pow(z[73], 2)/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[34]*z[54]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[34]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[45]*z[89]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*pow(z[73], 2) - front_.b*z[45]*z[73] - z[229];
  z[278] = -front_.R*state_[10]*z[1]*z[3]*z[46]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[10]*z[1]*z[3]*z[73]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[10]*z[3]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[1]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[4]*z[46]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[4]*z[73]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[1]*z[120]*z[3]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[1]*z[130]*z[3]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[1]*z[3]*z[45]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[103]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[4]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[130]*z[24]*z[30]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[130]*z[3]*z[4]*z[45]*z[5]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[130]*z[3]*z[4]*z[46]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 3*front_.R*z[130]*z[3]*z[4]*z[73]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) + 3*front_.R*z[130]*z[30]*z[45]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) + front_.R*z[158]*z[3]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[158]*z[30]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[24]*z[3]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[24]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[40]*z[45]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[45]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[5]*z[54]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[4]*z[5]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[40]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[46]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[54]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[30]*z[55]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[73]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[45]*z[62]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[45]*z[76]*z[94]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.a*z[40]*z[73] - front_.a*z[46]*z[66] + front_.a*z[55] + front_.b*z[24]*z[66] - front_.b*z[40]*z[45] - front_.b*z[98];
  z[279] = -front_.R*state_[10]*z[1]*z[3]*z[46]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[10]*z[1]*z[3]*z[73]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[10]*z[3]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[1]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[9]*z[0]*z[4]*z[46]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[4]*z[73]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[1]*z[120]*z[3]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[1]*z[134]*z[3]*z[73]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[1]*z[3]*z[45]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[103]*z[3]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[4]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[134]*z[24]*z[30]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[134]*z[3]*z[4]*z[45]*z[5]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[134]*z[3]*z[4]*z[46]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - 3*front_.R*z[134]*z[3]*z[4]*z[73]*z[76]/(2*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) + 3*front_.R*z[134]*z[30]*z[45]*z[76]/(2*pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0)) + front_.R*z[164]*z[3]*z[4]*z[73]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) - front_.R*z[164]*z[30]*z[45]/(2*pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0)) + front_.R*z[24]*z[3]*z[4]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[24]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[40]*z[45]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[3]*z[4]*z[45]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[5]*z[54]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[3]*z[4]*z[5]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[40]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[46]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[54]*z[76]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[30]*z[55]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[30]*z[73]*z[76]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[45]*z[62]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[45]*z[76]*z[94]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.a*z[40]*z[73] - front_.a*z[46]*z[66] + front_.a*z[55] + front_.b*z[24]*z[66] - front_.b*z[40]*z[45] - front_.b*z[98];
  z[280] = -front_.R*state_[10]*state_[8]*z[1]*z[3]*z[36]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[10]*z[0]*z[1]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[10]*z[1]*z[3]*z[73]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*state_[8]*state_[9]*z[0]*z[36]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[0]*z[12]*z[3]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[0]*z[130]*z[30]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[8]*z[0]*z[4]*z[94]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[130]*z[3]*z[36]*z[4]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*state_[8]*z[3]*z[33]*z[4]*z[45]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[3]*z[4]*z[88]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[8]*z[30]*z[33]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*state_[8]*z[30]*z[36]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*state_[9]*z[0]*z[4]*z[73]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*state_[9]*z[3]*z[4]*z[73]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[0]*z[120]*z[4]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[0]*z[130]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[0]*z[4]*z[45]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[120]*z[3]*z[4]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - 3*front_.R*z[130]*z[3]*z[4]*z[73]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) + 3*front_.R*z[130]*z[30]*z[45]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 5.0/2.0) + front_.R*z[130]*z[36]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[177]*z[3]*z[4]*z[73]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[177]*z[30]*z[45]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[3]*z[4]*z[45]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*z[44]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[30]*z[54]*z[87]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[30]*z[73]*z[87]*(state_[13] - z[66])/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) - front_.R*z[36]*z[54]/sqrt(z[11]*z[12] + pow(z[30], 2)) + front_.R*z[36]*z[73]*(state_[13] - z[66])/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.R*z[45]*z[87]*z[94]/pow(z[11]*z[12] + pow(z[30], 2), 3.0/2.0) + front_.R*z[45]*z[88]/sqrt(z[11]*z[12] + pow(z[30], 2)) - front_.a*state_[8]*z[33]*z[73] - front_.a*state_[8]*z[36]*z[66] - front_.a*z[44] - front_.b*state_[8]*z[0]*z[4]*z[66] - front_.b*state_[8]*z[33]*z[45] + front_.b*z[109];
  z[281] = -front_.Ixz;
  z[282] = -front_.b;
  z[283] = -rear_.b;
  z[284] = -front_.m;
  z[285] = -rear_.m;
  z[286] = -front_.r;
  z[287] = -state_[11];
  z[288] = -state_[13];
  z[289] = -state_[8];
  z[290] = -state_[9];
  z[291] = z[289]*z[290];
  z[292] = -z[1]*z[286];
  z[293] = -z[286]*z[4];
  z[294] = state_[10]*z[0];
  z[295] = -z[0]*z[289];
  z[296] = -z[290]*z[3];
  z[297] = -z[0];
  z[298] = -2*z[297];
  z[299] = -z[1];
  z[300] = -z[2];
  z[301] = -z[3];
  z[302] = -z[4];
  z[303] = z[297]*z[299];
  z[304] = z[297]*z[300];
  z[305] = z[297]*z[302];
  z[306] = -z[297]*z[5];
  z[307] = z[299]*z[300];
  z[308] = z[299]*z[301];
  z[309] = z[299]*z[302];
  z[310] = -z[299]*z[5];
  z[311] = z[300]*z[301];
  z[312] = z[300]*z[302];
  z[313] = z[301]*z[302];
  z[314] = -z[301]*z[5];
  z[315] = -z[302]*z[5];
  z[316] = -z[12]*z[286];
  z[317] = -z[10];
  z[318] = -z[12];
  z[319] = z[297]/z[301];
  z[320] = rear_.R/z[15];
  z[321] = -z[301]*z[318];
  z[322] = -z[301]/z[15];
  z[323] = z[7]*z[9];
  z[324] = -z[318]*z[7];
  z[325] = -z[8]/z[301];
  z[326] = z[317]*z[318];
  z[327] = -z[11]*z[318];
  z[328] = z[300]*z[318]*z[5];
  z[329] = z[25]*z[297];
  z[330] = z[25]*z[301];
  z[331] = z[282]*z[34];
  z[332] = z[286]*z[34];
  z[333] = z[286]*z[36];
  z[334] = -z[286]*z[33];
  z[335] = z[297]*z[34];
  z[336] = z[299]*z[34];
  z[337] = -z[34]*z[5];
  z[338] = -z[30]*z[300];
  z[339] = -z[299]*z[33];
  z[340] = z[33]*z[5];
  z[341] = -pow(z[30], 2);
  z[342] = z[34]*z[36];
  z[343] = -z[33]*z[34];
  z[344] = -z[33]*z[36];
  z[345] = front_.R/pow(z[327] - z[341], 3.0/2.0);
  z[346] = front_.R/sqrt(z[327] - z[341]);
  z[347] = -z[302]/sqrt(z[326] + pow(z[33], 2));
  z[348] = -z[318]/(z[326] + pow(z[33], 2));
  z[349] = z[33]/(z[326] + pow(z[33], 2));
  z[350] = z[30]*z[345];
  z[351] = z[33]*z[349];
  z[352] = -z[341]*z[345];
  z[353] = z[343]*z[349]/sqrt(z[326] + pow(z[33], 2));
  z[354] = z[74]/pow(z[326] + pow(z[33], 2), 3.0/2.0);
  z[355] = z[77]/(z[326] + pow(z[33], 2));
  z[356] = z[114]*z[33];
  z[357] = z[86]/pow(z[326] + pow(z[33], 2), 3.0/2.0);
  z[358] = z[86]/(z[326] + pow(z[33], 2));
  z[359] = z[92]/(z[326] + pow(z[33], 2));
  z[360] = -z[128]*z[297];
  z[361] = z[209]*z[5];
  z[362] = -z[232]*z[25];
  z[363] = z[241]/sqrt(z[326] + pow(z[33], 2));
  z[364] = z[114]*z[240];
  z[365] = z[243]/sqrt(z[326] + pow(z[33], 2));
  z[366] = z[114]*z[242];
  z[367] = -z[249]*z[293]*z[301];
  z[368] = -z[248]/sqrt(z[326] + pow(z[33], 2));
  z[369] = z[250]/sqrt(z[326] + pow(z[33], 2));
  z[370] = (3*state_[17]*z[135]*z[2]*z[33]*z[34]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - 3*state_[18]*z[135]*pow(z[33], 2)*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[18]*z[135]*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[8]*(-front_.r*(-state_[10]*z[0] - state_[11]*z[3]*z[4] + state_[13]*z[34]) + z[186]) + z[244])/sqrt(z[326] + pow(z[33], 2));
  z[371] = (-3*state_[17]*z[135]*pow(z[33], 2)*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[17]*z[135]*z[34]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - 3*state_[18]*z[135]*z[2]*z[33]*z[34]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) - state_[8]*(-state_[17]*z[2]*z[33]*z[35]*z[4]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) + state_[18]*pow(z[33], 2)*z[35]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) + state_[18]*z[34]/sqrt(z[10]*z[12] + pow(z[33], 2))) + z[245])/sqrt(z[326] + pow(z[33], 2));
  z[372] = (front_.r*z[51] - state_[10]*state_[17]*z[1]*z[2]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[10]*state_[17]*z[2]*z[4]/sqrt(z[10]*z[12] + pow(z[33], 2)) - state_[11]*state_[17]*z[1]*z[5]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[11]*state_[17]*z[4]*z[5]*z[77]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[17]*z[1]*z[133]*z[2]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) + 3*state_[17]*z[133]*z[2]*z[4]*z[77]/(2*pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0)) + state_[17]*z[166]*z[2]*z[4]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) - state_[18]*z[0]*z[133]*z[2]*z[4]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) - 3*state_[18]*z[133]*z[33]*z[77]/(2*pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0)) - state_[18]*z[166]*z[33]/(2*pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0)) + state_[18]*z[63]/sqrt(z[10]*z[12] + pow(z[33], 2)) + state_[18]*z[77]*z[99]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[8]*z[215])/sqrt(z[326] + pow(z[33], 2));
  z[373] = (-3*state_[17]*z[135]*z[2]*z[4]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[17]*z[135]*z[4]*z[5]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + state_[17]*z[180]*z[2]*z[4]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + 3*state_[18]*z[135]*z[33]*z[86]/pow(z[10]*z[12] + pow(z[33], 2), 5.0/2.0) + state_[18]*z[135]*z[36]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) - state_[18]*z[180]*z[33]/pow(z[10]*z[12] + pow(z[33], 2), 3.0/2.0) + z[246])/sqrt(z[326] + pow(z[33], 2));

  m[0] = 0;
  m[1] = -z[160]*z[303] + z[163]*z[305] + z[168]*z[308] - z[171]*z[313] + z[199]*z[33] + z[209]*z[36] + z[218]*z[305] - z[220]*z[30] + z[221]*z[34] - z[228]*z[313] + z[284]*(-z[124]*z[272] + z[127]*z[271] + z[198]*z[254] - z[204]*z[248] + z[205]*z[253] - z[211]*z[249] + z[240]*(z[124]*z[30] - z[127]*z[313] - z[204]*z[36] - z[211]*z[305] + z[33]*z[53] + z[34]*z[57]) + z[242]*(z[204]*z[315] - z[211]*z[299] + z[312]*z[53]) - z[251]*z[53] - z[280]*z[57]) + z[285]*(-z[116]*(z[26]*z[301] + z[27]*z[297] - z[303]*z[49] + z[305]*z[47] - z[308]*z[50] + z[313]*z[48]) + z[128]*(z[299]*z[47] + z[302]*z[49]) + z[131]*(-z[27]*z[301] - z[303]*z[50] + z[305]*z[48]) + z[173]*(z[299]*z[48] + z[302]*z[50]) - z[176]*z[26] - z[192]*z[49] - z[195]*z[47] + z[223]*z[27] - z[232]*z[50] + z[234]*z[48]) + z[297]*(z[132] + z[24]*z[43] - z[28]*z[42]) + z[301]*(-rear_.Iyy*z[291]*z[301] + z[24]*z[68] - z[28]*z[67]);
  m[2] = z[159]*z[308] + z[160]*z[313] - z[162]*z[313] + z[163]*z[308] + z[189]*z[297] + z[199]*z[302]*z[311] + z[218]*z[308] + z[224]*z[34] - z[225]*z[30] - z[231]*z[313] + z[284]*(z[124]*z[269] - z[127]*z[268] + z[197]*z[248] + z[198]*z[256] - z[203]*z[249] + z[205]*z[255] + z[240]*(-z[124]*z[305]*z[5] + z[127]*z[303] + z[197]*z[36] - z[203]*z[305] + z[302]*z[304]*z[57] + z[33]*z[41]) + z[242]*(z[124]*z[310] - z[127]*z[302] - z[197]*z[315] - z[203]*z[299] + z[307]*z[57] + z[312]*z[41]) - z[251]*z[41] + z[278]*z[57]) + z[285]*(-z[116]*(z[301]*z[31] - z[301]*z[320]*z[323] - z[303]*z[48] - z[305]*z[50] - z[320]*z[321]*z[7]) - z[128]*(z[299]*z[50] - z[302]*z[48]) + z[137]*z[27] - z[176]*z[31] - z[192]*z[301]*z[303]*z[320] + z[195]*z[301]*z[305]*z[320] - z[200]*z[50] - z[202]*z[48]) + z[313]*z[361];
  m[3] = z[199]*z[30] - z[207]*z[30] + z[209]*z[34] + z[216]*z[34] - z[230]*z[313] + z[284]*(z[124]*z[261] - z[127]*z[264] - z[167]*z[248] - z[191]*z[249] + z[198]*z[259] + z[205]*z[258] + z[240]*(z[124]*z[33] - z[167]*z[36] - z[191]*z[305] + z[33]*z[331] + z[36]*z[57]) + z[242]*(z[124]*z[312] + z[167]*z[315] - z[191]*z[299] + z[282]*z[300]*z[302]*z[34] - z[315]*z[57]) - z[251]*z[331] + z[275]*z[57]);
  m[4] = 0;
  m[5] = 0;
  m[6] = 0;
  m[7] = 0;
  m[8] = 0;
  m[9] = z[168]*z[302] + z[171]*z[299] - z[220]*z[315] + z[221]*z[312] + z[228]*z[299] + z[284]*(z[112]*z[272] - z[117]*z[271] + z[139]*z[280] - z[156]*z[248] - z[174]*z[249] + z[206]*z[254] + z[214]*z[253] + z[219]*z[251] + z[240]*(-z[112]*z[30] + z[117]*z[313] - z[139]*z[34] - z[156]*z[36] - z[174]*z[305] - z[219]*z[33]) + z[242]*(z[156]*z[315] - z[174]*z[299] - z[219]*z[312]) - z[248]*z[286]*z[30] - z[251]*z[332] - z[253]*z[286] + z[271]*z[293]*z[297] + z[272]*z[333] + z[280]*z[334] + z[367]) + z[285]*(-z[116]*z[319]*z[320] + z[116]*(-z[21]*z[297] - z[298]*z[301]*z[320]*z[9] - z[298]*z[320]*z[321] - z[318]*z[320]*z[325] + z[320]*z[325]*z[9]) - z[131]*z[25] - z[131]*(z[21]*z[301] + z[320]*z[323] + z[320]*z[324]) - z[176]*z[297]*z[320] - z[176]*z[329] - z[192]*z[308]*z[320] + z[195]*z[313]*z[320] + z[21]*z[223] + z[223]*z[330] - z[232]*z[303]*z[320] + z[233] - z[234]*z[25]*z[305] - z[234]*z[305]*z[320] + z[303]*z[362]);
  m[10] = z[159]*z[302] - z[160]*z[299] + z[162]*z[299] + z[163]*z[302] - z[199]*z[307] + z[209]*z[310] + z[218]*z[302] + z[224]*z[312] - z[225]*z[315] + z[231]*z[299] + z[284]*(-z[112]*z[269] + z[117]*z[268] - z[139]*z[278] - z[154]*z[248] + z[196]*z[249] + z[206]*z[256] + z[214]*z[255] - z[217]*z[251] + z[240]*(z[112]*z[305]*z[5] - z[117]*z[303] - z[139]*z[302]*z[304] - z[154]*z[36] + z[196]*z[305] + z[217]*z[33]) + z[242]*(-z[112]*z[310] + z[117]*z[302] - z[139]*z[307] + z[154]*z[315] + z[196]*z[299] + z[217]*z[312]) - z[255]*z[286] - z[268]*z[293]*z[297] - z[269]*z[333] + z[274] - z[278]*z[334]) + z[285]*(z[116]*z[18]*z[301] + z[137]*z[21] + z[137]*z[330] + z[176]*z[18] - z[200]*z[25]*z[303] - z[200]*z[303]*z[320] + z[202]*z[25]*z[305] + z[202]*z[305]*z[320] + z[247]);
  m[11] = z[199]*z[315] - z[207]*z[315] + z[209]*z[312] + z[216]*z[312] + z[230]*z[299] + z[284]*(-z[112]*z[261] + z[117]*z[264] - z[139]*z[275] + z[148]*z[248] - z[188]*z[249] + z[206]*z[259] - z[210]*z[251] + z[214]*z[258] + z[240]*(-z[112]*z[33] - z[139]*z[36] + z[148]*z[36] - z[188]*z[305] + z[210]*z[33]) + z[242]*(-z[112]*z[312] + z[139]*z[315] - z[148]*z[315] - z[188]*z[299] + z[210]*z[312]) + z[248]*z[334] - z[251]*z[333] - z[258]*z[286] - z[261]*z[333] - z[264]*z[293]*z[297] - z[275]*z[334]);
  m[12] = 0;
  m[13] = 0;
  m[14] = 0;
  m[15] = 0;
  m[16] = 0;
  m[17] = -z[132] + z[220]*z[300] - z[221]*z[5] - z[24]*z[295]*(rear_.Ixz*z[1] + rear_.Izz*z[302]) + z[28]*z[295]*(rear_.Ixx*z[1] + rear_.Ixz*z[302]) + z[284]*(z[115]*z[271] - z[149]*z[248] + z[153]*z[251] - z[169]*z[249] + z[182]*z[254] + z[194]*z[253] + z[240]*(-z[115]*z[313] - z[149]*z[36] - z[153]*z[33] - z[169]*z[305] + z[30]*z[97] + z[34]*z[96]) + z[242]*z[286]*z[297] + z[242]*(z[149]*z[315] - z[153]*z[312] - z[169]*z[299]) - z[254]*z[286]*z[301] + z[271]*z[292]*z[301] - z[272]*z[293]*z[314] - z[272]*z[97] + z[274] - z[280]*z[293]*z[311] - z[280]*z[96]) + z[285]*(rear_.a*z[234] - z[116]*z[27] + z[128]*z[329] + z[131]*z[26] - z[173]*z[21] - z[173]*z[330] - z[232]*z[283] - z[234]*z[25]*z[308] + z[247] - z[313]*z[362] - z[320]*z[360]);
  m[18] = -z[189] - z[224]*z[5] + z[225]*z[300] + z[284]*(-z[115]*z[268] + z[142]*z[251] + z[143]*z[248] - z[155]*z[249] + z[182]*z[256] + z[194]*z[255] + z[240]*(z[115]*z[303] - z[142]*z[33] + z[143]*z[36] - z[155]*z[305] + z[302]*z[304]*z[96] - z[305]*z[5]*z[97]) + z[242]*(-z[115]*z[302] - z[142]*z[312] - z[143]*z[315] - z[155]*z[299] + z[307]*z[96] + z[310]*z[97]) - z[248]*z[292]*z[314] - z[251]*z[292]*z[311] - z[256]*z[286]*z[301] - z[268]*z[292]*z[301] + z[269]*z[293]*z[314] + z[269]*z[97] + z[278]*z[293]*z[311] + z[278]*z[96] + z[367]) + z[285]*(-rear_.a*z[202] + z[116]*(-rear_.a*z[0]*z[299] + z[283]*z[305]) - z[128]*z[18] + z[200]*z[25]*z[313] - z[200]*z[283] + z[202]*z[25]*z[308] + z[233]);
  m[19] = -z[199]*z[300] + z[207]*z[300] - z[216]*z[5] + z[284]*(-z[115]*z[264] - z[144]*z[251] - z[145]*z[248] + z[182]*z[259] + z[185]*z[249] + z[194]*z[258] + z[240]*(z[144]*z[33] - z[145]*z[36] + z[185]*z[305] + z[33]*z[97] + z[36]*z[96]) + z[242]*(z[144]*z[312] + z[145]*z[315] + z[185]*z[299] + z[312]*z[97] - z[315]*z[96]) - z[248]*z[293]*z[311] + z[251]*z[293]*z[314] - z[259]*z[286]*z[301] + z[261]*z[293]*z[314] + z[261]*z[97] - z[264]*z[292]*z[301] + z[275]*z[293]*z[311] + z[275]*z[96]) - z[361];
  m[20] = 0;
  m[21] = 0;
  m[22] = 0;
  m[23] = 0;
  m[24] = 0;
  m[25] = front_.Izz*z[289]*(-z[294]*z[299] + z[296]*z[302]) - z[187] - z[281]*z[289]*(z[290]*z[30] + z[59]) + z[284]*(z[114]*z[254]*z[312] + z[114]*z[280] - z[165]*z[240]*z[33] - z[165]*z[242]*z[312] + z[165]*z[251] - z[242]*z[293]*z[301] - z[248]*(z[286]*z[321]*z[5] - z[292]*z[30]) + z[251]*(z[292]*z[34] - z[311]*z[316]) + z[253]*z[292] + z[253]*z[356] - z[254]*z[293]*z[297] + z[272]*z[65] - z[280]*z[75] - z[34]*z[364]) + z[289]*z[66]*(-front_.Ixx*z[36] + z[281]*z[305]);
  m[26] = front_.Iyy*z[28]*z[300]*z[73] + front_.Iyy*z[28]*z[5]*z[66] + front_.J*z[28]*z[288]*z[5] - z[110]*z[28]*z[300] - z[170] + z[284]*(z[114]*z[256]*z[312] - z[114]*z[278] + z[150]*z[240]*z[33] + z[150]*z[242]*z[312] - z[150]*z[251] + z[240]*z[293] + z[242]*z[292]*z[297] - z[248]*(-z[292]*z[305]*z[5] - z[293]*z[36]) + z[251]*z[72] + z[255]*z[292] + z[255]*z[356] - z[256]*z[293]*z[297] - z[269]*z[65] + z[278]*z[75] - z[302]*z[304]*z[364] - z[307]*z[366]);
  m[27] = -z[230] + z[284]*(z[114]*z[259]*z[312] - z[114]*z[275] - z[141]*z[240]*z[33] - z[141]*z[242]*z[312] + z[141]*z[251] - z[248]*z[75] - z[251]*z[65] + z[258]*z[292] + z[258]*z[356] - z[259]*z[293]*z[297] - z[261]*z[65] + z[275]*z[75] + z[315]*z[366] - z[36]*z[364]);
  m[28] = 0;
  m[29] = 0;
  m[30] = 0;
  m[31] = 0;
  m[32] = 0;
  m[33] = -rear_.J*z[291]*z[297] + z[285]*(z[128]*z[329] - z[173]*z[330] - z[234]*z[25]*z[308] + z[247] - z[313]*z[362] - z[320]*z[360]);
  m[34] = -z[285]*z[330]*(z[192]*z[299] - z[195]*z[302] - z[200]*z[302] - z[202]*z[299]);
  m[35] = 0;
  m[36] = 0;
  m[37] = 0;
  m[38] = 0;
  m[39] = 0;
  m[40] = 0;
  m[41] = front_.J*z[289]*(z[1]*z[287]*z[306] - z[2]*z[287]*z[301] - z[290]*z[34] - z[294]*z[312]) + z[284]*(z[136]*z[254] + z[140]*z[253] - z[219]*z[242] + z[240]*(z[305]*z[350]*z[87] - z[313]*z[345]*z[36]*z[87]) + z[242]*z[332] - z[248]*z[305]*z[346] - z[248]*z[313]*z[345]*z[87] - z[248]*(z[293]*z[337] + z[293]*z[338]) + z[249]*z[346]*z[36] + z[249]*z[350]*z[87] - z[249]*(-z[292]*z[34] + z[311]*z[316]) + z[253]*z[293]*z[300] + z[254]*z[334] + z[271]*z[30]*z[346] - z[271]*z[75] - z[272]*z[313]*z[346] + z[272]*z[93]);
  m[42] = -front_.J*z[104] + z[284]*(z[136]*z[256] + z[140]*z[255] + z[213]*z[242] - z[240]*z[292]*z[300] - z[240]*(-z[30]*z[303]*z[346] + z[305]*z[350]*z[76] + z[308]*z[346]*z[36] - z[313]*z[345]*z[36]*z[76]) + z[242]*z[293]*z[304] - z[248]*z[308]*z[346] + z[248]*z[313]*z[345]*z[76] - z[248]*(z[292]*z[300]*z[36] - z[292]*z[340]) + z[249]*z[313]*z[346]*z[5] - z[249]*z[350]*z[76] + z[249]*z[72] + z[255]*z[293]*z[300] + z[256]*z[334] - z[268]*z[30]*z[346] + z[268]*z[75] + z[269]*z[313]*z[346] - z[269]*z[93]);
  m[43] = -front_.J*z[122] + z[284]*(z[136]*z[259] + z[140]*z[258] - z[240]*z[293]*z[5] + z[240]*(z[305]*z[34]*z[346] - z[305]*z[34]*z[352] + z[313]*z[33]*z[346] + z[313]*z[342]*z[350]) + z[242]*z[333] + z[242]*(z[193] - z[311]*z[318]*z[346]) + z[248]*z[30]*z[313]*z[34]*z[345] + z[249]*z[34]*z[346] - z[249]*z[34]*z[352] - z[249]*z[65] + z[258]*z[293]*z[300] + z[259]*z[334] + z[261]*z[313]*z[346] - z[261]*z[93] - z[264]*z[30]*z[346] + z[264]*z[75]);
  m[44] = 0;
  m[45] = 0;
  m[46] = 0;
  m[47] = 0;
  m[48] = 0;
  m[49] = z[285]*z[322]*(z[173] + z[234]*z[299] - z[235]*z[302]);
  m[50] = z[285]*z[322]*(-z[190]*z[302] + z[192]*z[299] - z[201]*z[302] - z[202]*z[299]);
  m[51] = 0;
  m[52] = 0;
  m[53] = 0;
  m[54] = 0;
  m[55] = 0;
  m[56] = 0;
  m[57] = z[285]*z[322]*(z[175]*z[297] - z[190]*z[313] + z[192]*z[308] - z[222]*z[301] + z[234]*z[305] + z[235]*z[303] - z[289]*(-z[19]*z[25] - z[20]*z[319]*z[320]) + z[78]);
  m[58] = z[285]*z[322]*(-z[137]*z[301] + z[190]*z[303] + z[192]*z[305] + z[201]*z[303] - z[202]*z[305]);
  m[59] = 0;
  m[60] = 0;
  m[61] = 0;
  m[62] = 0;
  m[63] = 0;
  m[64] = 0;
  m[65] = z[285]*(-z[175]*z[301] - z[190]*z[305] + z[192]*z[303] - z[222]*z[297] - z[234]*z[313] - z[235]*z[308]);
  m[66] = z[285]*(-z[137]*z[297] - z[192]*z[313] - z[195]*z[308] - z[200]*z[308] + z[202]*z[313]);
  m[67] = 0;
  m[68] = 0;
  m[69] = 0;
  m[70] = 0;
  m[71] = 0;
  m[72] = 0;
  m[73] = z[284]*(z[118]*z[273] + z[125]*z[276] - z[241]*z[312]*z[343]/pow(z[326] + pow(z[33], 2), 3.0/2.0) + z[243]*z[353] + z[248]*z[347]*(z[300]*z[34]*z[344]/(z[326] + pow(z[33], 2)) - z[337]*z[351] + z[337] + z[338]) - z[250]*(-z[304]*z[343]*z[348] - z[311]*z[318] - z[336]*z[351] + z[336])/sqrt(z[326] + pow(z[33], 2)) + z[312]*z[370] - z[33]*z[371] + z[34]*z[365]);
  m[74] = z[284]*(z[118]*z[267] + z[125]*z[270] + z[241]*z[312]*z[354] - z[243]*z[304]*z[347] + z[248]*(-z[307]*z[36] - z[310]*z[33] + z[312]*z[355]*z[36] + z[315]*z[349]*z[77])/sqrt(z[326] + pow(z[33], 2)) - z[250]*(-z[302]*z[33] - z[303]*z[312] + z[304]*z[348]*z[77] + z[339]*z[355])/sqrt(z[326] + pow(z[33], 2)) - z[257]*z[33]/sqrt(z[326] + pow(z[33], 2)) - z[307]*z[363] + z[312]*z[372] - z[349]*z[365]*z[74]);
  m[75] = z[284]*(z[118]*z[265] + z[125]*z[262] - z[241]*z[312]*z[357] - z[248]*z[347]*z[358]*z[84] - z[260]*z[33]/sqrt(z[326] + pow(z[33], 2)) + z[312]*z[373] + z[315]*z[363] + z[349]*z[365]*z[86] + z[36]*z[365] + z[369]*(-z[299]*z[36] + z[304]*z[348]*z[86] + z[306]*z[318] + z[339]*z[358]));
  m[76] = 0;
  m[77] = 0;
  m[78] = 0;
  m[79] = 0;
  m[80] = 0;
  m[81] = z[284]*(z[126]*z[276] + z[241]*z[353] + z[243]*z[312]*z[343]/pow(z[326] + pow(z[33], 2), 3.0/2.0) + z[250]*z[347]*(-z[301]*z[33] + z[307]*z[343]/(z[326] + pow(z[33], 2)) - z[335]*z[351] + z[335]) - z[252]*z[343]*(z[326]/(z[326] + pow(z[33], 2)) + z[351] - 2)/sqrt(z[326] + pow(z[33], 2)) + z[273]*z[347]*z[56] - z[280]*sqrt(z[326] + pow(z[33], 2)) - z[312]*z[371] - z[33]*z[370] + z[34]*z[363] + z[368]*(z[30]*z[33] + z[328]*z[343]/(z[326] + pow(z[33], 2)) + z[342]*z[351] - z[342]));
  m[82] = z[284]*(z[126]*z[270] - z[241]*z[304]*z[347] - z[243]*z[312]*z[354] + z[248]*(2*z[300]*z[309]*z[5] + z[302]*z[304]*z[36] + z[305]*z[340] + z[328]*z[355] + z[344]*z[355])/sqrt(z[326] + pow(z[33], 2)) + z[252]*(z[298]*z[312]*z[33] + 2*z[309]*z[317] + z[326]*z[80]/(z[326] + pow(z[33], 2)) + z[351]*z[80])/sqrt(z[326] + pow(z[33], 2)) - z[257]*z[312]/sqrt(z[326] + pow(z[33], 2)) + z[267]*z[347]*z[56] + z[279]*sqrt(z[326] + pow(z[33], 2)) + z[307]*z[365] - z[33]*z[372] - z[349]*z[363]*z[74] + z[369]*(-z[300]*z[318] - z[300]*z[324] - z[300]*z[9] - z[303]*z[33] + z[305]*z[349]*z[80] - z[307]*z[347]*z[80]/sqrt(z[326] + pow(z[33], 2))));
  m[83] = z[284]*(z[126]*z[262] + z[243]*z[312]*z[357] - z[250]*z[347]*(-z[297]*z[33]*z[359] + z[298]*z[36] - 2*z[299]*z[5] - z[307]*z[359])/2 - z[252]*(-4*z[300]*z[318]*z[5] + z[326]*z[359] - 4*z[344] + z[351]*z[92])/(2*sqrt(z[326] + pow(z[33], 2))) - z[260]*z[312]/sqrt(z[326] + pow(z[33], 2)) + z[265]*z[347]*z[56] + z[277]*sqrt(z[326] + pow(z[33], 2)) - z[315]*z[365] - z[33]*z[373] + z[349]*z[363]*z[86] + z[36]*z[363] + z[368]*(z[13]*z[318] + z[326] + z[328]*z[358] + pow(z[33], 2) + z[344]*z[358] - pow(z[36], 2)));
  m[84] = 0;
  m[85] = 0;
  m[86] = 0;
  m[87] = 0;
  m[88] = 0;
  m[89] = z[284]*(z[248]*z[36] - z[250]*z[305] - z[252]*z[33] + z[273]*z[313] + z[276]*z[30] + z[280]*z[34]);
  m[90] = z[284]*(z[248]*z[313]*z[5] - z[250]*z[308] - z[252]*z[302]*z[311] + z[267]*z[313] + z[270]*z[30] - z[279]*z[34]);
  m[91] = z[284]*(z[248]*z[34] - z[252]*z[30] + z[262]*z[30] + z[265]*z[313] - z[277]*z[34]);
  m[92] = 0;
  m[93] = 0;
  m[94] = 0;
  m[95] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (12, 12)
 *
 * @param[out] a C-array of with 144 elements
 */
//  void Bicycle::gif_ud_zero_du(double m[144]) const;
void Bicycle::gif_ud_zero_du(double m[144]) const
{
  double * z = new double[296];

  z[0] = -2;
  z[1] = sin(state_[1]);
  z[2] = sin(state_[2]);
  z[3] = sin(state_[3]);
  z[4] = cos(state_[1]);
  z[5] = cos(state_[2]);
  z[6] = cos(state_[3]);
  z[7] = pow(z[1], -z[0]);
  z[8] = pow(z[3], -z[0]);
  z[9] = pow(z[4], -z[0]);
  z[10] = pow(z[5], -z[0]);
  z[11] = sqrt(z[9]);
  z[12] = rear_.r*state_[9]*z[1];
  z[13] = -state_[10] - state_[8]*z[1];
  z[14] = rear_.Ixx*z[5] + rear_.Ixz*z[2];
  z[15] = rear_.Ixz*z[5] + rear_.Izz*z[2];
  z[16] = rear_.a*z[5] + rear_.b*z[2];
  z[17] = state_[10]*z[1] + state_[12]*z[1];
  z[18] = rear_.R/z[11] + rear_.r;
  z[19] = rear_.a*z[2] - rear_.b*z[5];
  z[20] = -state_[10]*z[4] - state_[12]*z[4];
  z[21] = state_[11]*z[5] + state_[13]*z[2]*z[3];
  z[22] = front_.Ixx*z[5]*z[6] + front_.Ixz*z[2];
  z[23] = front_.Ixz*z[5]*z[6] + front_.Izz*z[2];
  z[24] = state_[8]*z[4]*z[5] + state_[9]*z[2];
  z[25] = front_.a*z[2] - front_.b*z[5]*z[6];
  z[26] = state_[10]*z[2] - state_[8]*z[1]*z[2];
  z[27] = state_[10]*z[5] - state_[8]*z[1]*z[5];
  z[28] = state_[8]*z[2]*z[4] - state_[9]*z[5];
  z[29] = rear_.a*z[1]*z[5] + rear_.b*z[1]*z[2];
  z[30] = rear_.a*z[4]*z[5] + rear_.b*z[2]*z[4];
  z[31] = -z[24];
  z[32] = z[1]*z[3] - z[2]*z[4]*z[6];
  z[33] = rear_.Ixx*z[2]*z[4] - rear_.Ixz*z[4]*z[5];
  z[34] = rear_.Ixz*z[2]*z[4] - rear_.Izz*z[4]*z[5];
  z[35] = state_[10]*z[2]*z[3] - state_[11]*z[5]*z[6];
  z[36] = state_[10]*z[4]*z[5] - state_[9]*z[1]*z[2];
  z[37] = z[1]*z[2]*z[3] - z[4]*z[6];
  z[38] = rear_.R*z[2]*z[4]/z[11] + rear_.a;
  z[39] = -z[1]*z[6] - z[2]*z[3]*z[4];
  z[40] = -state_[10]*z[2]*z[4] - state_[9]*z[1]*z[5];
  z[41] = -z[1]*z[2]*z[6] - z[3]*z[4];
  z[42] = -z[0]*z[1]*z[2]*z[6] - z[0]*z[3]*z[4];
  z[43] = pow(z[32], -z[0]);
  z[44] = pow(z[37], -z[0]);
  z[45] = rear_.R*z[4]*z[5]/z[11] - rear_.b;
  z[46] = -state_[11] - z[24];
  z[47] = rear_.R*z[1]*z[4]*z[5]/z[11] - rear_.b*z[1];
  z[48] = -state_[11]*z[3] + state_[8]*z[3]*z[4]*z[5] + state_[9]*z[2]*z[3];
  z[49] = state_[10]*z[2]*z[5]*z[9] + state_[9]*z[1]*z[10]*z[4];
  z[50] = -rear_.R*z[1]*z[2]*z[4]/z[11] - rear_.a*z[1];
  z[51] = state_[11]*z[6] - state_[8]*z[4]*z[5]*z[6] - state_[9]*z[2]*z[6];
  z[52] = front_.Ixx*z[32] + front_.Ixz*z[4]*z[5];
  z[53] = front_.Ixz*z[32] + front_.Izz*z[4]*z[5];
  z[54] = rear_.a*z[0]*z[13]*z[5] + rear_.b*z[0]*z[13]*z[2];
  z[55] = z[1]*z[37] - z[2]*z[3];
  z[56] = front_.a*z[4]*z[5] - front_.b*z[32];
  z[57] = state_[10]*z[3]*z[4]*z[5] - state_[11]*z[1]*z[3] + state_[11]*z[2]*z[4]*z[6];
  z[58] = -state_[10]*z[4]*z[5]*z[6] + state_[11]*z[1]*z[6] + state_[11]*z[2]*z[3]*z[4];
  z[59] = -z[13]*z[6] + z[28]*z[3];
  z[60] = -state_[15]*z[4]/z[11] - state_[9]*z[18];
  z[61] = -z[13]*z[3] - z[28]*z[6];
  z[62] = z[10]*z[9] + z[43];
  z[63] = z[10]*z[8] + z[44];
  z[64] = -rear_.R*state_[9]*z[1]/z[11] + state_[9]*z[1]*z[18];
  z[65] = -rear_.a*z[31] + rear_.b*z[28];
  z[66] = -z[10]*z[4]*z[6] + z[2]*z[32];
  z[67] = front_.r*z[1]*z[10]*z[6] - front_.r*z[2]*z[41];
  z[68] = sqrt(z[62]);
  z[69] = pow(z[62], 3.0/2.0);
  z[70] = sqrt(z[63]);
  z[71] = pow(z[63], 3.0/2.0);
  z[72] = -state_[10]*z[6] + state_[8]*z[39] + state_[9]*z[3]*z[5];
  z[73] = -rear_.Ixx*z[28] - rear_.Ixz*z[31];
  z[74] = -rear_.Ixz*z[28] - rear_.Izz*z[31];
  z[75] = -rear_.a*z[28] - rear_.b*z[31];
  z[76] = -z[1]*z[10]*z[3] - z[2]*z[37];
  z[77] = front_.r*z[1]*z[10]*z[3] + front_.r*z[2]*z[37];
  z[78] = -state_[10]*z[3] - state_[8]*z[32] - state_[9]*z[5]*z[6];
  z[79] = -state_[10]*z[2]*z[6] - state_[11]*z[3]*z[5] - state_[8]*z[41];
  z[80] = -z[77];
  z[81] = -z[77];
  z[82] = z[2]*z[5]*z[9] + z[32]*z[4]*z[5]*z[6];
  z[83] = -state_[8]*z[37] - z[35];
  z[84] = -state_[8]*z[37] + z[35];
  z[85] = -state_[13] + z[72];
  z[86] = state_[14]*z[4]/z[11] + z[18]*z[20];
  z[87] = -z[1]*z[3]*z[37]*z[5] + z[2]*z[5]*z[8];
  z[88] = front_.r*z[83];
  z[89] = z[3]*z[41] + z[37]*z[6];
  z[90] = -front_.r*state_[8]*z[37] - front_.r*z[35];
  z[91] = state_[10]*z[1]*z[3]*z[5] + state_[11]*z[1]*z[2]*z[6] + state_[11]*z[3]*z[4] + state_[9]*z[1]*z[6] + state_[9]*z[2]*z[3]*z[4];
  z[92] = state_[9]*z[1]*z[2]*z[6] + state_[9]*z[3]*z[4] + z[58];
  z[93] = -z[1]*z[10]*z[4] - z[32]*z[41];
  z[94] = -state_[9]*z[41] + z[58];
  z[95] = -state_[9]*z[1]*z[2]*z[3] + state_[9]*z[4]*z[6] + z[57];
  z[96] = -z[10]*z[3]*z[6] + z[37]*z[41];
  z[97] = z[0]*z[1]*z[10]*z[4] + z[32]*z[42];
  z[98] = z[10]*z[3]*z[6] + z[37]*z[42]/2;
  z[99] = front_.r*z[3]*z[41]*z[5] + front_.r*z[37]*z[5]*z[6];
  z[100] = -state_[9]*z[37] + z[57];
  z[101] = front_.R*z[3]*z[4]*z[5]/z[68] - front_.b*z[3];
  z[102] = front_.R*z[4]*z[5]*z[6]/z[68] - front_.b*z[6];
  z[103] = -state_[10]*z[0]*z[1]*z[3]*z[5] - state_[11]*z[0]*z[1]*z[2]*z[6] - state_[11]*z[0]*z[3]*z[4] - state_[9]*z[0]*z[1]*z[6] - state_[9]*z[0]*z[2]*z[3]*z[4];
  z[104] = state_[10]*z[0]*z[4]*z[5]*z[6] - state_[11]*z[0]*z[1]*z[6] - state_[11]*z[0]*z[2]*z[3]*z[4] - state_[9]*z[0]*z[1]*z[2]*z[6] - state_[9]*z[0]*z[3]*z[4];
  z[105] = state_[8]*z[3]*z[5] + z[91];
  z[106] = -front_.Ixx*z[78] - front_.Ixz*z[46];
  z[107] = -front_.Ixz*z[78] - front_.Izz*z[46];
  z[108] = -front_.a*z[46] + front_.b*z[78];
  z[109] = front_.R*z[10]*z[3]*z[4]/z[68] - front_.b*z[3]*z[5];
  z[110] = front_.r*state_[8]*z[3]*z[5] + front_.r*z[91];
  z[111] = rear_.R*z[10]*z[7]/z[11] + rear_.R*pow(z[2], -z[0])*z[7]/z[11] - z[19]*z[4];
  z[112] = z[2]*z[50] - z[47]*z[5];
  z[113] = front_.R*z[32]/z[68] - front_.a;
  z[114] = front_.R*z[32]*z[6]/z[68] - front_.a*z[6];
  z[115] = z[59] + z[72];
  z[116] = front_.R*z[3]*z[32]*z[5]/z[68] - front_.a*z[3]*z[5];
  z[117] = rear_.Ixx*z[31] + rear_.Ixz*z[0]*z[28] + rear_.Iyy*z[31] - rear_.Izz*z[31];
  z[118] = -z[111] + z[18];
  z[119] = z[76]/z[70];
  z[120] = rear_.R*z[1]*z[20]/(z[11]*z[4]) - state_[8]*z[18] + z[17]*z[18];
  z[121] = rear_.Ixx*z[28] - rear_.Ixz*z[0]*z[31] - rear_.Iyy*z[28] - rear_.Izz*z[28];
  z[122] = -z[32]*z[78] - z[4]*z[46]*z[5];
  z[123] = -rear_.Ixz*z[26] - rear_.Iyy*z[13]*z[5] + rear_.Izz*z[27] + rear_.J*state_[12]*z[5] + z[13]*z[14];
  z[124] = -rear_.Ixx*z[26] + rear_.Ixz*z[27] + rear_.Iyy*z[13]*z[2] - rear_.J*state_[12]*z[2] - z[13]*z[15];
  z[125] = -front_.R*z[39]*z[4]*z[5]/z[68] + front_.b*z[39];
  z[126] = -z[1]*z[2]*z[47] - z[1]*z[5]*z[50] + z[30]*z[4];
  z[127] = -z[5]*z[89]/z[70];
  z[128] = z[96]/z[70];
  z[129] = -front_.R*z[32]*z[39]/z[68] + front_.a*z[39];
  z[130] = rear_.Iyy*state_[9]*z[4] + z[2]*z[4]*z[74] + z[4]*z[5]*z[73];
  z[131] = state_[10]*z[2]*z[5]*z[8] - state_[11]*z[10]*z[3]*z[6] - z[37]*z[91];
  z[132] = -z[32]*z[92] + z[49];
  z[133] = -z[104]*z[32]/2 + z[49];
  z[134] = -state_[10]*z[0]*z[2]*z[5]*z[8] + state_[11]*z[0]*z[10]*z[3]*z[6] - z[103]*z[37];
  z[135] = -state_[10]*z[0]*z[2]*z[5]*z[9] - state_[9]*z[0]*z[1]*z[10]*z[4] - z[104]*z[32];
  z[136] = -front_.R*z[10]*z[4]*z[6]/z[68] + front_.R*z[2]*z[32]/z[68];
  z[137] = front_.Ixx*z[59] + front_.Iyy*z[72] - front_.Izz*z[72] - front_.J*state_[13];
  z[138] = -front_.r*(state_[11]*z[2] - state_[13]*z[3]*z[5] + state_[9]) - state_[17]*z[3]*z[5]/z[70] + state_[18]*z[37]/z[70];
  z[139] = z[136] - z[25];
  z[140] = -front_.R*z[1]*z[32]*z[5]/z[68] + front_.R*z[4]*z[41]*z[5]/z[68];
  z[141] = -rear_.R*z[0]*z[1]*z[2]*z[31]/z[11] - rear_.R*z[0]*z[1]*z[28]*z[5]/z[11] - rear_.a*z[13]*z[5] + rear_.a*z[27] - rear_.b*z[13]*z[2] + rear_.b*z[26];
  z[142] = -front_.Ixx*z[78] + front_.Ixz*z[0]*z[46] - front_.Iyy*z[61] + front_.Izz*z[78];
  z[143] = -front_.r*(state_[10]*z[4] - state_[11]*z[1]*z[5] - state_[13]*z[37]) - state_[17]*z[37]/z[70] - state_[18]*z[3]*z[5]/z[70];
  z[144] = rear_.Iyy*state_[8]*z[4] - z[14]*z[31] + z[15]*z[28] + z[2]*z[73] - z[5]*z[74];
  z[145] = front_.r*state_[8]*z[2] + front_.r*(state_[10]*z[1]*z[2] + state_[13]*z[41] - state_[9]*z[4]*z[5]) - state_[17]*z[41]/z[70] + state_[18]*z[5]*z[6]/z[70];
  z[146] = -front_.R*z[32]*z[46]/z[68] + front_.R*z[4]*z[5]*z[78]/z[68];
  z[147] = -front_.Ixx*z[3]*z[46] + front_.Ixz*z[3]*z[78] + front_.Iyy*z[48] - z[107]*z[3];
  z[148] = front_.R*z[32]*z[78]/z[68] + front_.R*z[4]*z[46]*z[5]/z[68];
  z[149] = -rear_.Ixx*z[36] + rear_.Ixz*z[40] + rear_.Iyy*z[1]*z[31] + rear_.Iyy*z[13]*z[4]*z[5] - rear_.J*state_[12]*z[4]*z[5] + z[1]*z[74] + z[13]*z[34];
  z[150] = -rear_.Ixz*z[36] - rear_.Iyy*z[1]*z[28] + rear_.Iyy*z[13]*z[2]*z[4] + rear_.Izz*z[40] - rear_.J*state_[12]*z[2]*z[4] - z[1]*z[73] - z[13]*z[33];
  z[151] = -front_.R*z[4]*z[5]*z[72]/z[68] + front_.R*z[92]/z[68];
  z[152] = front_.Ixx*z[51] - front_.Ixz*z[28] - front_.Ixz*z[3]*z[72] + front_.Iyy*z[46]*z[6] + z[107]*z[6];
  z[153] = -z[131]*z[3]*z[5]/z[63] - z[83];
  z[154] = front_.R*state_[10]*z[2]*z[4]/z[68] + front_.R*state_[9]*z[1]*z[5]/z[68] - front_.R*z[32]*z[72]/z[68];
  z[155] = rear_.R*z[0]*z[1]*z[2]*z[28]*z[4]/z[11] - rear_.R*z[0]*z[1]*z[31]*z[4]*z[5]/z[11] - rear_.a*z[1]*z[28] + rear_.a*z[13]*z[2]*z[4] + rear_.a*z[40] - rear_.b*z[1]*z[31] - rear_.b*z[13]*z[4]*z[5] + rear_.b*z[36];
  z[156] = z[155];
  z[157] = -z[3]*z[5]*(state_[10]*z[2]*z[5]*z[8] - state_[11]*z[10]*z[3]*z[6] - z[103]*z[37]/2)/z[63] - z[83];
  z[158] = -z[101]*z[3]*z[5] - z[102]*z[5]*z[6] + z[114]*z[2];
  z[159] = z[158];
  z[160] = state_[17]*z[3]*z[37]*z[39]*z[5]/z[71] - state_[18]*z[39]*z[44]/z[71] + state_[18]*z[39]/z[70];
  z[161] = -z[105] - z[131]*z[37]/z[63];
  z[162] = -front_.r*state_[8] - state_[17]*z[39]*z[44]/z[71] + state_[17]*z[39]/z[70] - state_[18]*z[3]*z[37]*z[39]*z[5]/z[71];
  z[163] = -z[1]*z[114]*z[5] - z[101]*z[37] + z[102]*z[41];
  z[164] = -z[1]*z[114]*z[5] - z[101]*z[37] + z[102]*z[41];
  z[165] = -rear_.R*state_[9]*z[11]*z[5] - rear_.R*state_[9]*z[5]*z[7]/z[11] + rear_.R*z[1]*z[13]*z[2]*z[4]/z[11] - rear_.R*z[1]*z[40]/z[11] - rear_.R*z[28]*z[7]/z[11] - rear_.a*z[0]*z[1]*z[13] + rear_.b*state_[9]*z[4] + z[30]*z[31] - z[4]*z[5]*z[65];
  z[166] = -rear_.R*state_[9]*z[11]*z[2] - rear_.R*state_[9]*z[2]*z[7]/z[11] - rear_.R*z[1]*z[13]*z[4]*z[5]/z[11] - rear_.R*z[1]*z[36]/z[11] - rear_.R*z[31]*z[7]/z[11] - rear_.a*state_[9]*z[4] - rear_.b*z[0]*z[1]*z[13] - z[2]*z[4]*z[65] - z[28]*z[30];
  z[167] = -z[125]*z[5]*z[6] + z[129]*z[2] - z[3]*z[5]*z[56];
  z[168] = -rear_.R*state_[9]*z[11]*z[5] - rear_.R*state_[9]*z[5]*z[7]/z[11] + rear_.R*z[1]*z[13]*z[2]*z[4]/z[11] - rear_.R*z[1]*z[40]/z[11] - rear_.R*z[28]*z[7]/z[11] - rear_.a*z[0]*z[1]*z[13] + rear_.b*state_[9]*z[4] + z[30]*z[31] - z[4]*z[5]*z[65];
  z[169] = -(-state_[10]*z[0]*z[2]*z[3] + state_[11]*z[0]*z[5]*z[6] - state_[8]*z[0]*z[37] - z[134]*z[3]*z[5]/z[63])/(2*z[70]);
  z[170] = z[167];
  z[171] = -rear_.R*state_[9]*z[11]*z[2] - rear_.R*state_[9]*z[2]*z[7]/z[11] - rear_.R*z[1]*z[13]*z[4]*z[5]/z[11] - rear_.R*z[1]*z[36]/z[11] - rear_.R*z[31]*z[7]/z[11] - rear_.a*state_[9]*z[4] - rear_.b*z[0]*z[1]*z[13] - z[2]*z[4]*z[65] - z[28]*z[30];
  z[172] = -rear_.R*state_[9]*z[2]*z[4]/z[11] - rear_.R*state_[9]*z[2]*z[7]/(z[11]*z[4]) - rear_.R*z[1]*z[13]*z[5]/z[11] - rear_.R*z[1]*z[27]/z[11] + rear_.R*z[31]*z[4]/z[11] + rear_.R*z[31]*z[7]/(z[11]*z[4]) + rear_.b*state_[8]*z[4] + z[19]*z[31] - z[2]*z[65];
  z[173] = front_.Ixx*z[3]*z[72] + front_.Ixz*z[51] - front_.Iyy*z[3]*z[72] - front_.Iyy*z[6]*z[78] - front_.Izz*z[28] + front_.J*state_[13]*z[3] - z[106]*z[6];
  z[174] = -rear_.R*state_[9]*z[2]*z[4]/z[11] - rear_.R*state_[9]*z[2]*z[7]/(z[11]*z[4]) - rear_.R*z[1]*z[13]*z[5]/z[11] - rear_.R*z[1]*z[27]/z[11] + rear_.R*z[31]*z[4]/z[11] + rear_.R*z[31]*z[7]/(z[11]*z[4]) + rear_.b*state_[8]*z[4] + z[19]*z[31] - z[2]*z[65];
  z[175] = rear_.R*state_[9]*z[4]*z[5]/z[11] + rear_.R*state_[9]*z[5]*z[7]/(z[11]*z[4]) - rear_.R*z[1]*z[13]*z[2]/z[11] - rear_.R*z[1]*z[26]/z[11] - rear_.R*z[28]*z[4]/z[11] - rear_.R*z[28]*z[7]/(z[11]*z[4]) - rear_.a*state_[8]*z[4] - z[19]*z[28] + z[5]*z[65];
  z[176] = z[175];
  z[177] = z[132]*z[32]/z[62] - z[4]*z[5]*z[72] + z[92];
  z[178] = front_.Ixx*z[79] + front_.Ixz*z[27] + front_.Iyy*z[2]*z[72] - front_.Iyy*z[3]*z[46]*z[5] - front_.J*state_[13]*z[2] - z[107]*z[3]*z[5] - z[23]*z[72];
  z[179] = front_.Iyy*z[84] + z[106]*z[2] - z[107]*z[5]*z[6] - z[22]*z[46] + z[23]*z[78];
  z[180] = front_.Ixz*z[79] + front_.Iyy*z[3]*z[5]*z[78] - front_.Iyy*z[5]*z[6]*z[72] + front_.J*state_[13]*z[5]*z[6] + z[106]*z[3]*z[5] + z[22]*z[72];
  z[181] = -z[1]*z[129]*z[5] + z[125]*z[41] - z[37]*z[56];
  z[182] = -z[1]*z[129]*z[5] + z[125]*z[41] - z[37]*z[56];
  z[183] = -front_.r*(-state_[10]*z[1] - state_[11]*z[4]*z[5] + state_[13]*z[39]) + z[162];
  z[184] = -(-state_[8]*z[0]*z[3]*z[5] + z[103] + z[134]*z[37]/z[63])/(2*z[70]);
  z[185] = front_.Izz*z[27] + z[180];
  z[186] = z[109]*z[5]*z[6] - z[116]*z[2] + z[139]*z[3]*z[5];
  z[187] = z[1]*z[116]*z[5] - z[109]*z[41] + z[139]*z[37];
  z[188] = -front_.r*state_[8]*z[4] + front_.r*z[21] - state_[17]*z[2]*z[3]/z[70] + state_[17]*z[3]*z[5]*z[87]/z[71] - state_[18]*z[1]*z[3]*z[5]/z[70] - state_[18]*z[37]*z[87]/z[71];
  z[189] = -front_.r*state_[8]*z[4] + front_.r*z[21] - state_[17]*z[2]*z[3]/z[70] + state_[17]*z[3]*z[5]*z[87]/z[71] - state_[18]*z[1]*z[3]*z[5]/z[70] - state_[18]*z[37]*z[87]/z[71];
  z[190] = front_.Ixx*z[94] + front_.Ixz*z[40] - front_.Iyy*z[39]*z[46] + front_.Iyy*z[4]*z[5]*z[72] - front_.J*state_[13]*z[4]*z[5] - z[107]*z[39] - z[53]*z[72];
  z[191] = front_.r*(-state_[11]*z[1]*z[2] + state_[13]*z[1]*z[3]*z[5] + state_[9]*z[1]) - state_[17]*z[1]*z[3]*z[5]/z[70] - state_[17]*z[37]*z[87]/z[71] + state_[18]*z[2]*z[3]/z[70] - state_[18]*z[3]*z[5]*z[87]/z[71];
  z[192] = z[191];
  z[193] = front_.Iyy*z[100] + z[106]*z[4]*z[5] - z[107]*z[32] - z[46]*z[52] + z[53]*z[78];
  z[194] = front_.R*z[132]*z[32]/z[69] + z[151];
  z[195] = -front_.R*z[132]*z[4]*z[5]/z[69] + z[154];
  z[196] = front_.R*z[133]*z[32]/z[69] + z[151];
  z[197] = front_.r*state_[8]*z[1]*z[5] + front_.r*(state_[10]*z[5] - state_[13]*z[5]*z[6]) + state_[17]*z[3]*z[5]*z[96]/z[71] + state_[17]*z[5]*z[6]/z[70] - state_[18]*z[37]*z[96]/z[71] + state_[18]*z[41]/z[70];
  z[198] = -front_.R*z[133]*z[4]*z[5]/z[69] + z[154];
  z[199] = front_.Ixz*z[94] - front_.Iyy*z[32]*z[72] + front_.Iyy*z[39]*z[78] + front_.Izz*z[40] + front_.J*state_[13]*z[32] + z[106]*z[39] + z[52]*z[72];
  z[200] = -state_[17]*z[37]*z[96]/z[71] - state_[18]*z[3]*z[5]*z[96]/z[71] - z[145];
  z[201] = -2*front_.R*z[32]*z[78]/z[68] - front_.R*z[39]*z[85]/z[68] - front_.a*z[61] + front_.a*z[78];
  z[202] = state_[17]*z[37]*z[98]/z[71] + state_[18]*z[3]*z[5]*z[98]/z[71] - z[145];
  z[203] = front_.R*z[0]*z[32]*z[46]/z[68] + front_.R*z[32]*z[39]*z[4]*z[5]*z[85]/z[69] - front_.a*z[0]*z[46] - front_.b*z[61] - front_.b*z[78];
  z[204] = front_.R*z[0]*z[32]*z[46]/z[68] + front_.R*z[32]*z[39]*z[4]*z[5]*z[85]/z[69] - front_.a*z[0]*z[46] - front_.b*z[61] - front_.b*z[78];
  z[205] = -front_.R*z[39]*z[43]*z[85]/z[69] - z[201];
  z[206] = z[205];
  z[207] = front_.R*z[43]*z[85]*(-z[0]*z[1]*z[6] - z[0]*z[2]*z[3]*z[4])/(2*z[69]) - z[201];
  z[208] = -front_.R*z[132]*z[32]/z[69] - front_.R*z[32]*z[39]*z[4]*z[5]*z[78]/z[69] + front_.R*z[39]*z[43]*z[46]/z[69] - front_.R*z[39]*z[46]/z[68] - front_.R*z[4]*z[5]*z[72]/z[68] + front_.R*z[4]*z[5]*z[85]/z[68] - front_.R*z[92]/z[68] - front_.b*z[59] - front_.b*z[72];
  z[209] = front_.R*state_[10]*z[2]*z[32]*z[4]/z[68] + front_.R*state_[9]*z[1]*z[32]*z[5]/z[68] - front_.R*z[10]*z[85]*z[9]/z[68] + front_.R*z[32]*z[39]*z[78]/z[68] + front_.R*z[32]*z[40]/z[68] + front_.R*z[39]*z[4]*z[46]*z[5]/z[68] - front_.R*z[43]*z[85]/z[68] + front_.a*z[32]*z[72] - front_.a*z[39]*z[78] - front_.a*z[40] - front_.b*z[39]*z[46] + front_.b*z[4]*z[5]*z[72] + front_.b*z[94];
  z[210] = -z[209];
  z[211] = -z[209];
  z[212] = front_.R*state_[10]*z[2]*z[4]*z[6]/z[68] + front_.R*state_[9]*z[1]*z[5]*z[6]/z[68] - front_.R*z[132]*z[4]*z[5]*z[6]/z[69] - front_.R*z[2]*z[4]*z[85]/z[68] + front_.R*z[3]*z[4]*z[46]*z[5]/z[68] - front_.R*z[32]*z[6]*z[72]/z[68] - front_.R*z[32]*z[6]*z[85]/z[68] - front_.R*z[4]*z[48]*z[5]/z[68] + front_.R*z[4]*z[5]*z[82]*z[85]/z[69] - front_.a*z[0]*z[6]*z[72] - front_.b*z[3]*z[46] + front_.b*z[48];
  z[213] = front_.R*state_[10]*z[2]*z[3]*z[4]/z[68] + front_.R*state_[9]*z[1]*z[3]*z[5]/z[68] - front_.R*z[2]*z[4]*z[78]/z[68] - front_.R*z[28]*z[32]/z[68] - front_.R*z[3]*z[32]*z[85]/z[68] - front_.R*z[32]*z[46]*z[82]/z[69] - front_.R*z[32]*z[6]*z[78]/z[68] - front_.R*z[4]*z[5]*z[51]/z[68] + front_.R*z[4]*z[5]*z[78]*z[82]/z[69] + front_.a*z[28] + front_.a*z[3]*z[72] + front_.a*z[6]*z[78] + front_.b*z[46]*z[6] + front_.b*z[51];
  z[214] = front_.R*z[132]*z[32]*z[6]/z[69] - front_.R*z[3]*z[4]*z[5]*z[78]/z[68] + front_.R*z[32]*z[48]/z[68] - front_.R*z[32]*z[82]*z[85]/z[69] - front_.R*z[4]*z[5]*z[6]*z[72]/z[68] + front_.R*z[6]*z[92]/z[68] - front_.a*z[48] - front_.b*z[0]*z[6]*z[72] + front_.b*z[3]*z[78] + z[108]*z[3] - z[146]*z[3];
  z[215] = -front_.R*state_[10]*z[2]*z[39]*z[4]/z[68] - front_.R*state_[9]*z[1]*z[39]*z[5]/z[68] + front_.R*z[132]*z[39]*z[4]*z[5]/z[69] + front_.R*z[32]*z[39]*z[72]/z[68] + front_.R*z[32]*z[39]*z[85]/z[68] - front_.R*z[4]*z[5]*z[95]/z[68] + front_.a*z[0]*z[39]*z[72] + front_.b*z[100] - z[108]*z[4]*z[5] + z[146]*z[4]*z[5] + z[46]*z[56];
  z[216] = -front_.R*z[132]*z[32]*z[39]/z[69] + front_.R*z[32]*z[95]/z[68] + front_.R*z[39]*z[4]*z[5]*z[72]/z[68] + front_.R*z[39]*z[4]*z[5]*z[85]/z[68] - front_.R*z[39]*z[92]/z[68] - front_.a*z[100] + front_.b*z[0]*z[39]*z[72] + z[108]*z[32] - z[146]*z[32] - z[56]*z[78];
  z[217] = front_.R*z[132]*z[3]*z[4]*z[5]/z[69] - z[213];
  z[218] = front_.R*z[133]*z[3]*z[4]*z[5]/z[69] - z[213];
  z[219] = front_.R*z[135]*z[3]*z[4]*z[5]/(2*z[69]) - z[213];
  z[220] = -front_.R*state_[10]*z[2]*z[3]*z[4]*z[5]/z[68] - front_.R*state_[9]*z[1]*z[10]*z[3]/z[68] - front_.R*z[1]*z[5]*z[85]/z[68] + front_.R*z[10]*z[132]*z[3]*z[4]/z[69] + front_.R*z[3]*z[32]*z[5]*z[72]/z[68] + front_.R*z[3]*z[32]*z[5]*z[85]/z[68] - front_.R*z[4]*z[5]*z[85]*z[93]/z[69] - front_.R*z[4]*z[5]*z[84]/z[68] + front_.a*z[0]*z[3]*z[5]*z[72] + front_.b*z[84] - z[108]*z[2] - z[136]*z[46] + z[146]*z[2] + z[25]*z[46];
  z[221] = -front_.R*state_[10]*z[2]*z[3]*z[4]*z[5]/z[68] - front_.R*state_[9]*z[1]*z[10]*z[3]/z[68] - front_.R*z[1]*z[5]*z[85]/z[68] + front_.R*z[10]*z[135]*z[3]*z[4]/(2*z[69]) + front_.R*z[3]*z[32]*z[5]*z[72]/z[68] + front_.R*z[3]*z[32]*z[5]*z[85]/z[68] - front_.R*z[4]*z[5]*z[85]*z[97]/(2*z[69]) - front_.R*z[4]*z[5]*z[84]/z[68] + front_.a*z[0]*z[3]*z[5]*z[72] + front_.b*z[84] - z[108]*z[2] - z[136]*z[46] + z[146]*z[2] + z[25]*z[46];
  z[222] = front_.R*z[10]*z[3]*z[4]*z[72]/z[68] + front_.R*z[10]*z[3]*z[4]*z[85]/z[68] - front_.R*z[132]*z[3]*z[32]*z[5]/z[69] - front_.R*z[3]*z[5]*z[92]/z[68] + front_.R*z[32]*z[85]*z[93]/z[69] + front_.R*z[32]*z[84]/z[68] + front_.R*z[41]*z[85]/z[68] - front_.a*z[84] + front_.b*z[0]*z[3]*z[5]*z[72] + z[108]*z[5]*z[6] + z[136]*z[78] - z[146]*z[5]*z[6] - z[25]*z[78];
  z[223] = front_.R*z[10]*z[3]*z[4]*z[72]/z[68] + front_.R*z[10]*z[3]*z[4]*z[85]/z[68] - front_.R*z[135]*z[3]*z[32]*z[5]/(2*z[69]) - front_.R*z[3]*z[5]*z[92]/z[68] + front_.R*z[32]*z[85]*z[97]/(2*z[69]) + front_.R*z[32]*z[84]/z[68] + front_.R*z[41]*z[85]/z[68] - front_.a*z[84] + front_.b*z[0]*z[3]*z[5]*z[72] + z[108]*z[5]*z[6] + z[136]*z[78] - z[146]*z[5]*z[6] - z[25]*z[78];
  z[224] = -front_.R*state_[10]*z[2]*z[4]*z[5]*z[6]/z[68] - front_.R*state_[9]*z[1]*z[10]*z[6]/z[68] + front_.R*z[1]*z[5]*z[78]/z[68] + front_.R*z[10]*z[132]*z[4]*z[6]/z[69] - front_.R*z[10]*z[3]*z[4]*z[46]/z[68] - front_.R*z[132]*z[2]*z[32]/z[69] + front_.R*z[2]*z[4]*z[5]*z[85]/z[68] - front_.R*z[2]*z[92]/z[68] - front_.R*z[27]*z[32]/z[68] - front_.R*z[3]*z[32]*z[5]*z[78]/z[68] - front_.R*z[32]*z[46]*z[93]/z[69] + front_.R*z[32]*z[5]*z[6]*z[85]/z[68] + front_.R*z[4]*z[5]*z[78]*z[93]/z[69] + front_.R*z[4]*z[5]*z[79]/z[68] - front_.R*z[41]*z[46]/z[68] + front_.a*z[27] + front_.a*z[3]*z[5]*z[78] - front_.a*z[5]*z[6]*z[72] - front_.b*z[2]*z[72] + front_.b*z[3]*z[46]*z[5] - front_.b*z[79];
  z[225] = -front_.Iyy;
  z[226] = -front_.a;
  z[227] = -rear_.a;
  z[228] = -front_.b;
  z[229] = -rear_.b;
  z[230] = -front_.m;
  z[231] = -rear_.m;
  z[232] = -front_.r;
  z[233] = -state_[11];
  z[234] = -state_[13];
  z[235] = -state_[18];
  z[236] = -state_[8];
  z[237] = -state_[9];
  z[238] = z[231]*z[236];
  z[239] = -z[1]*z[227];
  z[240] = -z[1]*z[229];
  z[241] = -z[1]*z[232];
  z[242] = -z[2]*z[232];
  z[243] = -z[232]*z[3];
  z[244] = -z[232]*z[4];
  z[245] = state_[10]*z[2];
  z[246] = -z[233]*z[5];
  z[247] = state_[17]*z[3];
  z[248] = -z[236]*z[4];
  z[249] = -z[1]*z[237];
  z[250] = -z[2];
  z[251] = z[0]*z[250];
  z[252] = -z[3];
  z[253] = -z[4];
  z[254] = -z[5];
  z[255] = -z[6];
  z[256] = -z[1]*z[250];
  z[257] = -z[1]*z[254];
  z[258] = z[250]*z[253];
  z[259] = z[252]*z[254];
  z[260] = z[253]*z[254];
  z[261] = z[254]*z[255];
  z[262] = -z[7];
  z[263] = z[0]/z[253];
  z[264] = -z[9];
  z[265] = -z[10];
  z[266] = rear_.R/z[11];
  z[267] = -z[231]/z[11];
  z[268] = z[13]*z[253];
  z[269] = -z[253]/z[11];
  z[270] = -z[18]*z[231];
  z[271] = -rear_.J*z[31];
  z[272] = -z[18]*z[253];
  z[273] = rear_.J*z[28];
  z[274] = z[232]*z[41];
  z[275] = -z[232]*z[37];
  z[276] = z[39]*z[46];
  z[277] = -z[32]*z[46];
  z[278] = -front_.J*z[78];
  z[279] = z[228]*z[72];
  z[280] = front_.R/z[69];
  z[281] = front_.R/z[68];
  z[282] = -1/z[70];
  z[283] = z[254]*z[282];
  z[284] = pow(front_.R, -z[0])/z[62];
  z[285] = -z[254]*(z[1]*z[32] - z[4]*z[41]);
  z[286] = -z[32]*z[72];
  z[287] = z[37]/z[63];
  z[288] = -z[282]*z[37];
  z[289] = z[44]/z[63];
  z[290] = z[113]*z[37];
  z[291] = z[281]*z[92];
  z[292] = (-z[0]*z[10]*z[3]*z[6] + z[37]*z[42])/(2*z[71]);
  z[293] = z[112]*z[64];
  z[294] = z[132]/z[62];
  z[295] = -z[157]*z[282];

  m[0] = -z[1]*(z[130] - z[28]*z[34] + z[31]*z[33]) + z[149]*z[258] - z[150]*z[260] - z[190]*z[32] + z[193]*z[39] - z[199]*z[260] + z[230]*(-z[125]*z[215] + z[129]*z[216] + z[138]*z[167] + z[143]*z[182] + z[211]*z[56]) + z[231]*(z[112]*z[60] + z[126]*z[86] + z[155]*z[30] - z[168]*z[47] + z[171]*z[50]);
  m[1] = -z[1]*z[144] - z[123]*z[260] + z[124]*z[258] - z[178]*z[32] + z[179]*z[39] - z[185]*z[260] + z[230]*(-z[125]*z[220] + z[129]*z[222] + z[160]*z[182] + z[167]*z[183] + z[224]*z[56]) + z[231]*(z[112]*z[120] + z[126]*z[249]*z[263]*z[266] + z[141]*z[30] - z[174]*z[47] + z[175]*z[50]);
  m[2] = z[117]*z[258] - z[121]*z[260] + z[147]*z[39] - z[152]*z[32] - z[173]*z[260] + z[230]*(-z[125]*z[212] + z[129]*z[214] + z[167]*z[191] + z[182]*z[189] + z[217]*z[56]) + z[231]*(-z[0]*z[13]*z[227]*z[47] + z[0]*z[13]*z[229]*z[50] - z[0]*z[30]*z[75] - z[126]*z[18]*z[248] + z[293]);
  m[3] = -front_.Ixz*z[115]*z[260] - z[137]*z[32] + z[142]*z[39] + z[230]*(-z[125]*z[204] + z[129]*z[205] + z[167]*z[200] + z[182]*z[197] + z[208]*z[56]);
  m[4] = z[231]*(-z[126]*z[18]*z[248] + z[293]) - z[258]*z[271] + z[260]*z[273];
  m[5] = front_.J*z[277] + z[230]*(z[110]*z[167] - z[125]*z[195] + z[129]*z[194] + z[148]*z[56] - z[182]*z[90]) - z[260]*z[278];
  m[6] = -z[238]*z[269]*(-z[16]*z[264] - z[250]*z[262]*z[45] + z[254]*z[262]*z[38]);
  m[7] = -z[1]*z[238]*z[269]*(-z[250]*z[38] - z[254]*z[45]);
  m[8] = 0;
  m[9] = z[230]*(z[169]*z[181] + z[170]*z[184]);
  m[10] = z[230]*(z[170]*z[295] + z[181]*z[184]);
  m[11] = 0;
  m[12] = z[149]*z[254] + z[150]*z[250] - z[190]*z[261] + z[193]*z[259] + z[199]*z[250] + z[230]*(z[109]*z[215] - z[116]*z[216] + z[138]*z[186] - z[139]*z[211] + z[143]*z[187] - z[143]*z[232] - z[211]*z[275] + z[215]*z[274] + z[216]*z[241]*z[254]) + z[231]*(-z[111]*z[86] + z[155]*z[19] + z[155]*z[272] + z[168]*z[18]*z[256] - z[168]*z[256]*z[266] - z[171]*z[18]*z[257] + z[171]*z[257]*z[266] + z[18]*z[86]);
  m[13] = z[123]*z[250] + z[124]*z[254] - z[178]*z[261] + z[179]*z[259] + z[185]*z[250] + z[230]*(z[109]*z[220] - z[116]*z[222] - z[139]*z[224] + z[160]*z[187] - z[160]*z[232] + z[183]*z[186] + z[220]*z[274] + z[222]*z[241]*z[254] - z[224]*z[275]) + z[231]*(-z[111]*z[249]*z[263]*z[266] + z[141]*z[19] + z[141]*z[272] + z[174]*z[18]*z[256] - z[174]*z[256]*z[266] - z[175]*z[18]*z[257] + z[175]*z[257]*z[266] + z[18]*z[249]*z[263]*z[266]);
  m[14] = z[117]*z[254] + z[121]*z[250] + z[147]*z[259] - z[152]*z[261] + z[173]*z[250] + z[230]*(z[109]*z[212] - z[116]*z[214] - z[139]*z[217] + z[186]*z[191] + z[187]*z[189] - z[189]*z[232] + z[212]*z[274] + z[214]*z[241]*z[254] - z[217]*z[275]) + z[231]*(-z[0]*z[13]*z[18]*z[240]*z[254] + z[0]*z[13]*z[240]*z[254]*z[266] - z[0]*z[19]*z[75] - z[0]*z[272]*z[75] + z[111]*z[18]*z[248] + z[13]*z[18]*z[239]*z[251] - z[13]*z[239]*z[251]*z[266] - pow(z[18], -z[0])*z[248]);
  m[15] = -front_.Ixz*z[115]*z[2] - z[137]*z[261] + z[142]*z[259] + z[230]*(z[109]*z[204] - z[116]*z[205] - z[139]*z[208] + z[186]*z[200] + z[187]*z[197] - z[197]*z[232] + z[204]*z[274] + z[205]*z[241]*z[254] - z[208]*z[275]);
  m[16] = -z[118]*z[18]*z[231]*z[248] - z[250]*z[273] - z[254]*z[271];
  m[17] = -front_.J*z[261]*z[46] + z[230]*(z[109]*z[195] + z[110]*z[186] - z[116]*z[194] - z[139]*z[148] - z[148]*z[275] - z[187]*z[90] + z[194]*z[241]*z[254] + z[195]*z[274] + z[232]*z[90]) + z[250]*z[278];
  m[18] = -z[118]*z[238]*z[269];
  m[19] = 0;
  m[20] = 0;
  m[21] = z[230]*(z[169]*z[187] - z[169]*z[232] + z[184]*z[186]);
  m[22] = z[230]*(z[184]*z[187] - z[184]*z[232] + z[186]*z[295]);
  m[23] = 0;
  m[24] = -z[130] + z[190]*z[252] + z[193]*z[255] + z[230]*(z[101]*z[211] - z[102]*z[215] + z[114]*z[216] + z[138]*z[158] - z[138]*z[244] + z[143]*z[164] + z[211]*z[243]*z[260] - z[215]*z[244]*z[261] + z[216]*z[242]*z[253]) + z[231]*(-z[168]*z[18]*z[260] - z[168]*z[229] - z[171]*z[18]*z[258] + z[171]*z[227] - z[19]*z[60] - z[272]*z[60] + z[29]*z[86]) - z[253]*z[28]*(rear_.Ixz*z[2] + rear_.Izz*z[254]) + z[253]*z[31]*(rear_.Ixx*z[2] - rear_.Ixz*z[5]);
  m[25] = -z[144] + z[178]*z[252] + z[179]*z[255] + z[230]*(z[101]*z[224] - z[102]*z[220] + z[114]*z[222] + z[158]*z[183] + z[160]*z[164] - z[183]*z[244] - z[220]*z[244]*z[261] + z[222]*z[242]*z[253] + z[224]*z[243]*z[260]) + z[231]*(-z[120]*z[19] - z[120]*z[272] - z[174]*z[18]*z[260] - z[174]*z[229] - z[175]*z[18]*z[258] + z[175]*z[227] + z[249]*z[263]*z[266]*z[29]);
  m[26] = z[147]*z[255] + z[152]*z[252] + z[230]*(z[101]*z[217] - z[102]*z[212] + z[114]*z[214] + z[158]*z[191] + z[164]*z[189] - z[191]*z[244] - z[212]*z[244]*z[261] + z[214]*z[242]*z[253] + z[217]*z[243]*z[260]) + z[231]*(z[0]*z[13]*z[18]*z[227]*z[254]*z[4] + z[0]*z[18]*z[2]*z[229]*z[268] - z[18]*z[248]*z[29] - z[19]*z[64] - z[272]*z[64]);
  m[27] = z[137]*z[252] + z[142]*z[255] + z[230]*(z[101]*z[208] - z[102]*z[204] + z[114]*z[205] + z[158]*z[200] + z[164]*z[197] - z[200]*z[244] - z[204]*z[244]*z[261] + z[205]*z[242]*z[253] + z[208]*z[243]*z[260]);
  m[28] = -z[1]*z[231]*(-rear_.r*z[18]*z[237]*z[4] - rear_.r*z[19]*z[237] + z[16]*z[18]*z[248]);
  m[29] = front_.J*z[252]*z[46] + z[230]*(z[101]*z[148] - z[102]*z[198] + z[110]*z[158] - z[110]*z[244] + z[114]*z[196] + z[148]*z[243]*z[260] - z[164]*z[90] + z[196]*z[242]*z[253] - z[198]*z[244]*z[261]);
  m[30] = -z[1]*z[16]*z[238]*z[269];
  m[31] = -z[238]*z[269]*(z[19] + z[272]);
  m[32] = 0;
  m[33] = z[230]*(z[159]*z[184] + z[163]*z[169] - z[184]*z[244]);
  m[34] = z[230]*(z[159]*z[295] + z[163]*z[184] - z[244]*z[295]);
  m[35] = 0;
  m[36] = -z[199] + z[230]*(z[113]*z[138]*z[259] - z[113]*z[211] - z[138]*z[241]*z[254] + z[143]*z[242] + z[143]*z[290] + z[211]*z[81] + z[215]*z[67]);
  m[37] = front_.Izz*z[254]*(state_[10] + z[1]*z[236]) - z[180] + z[230]*(z[113]*z[183]*z[259] - z[113]*z[224] + z[160]*z[242] + z[160]*z[290] - z[183]*z[241]*z[254] + z[220]*z[67] + z[224]*z[81]);
  m[38] = front_.Ixx*z[252]*z[72] - front_.Ixz*z[255]*(z[233] - z[31]) + front_.Izz*z[28] - front_.J*z[234]*z[252] - z[106]*z[255] + z[225]*z[252]*z[72] + z[225]*z[255]*z[78] + z[230]*(z[113]*z[192]*z[259] - z[113]*z[218] + z[188]*z[242] + z[188]*z[290] - z[192]*z[241]*z[254] + z[212]*z[67] + z[218]*z[80]);
  m[39] = -front_.Ixz*z[59] - front_.Ixz*z[72] + z[230]*(z[113]*z[200]*z[259] - z[113]*z[208] + z[197]*z[242] + z[197]*z[290] - z[200]*z[241]*z[254] + z[204]*z[67] + z[208]*z[81]);
  m[40] = 0;
  m[41] = z[230]*(z[110]*z[113]*z[259] - z[110]*z[241]*z[254] - z[113]*z[148] + z[148]*z[81] + z[195]*z[67] - z[242]*z[90] - z[290]*z[90]) - z[278];
  m[42] = 0;
  m[43] = 0;
  m[44] = 0;
  m[45] = z[230]*(z[113]*z[184]*z[259] + z[169]*z[242] + z[169]*z[290] - z[184]*z[241]*z[254]);
  m[46] = z[230]*(z[113]*z[259]*z[295] + z[157]*z[241]*z[283] + z[184]*z[242] + z[184]*z[290]);
  m[47] = 0;
  m[48] = z[253]*(-rear_.J*z[237] + z[270]*(z[168]*z[254] + z[171]*z[250] - z[60]));
  m[49] = z[253]*(-rear_.J*z[236] + z[270]*(-z[120] + z[174]*z[254] + z[175]*z[250]));
  m[50] = z[253]*z[270]*(-z[12] + z[54]);
  m[51] = 0;
  m[52] = -z[12]*z[231]*z[272];
  m[53] = 0;
  m[54] = 0;
  m[55] = -z[11]*z[18]*z[238];
  m[56] = 0;
  m[57] = 0;
  m[58] = 0;
  m[59] = 0;
  m[60] = -front_.J*z[100] + z[230]*(z[136]*z[138] + z[138]*z[275] + z[140]*z[143] + z[143]*z[243]*z[254] - z[215]*z[260]*z[281] + z[215]*z[99] + z[216]*z[281]*z[32] - z[216]*z[81]);
  m[61] = -front_.J*z[84] + z[230]*(z[136]*z[183] + z[140]*z[160] + z[160]*z[243]*z[254] + z[183]*z[275] - z[220]*z[260]*z[281] + z[220]*z[99] + z[222]*z[281]*z[32] - z[222]*z[81]);
  m[62] = front_.J*z[252]*(z[233] - z[31]) + z[230]*(z[136]*z[191] + z[140]*z[189] + z[189]*z[243]*z[254] + z[191]*z[275] - z[212]*z[260]*z[281] + z[212]*z[99] + z[214]*z[281]*z[32] - z[214]*z[81]);
  m[63] = front_.J*z[61] + z[230]*(z[136]*z[202] + z[140]*z[197] + z[197]*z[243]*z[254] + z[202]*z[275] - z[203]*z[260]*z[281] + z[203]*z[99] + z[207]*z[281]*z[32] - z[207]*z[80]);
  m[64] = 0;
  m[65] = z[230]*(-z[105]*z[232]*z[281]*z[66] + z[105]*z[37]*pow(-z[232], -z[0]) + z[177]*z[232]*z[281]*z[76] + z[177]*z[284]*z[32] - z[232]*z[281]*z[5]*z[89]*(-z[260]*z[294] + z[286] - z[40]) - z[243]*z[254]*z[88] - z[260]*z[284]*(-z[260]*z[294] + z[286] - z[40]) + z[281]*z[285]*z[88]);
  m[66] = 0;
  m[67] = 0;
  m[68] = 0;
  m[69] = z[230]*z[282]*(z[153]*z[243]*z[254] - z[153]*z[281]*z[285] - z[161]*z[275] - z[161]*z[281]*z[66]);
  m[70] = z[230]*(z[184]*z[243]*z[254] - z[184]*z[281]*z[285] + z[275]*z[295] + z[281]*z[295]*z[66]);
  m[71] = 0;
  m[72] = z[253]*z[267]*(-z[165]*z[254] - z[166]*z[250] + z[60]);
  m[73] = z[253]*z[267]*(z[120] - z[172]*z[254] - z[176]*z[250]);
  m[74] = -z[231]*z[269]*(-rear_.r*z[249] + z[54]);
  m[75] = 0;
  m[76] = z[12]*z[253]*z[267];
  m[77] = 0;
  m[78] = 0;
  m[79] = z[238];
  m[80] = 0;
  m[81] = 0;
  m[82] = 0;
  m[83] = 0;
  m[84] = z[253]*z[267]*(-z[156]*z[253] + z[165]*z[256] - z[166]*z[257] + z[86]);
  m[85] = z[231]*(rear_.R*z[0]*z[249]/z[264] + z[11]*z[141] + z[172]*z[256]*z[269] - z[176]*z[257]*z[269]);
  m[86] = -z[231]*z[269]*(z[0]*z[13]*z[240]*z[254] - z[0]*z[253]*z[75] - z[13]*z[239]*z[251] + z[18]*z[248]);
  m[87] = 0;
  m[88] = z[11]*z[18]*z[238];
  m[89] = 0;
  m[90] = -z[238];
  m[91] = 0;
  m[92] = 0;
  m[93] = 0;
  m[94] = 0;
  m[95] = 0;
  m[96] = z[231]*(z[1]*z[156] - z[165]*z[258] + z[166]*z[260]);
  m[97] = z[231]*(z[1]*z[141] - z[172]*z[258] + z[176]*z[260]);
  m[98] = z[231]*(-z[0]*z[1]*z[75] - z[0]*z[13]*z[229]*z[254]*z[4] + z[0]*z[2]*z[227]*z[268]);
  m[99] = 0;
  m[100] = 0;
  m[101] = 0;
  m[102] = 0;
  m[103] = 0;
  m[104] = 0;
  m[105] = 0;
  m[106] = 0;
  m[107] = 0;
  m[108] = z[230]*z[282]*(z[138]*z[37] - z[143]*z[259] - z[215]*z[254]*z[89] - z[216]*z[76]);
  m[109] = z[230]*(z[119]*z[223] + z[127]*z[221] + z[259]*pow(z[282], 2)*z[39]*(z[235]*z[289] - z[235] - z[247]*z[254]*z[287]) - z[288]*(z[162] + z[232]*(-state_[10]*z[1] - z[234]*z[39] + z[246]*z[253])));
  m[110] = z[230]*(z[119]*z[214] + z[127]*z[212] - z[188]*z[259]*z[282] - z[192]*z[288]);
  m[111] = z[230]*(z[119]*z[206] + z[127]*z[203] - z[197]*z[259]*z[282] - z[288]*(state_[17]*z[292]*z[37] - z[145] - z[235]*z[259]*z[292]));
  m[112] = 0;
  m[113] = z[230]*z[282]*(z[105]*z[275] - z[177]*z[281]*z[76] - z[243]*z[254]*z[83] - z[254]*z[281]*z[89]*(-z[260]*z[294] + z[286] - z[40]));
  m[114] = 0;
  m[115] = 0;
  m[116] = 0;
  m[117] = -z[230]*z[282]*(z[169]*z[259] - z[184]*z[37]);
  m[118] = -z[230]*(z[153]*z[37] - z[161]*z[259])/z[63];
  m[119] = 0;
  m[120] = z[230]*(z[128]*z[215] + z[138]*z[259]*z[282] - z[143]*z[288] + z[210]*z[70] + z[216]*z[283]*z[55]);
  m[121] = z[230]*(z[183]*z[259]*z[282] - z[220]*z[282]*z[96] + z[222]*z[283]*z[55] + z[224]*z[70] + z[287]*z[39]*(-z[235]*z[289] + z[235] + z[247]*z[254]*z[287]));
  m[122] = z[230]*(z[128]*z[212] - z[188]*z[288] + z[192]*z[259]*z[282] + z[214]*z[283]*z[55] + z[219]*z[70]);
  m[123] = z[230]*(-z[197]*z[288] + z[200]*z[259]*z[282] - z[204]*z[282]*z[96] + z[205]*z[283]*z[55] + z[208]*z[70]);
  m[124] = 0;
  m[125] = z[230]*(-z[105]*z[243]*z[283] - z[122]*z[281]*z[70] + z[177]*z[281]*z[283]*z[55] - z[275]*z[282]*z[83] - z[281]*z[282]*z[96]*(-z[260]*z[294] + z[286] - z[40]));
  m[126] = 0;
  m[127] = 0;
  m[128] = 0;
  m[129] = -z[230]*(-z[153]*z[37] + z[161]*z[259])/z[63];
  m[130] = -z[230]*(z[153]*z[259] + z[161]*z[37])/z[63];
  m[131] = 0;
  m[132] = z[230]*(-z[210]*z[39] + z[215]*z[32] + z[216]*z[260]);
  m[133] = z[230]*(z[221]*z[32] + z[223]*z[260] - z[39]*(z[135]*z[250]*z[280]*z[32]/2 - z[135]*z[253]*z[255]*z[265]*z[280]/2 - z[226]*z[259]*z[78] + z[226]*z[261]*z[72] - z[226]*z[27] + z[228]*z[254]*z[3]*z[46] + z[228]*z[79] + z[245]*z[255]*z[260]*z[281] - z[249]*z[255]*z[265]*z[281] - z[250]*z[279] + z[250]*z[291] + z[252]*z[253]*z[265]*z[281]*z[46] - z[254]*z[258]*z[281]*z[85] + z[257]*z[281]*z[78] - z[259]*z[281]*z[32]*z[78] + z[260]*z[280]*z[78]*z[97]/2 + z[260]*z[281]*z[79] + z[261]*z[281]*z[32]*z[85] - z[27]*z[281]*z[32] + z[277]*z[280]*z[97]/2 - z[281]*z[41]*z[46]));
  m[134] = z[230]*(z[212]*z[32] + z[214]*z[260] - z[219]*z[39]);
  m[135] = z[230]*(z[203]*z[32] + z[206]*z[260] - z[39]*(-z[135]*z[280]*z[32]/2 + z[228]*z[59] - z[260]*z[280]*z[32]*z[39]*z[78] - z[260]*z[281]*z[72] + z[260]*z[281]*z[85] + z[276]*z[280]*z[43] - z[276]*z[281] + z[279] - z[291]));
  m[136] = 0;
  m[137] = z[230]*z[281]*(z[122]*z[39] + z[177]*z[260] + z[32]*(-z[260]*z[294] + z[286] - z[40]));
  m[138] = 0;
  m[139] = 0;
  m[140] = 0;
  m[141] = 0;
  m[142] = 0;
  m[143] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (12, 20)
 *
 * @param[out] a C-array of with 240 elements
 */
//  void Bicycle::gif_ud_zero_dqdu(double m[240]) const;
void Bicycle::gif_ud_zero_dqdu(double m[240]) const
{
  double * z = new double[565];

  z[0] = -2;
  z[1] = sin(state_[1]);
  z[2] = sin(state_[2]);
  z[3] = sin(state_[3]);
  z[4] = cos(state_[1]);
  z[5] = cos(state_[2]);
  z[6] = cos(state_[3]);
  z[7] = pow(state_[9], -z[0]);
  z[8] = pow(z[1], -z[0]);
  z[9] = pow(z[1], 3);
  z[10] = pow(z[2], -z[0]);
  z[11] = pow(z[3], -z[0]);
  z[12] = pow(z[4], -z[0]);
  z[13] = pow(z[5], -z[0]);
  z[14] = pow(z[6], -z[0]);
  z[15] = state_[10] + state_[8]*z[1];
  z[16] = sqrt(z[12]);
  z[17] = rear_.r*state_[9]*z[1];
  z[18] = pow(z[15], -z[0]);
  z[19] = -z[15];
  z[20] = rear_.Ixx*z[5] + rear_.Ixz*z[2];
  z[21] = rear_.Ixz*z[5] + rear_.Izz*z[2];
  z[22] = rear_.a*z[5] + rear_.b*z[2];
  z[23] = state_[10]*z[1] + state_[12]*z[1];
  z[24] = state_[10]*z[4] + state_[12]*z[4];
  z[25] = rear_.Ixx*z[2] - rear_.Ixz*z[5];
  z[26] = rear_.Ixz*z[2] - rear_.Izz*z[5];
  z[27] = rear_.a*z[2] - rear_.b*z[5];
  z[28] = front_.Ixx*z[5]*z[6] + front_.Ixz*z[2];
  z[29] = front_.Ixz*z[5]*z[6] + front_.Izz*z[2];
  z[30] = state_[10]*state_[9]*z[1] + state_[12]*state_[9]*z[1];
  z[31] = state_[8]*z[4]*z[5] + state_[9]*z[2];
  z[32] = front_.a*z[2] - front_.b*z[5]*z[6];
  z[33] = state_[10]*z[2] - state_[8]*z[1]*z[2];
  z[34] = state_[10]*z[5] - state_[8]*z[1]*z[5];
  z[35] = state_[8]*z[2]*z[4] - state_[9]*z[5];
  z[36] = -rear_.R/z[16] - rear_.r;
  z[37] = rear_.a*z[1]*z[5] + rear_.b*z[1]*z[2];
  z[38] = rear_.a*z[4]*z[5] + rear_.b*z[2]*z[4];
  z[39] = -z[31];
  z[40] = z[1]*z[3] - z[2]*z[4]*z[6];
  z[41] = rear_.Ixx*z[2]*z[4] - rear_.Ixz*z[4]*z[5];
  z[42] = rear_.Ixz*z[2]*z[4] - rear_.Izz*z[4]*z[5];
  z[43] = rear_.a*z[2]*z[4] - rear_.b*z[4]*z[5];
  z[44] = state_[10]*z[1]*z[2] - state_[9]*z[4]*z[5];
  z[45] = state_[10]*z[2]*z[3] - state_[11]*z[5]*z[6];
  z[46] = state_[10]*z[4]*z[5] - state_[9]*z[1]*z[2];
  z[47] = pow(z[35], -z[0]);
  z[48] = z[1]*z[2]*z[3] - z[4]*z[6];
  z[49] = rear_.R*z[2]*z[4]/z[16] + rear_.a;
  z[50] = -z[1]*z[6] - z[2]*z[3]*z[4];
  z[51] = -z[0]*z[1]*z[6] - z[0]*z[2]*z[3]*z[4];
  z[52] = -state_[10]*z[2]*z[4] - state_[9]*z[1]*z[5];
  z[53] = -z[1]*z[2]*z[6] - z[3]*z[4];
  z[54] = -z[0]*z[1]*z[2]*z[6] - z[0]*z[3]*z[4];
  z[55] = rear_.a*state_[8]*z[1]*z[5] + rear_.b*state_[8]*z[1]*z[2];
  z[56] = state_[10]*state_[8]*z[1]*z[5] + state_[8]*state_[9]*z[2]*z[4];
  z[57] = state_[8]*z[3]*z[4]*z[5] + state_[9]*z[2]*z[3];
  z[58] = pow(z[40], -z[0]);
  z[59] = front_.a*z[2]*z[4] - front_.b*z[4]*z[5]*z[6];
  z[60] = pow(z[48], -z[0]);
  z[61] = rear_.Ixx*state_[8]*z[1]*z[2] - rear_.Ixz*state_[8]*z[1]*z[5];
  z[62] = rear_.Ixz*state_[8]*z[1]*z[2] - rear_.Izz*state_[8]*z[1]*z[5];
  z[63] = rear_.R*z[4]*z[5]/z[16] - rear_.b;
  z[64] = state_[10]*state_[8]*z[1]*z[2] - state_[8]*state_[9]*z[4]*z[5];
  z[65] = -state_[11] - z[31];
  z[66] = -state_[8]*z[4]*z[5]*z[6] - state_[9]*z[2]*z[6];
  z[67] = rear_.R*z[16]*z[2] + rear_.a*z[4];
  z[68] = rear_.R*z[16]*z[5] - rear_.b*z[4];
  z[69] = rear_.R*z[1]*z[4]*z[5]/z[16] - rear_.b*z[1];
  z[70] = -state_[11]*z[3] + z[57];
  z[71] = state_[10]*z[12]*z[2]*z[5] + state_[9]*z[1]*z[13]*z[4];
  z[72] = -rear_.R*z[1]*z[2]*z[4]/z[16] - rear_.a*z[1];
  z[73] = state_[11]*z[6] + z[66];
  z[74] = -state_[10]*state_[11]*z[2] + state_[10]*state_[13]*z[3]*z[5] + state_[11]*state_[13]*z[2]*z[6];
  z[75] = state_[10]*state_[11]*z[5] + state_[10]*state_[13]*z[2]*z[3] - state_[11]*state_[13]*z[5]*z[6];
  z[76] = front_.a*z[1]*z[5] - front_.b*z[53];
  z[77] = -state_[10]*state_[8]*z[2]*z[4] + state_[10]*state_[9]*z[5] - state_[8]*state_[9]*z[1]*z[5];
  z[78] = -state_[10]*state_[8]*z[4]*z[5] - state_[10]*state_[9]*z[2] + state_[8]*state_[9]*z[1]*z[2];
  z[79] = front_.Ixx*z[40] + front_.Ixz*z[4]*z[5];
  z[80] = front_.Ixz*z[40] + front_.Izz*z[4]*z[5];
  z[81] = rear_.a*z[0]*z[19]*z[5] + rear_.b*z[0]*z[19]*z[2];
  z[82] = z[1]*z[48] - z[2]*z[3];
  z[83] = front_.a*z[4]*z[5] - front_.b*z[40];
  z[84] = front_.a*state_[8]*z[1]*z[5] - front_.b*state_[8]*z[53];
  z[85] = state_[10]*z[1]*z[5]*z[6] - state_[11]*z[1]*z[2]*z[3] + state_[11]*z[4]*z[6];
  z[86] = state_[10]*z[3]*z[4]*z[5] - state_[11]*z[1]*z[3] + state_[11]*z[2]*z[4]*z[6];
  z[87] = -state_[10]*z[4]*z[5]*z[6] + state_[11]*z[1]*z[6] + state_[11]*z[2]*z[3]*z[4];
  z[88] = -z[19]*z[6] + z[3]*z[35];
  z[89] = -front_.Ixx*state_[8]*z[53] - front_.Ixz*state_[8]*z[1]*z[5];
  z[90] = -front_.Ixz*state_[8]*z[53] - front_.Izz*state_[8]*z[1]*z[5];
  z[91] = -state_[15]*z[4]/z[16] + state_[9]*z[36];
  z[92] = state_[10]*z[2]*z[4]*z[6] + state_[11]*z[3]*z[4]*z[5] + state_[9]*z[1]*z[5]*z[6];
  z[93] = -z[19]*z[3] - z[35]*z[6];
  z[94] = z[12]*z[13] + z[58];
  z[95] = z[11]*z[13] + z[60];
  z[96] = -state_[10]*z[1]*z[2]*z[3] + state_[11]*z[1]*z[5]*z[6] + state_[9]*z[3]*z[4]*z[5];
  z[97] = -state_[10]*z[1]*z[3]*z[5] - state_[11]*z[1]*z[2]*z[6] - state_[11]*z[3]*z[4];
  z[98] = -rear_.R*state_[9]*z[1]/z[16] - state_[9]*z[1]*z[36];
  z[99] = -rear_.a*z[39] + rear_.b*z[35];
  z[100] = -z[13]*z[4]*z[6] + z[2]*z[40];
  z[101] = front_.r*z[1]*z[13]*z[6] - front_.r*z[2]*z[53];
  z[102] = sqrt(z[94]);
  z[103] = pow(z[94], 3.0/2.0);
  z[104] = pow(z[94], 5.0/2.0);
  z[105] = sqrt(z[95]);
  z[106] = pow(z[95], 3.0/2.0);
  z[107] = pow(z[95], 5.0/2.0);
  z[108] = -state_[10]*z[6] + state_[8]*z[50] + state_[9]*z[3]*z[5];
  z[109] = -rear_.Ixx*z[35] - rear_.Ixz*z[39];
  z[110] = -rear_.Ixz*z[35] - rear_.Izz*z[39];
  z[111] = rear_.a*z[35] + rear_.b*z[39];
  z[112] = -z[1]*z[13]*z[3] - z[2]*z[48];
  z[113] = front_.r*z[1]*z[13]*z[3] + front_.r*z[2]*z[48];
  z[114] = state_[10]*z[2]*z[6] + state_[11]*z[3]*z[5] + state_[8]*z[53];
  z[115] = rear_.Ixx*z[39] - rear_.Ixz*z[35];
  z[116] = rear_.Ixz*z[39] - rear_.Izz*z[35];
  z[117] = front_.r*z[1]*z[2]*z[3]*z[5] - front_.r*z[48]*z[5];
  z[118] = -state_[10]*z[3] - state_[8]*z[40] - state_[9]*z[5]*z[6];
  z[119] = -z[3]*z[5]*z[82];
  z[120] = -z[113];
  z[121] = -z[113];
  z[122] = z[12]*z[2]*z[5] + z[4]*z[40]*z[5]*z[6];
  z[123] = -state_[8]*z[48] - z[45];
  z[124] = -state_[8]*z[48] + z[45];
  z[125] = -state_[13] + z[108];
  z[126] = state_[14]*z[4]/z[16] + z[24]*z[36];
  z[127] = -z[1]*z[3]*z[48]*z[5] + z[11]*z[2]*z[5];
  z[128] = -rear_.R*z[0]*z[7]*z[8]/pow(z[12], 3.0/2.0) + rear_.R*z[7]/z[16];
  z[129] = -front_.a*z[35] - front_.b*z[66];
  z[130] = front_.r*z[123];
  z[131] = z[127];
  z[132] = front_.Ixx*z[66] - front_.Ixz*z[35];
  z[133] = front_.Ixz*z[66] - front_.Izz*z[35];
  z[134] = z[129];
  z[135] = z[3]*z[53] + z[48]*z[6];
  z[136] = -rear_.Iyy*z[19]*z[39] + rear_.J*state_[12]*z[39];
  z[137] = -front_.r*state_[8]*z[48] - front_.r*z[45];
  z[138] = -z[1]*z[13]*z[4] - z[40]*z[53];
  z[139] = -state_[9]*z[53] + z[87];
  z[140] = -state_[9]*z[1]*z[3] + state_[9]*z[2]*z[4]*z[6] + z[85];
  z[141] = -state_[9]*z[1]*z[2]*z[3] + state_[9]*z[4]*z[6] + z[86];
  z[142] = -z[13]*z[3]*z[6] + z[48]*z[53];
  z[143] = z[0]*z[1]*z[13]*z[4] + z[40]*z[54];
  z[144] = z[13]*z[3]*z[6] + z[48]*z[54]/2;
  z[145] = -z[0]*z[13]*z[3]*z[6] + z[48]*z[54];
  z[146] = front_.r*z[3]*z[5]*z[53] + front_.r*z[48]*z[5]*z[6];
  z[147] = -state_[9]*z[48] + z[86];
  z[148] = -state_[9]*z[1]*z[2]*z[6] - state_[9]*z[3]*z[4] - z[87];
  z[149] = -z[1]*z[13]*z[4] + z[40]*z[54]/2;
  z[150] = front_.R*z[3]*z[4]*z[5]/z[102] - front_.b*z[3];
  z[151] = front_.R*z[4]*z[5]*z[6]/z[102] - front_.b*z[6];
  z[152] = state_[10]*state_[8]*z[2]*z[4]*z[6] - state_[10]*state_[9]*z[5]*z[6] - state_[11]*z[3]*z[39] + state_[8]*state_[9]*z[1]*z[5]*z[6];
  z[153] = -state_[9]*z[1]*z[6] - state_[9]*z[2]*z[3]*z[4] + z[97];
  z[154] = -state_[10]*z[0]*z[1]*z[3]*z[5] - state_[11]*z[0]*z[1]*z[2]*z[6] - state_[11]*z[0]*z[3]*z[4] - state_[9]*z[0]*z[1]*z[6] - state_[9]*z[0]*z[2]*z[3]*z[4];
  z[155] = -state_[10]*z[0]*z[1]*z[5]*z[6] + state_[11]*z[0]*z[1]*z[2]*z[3] - state_[11]*z[0]*z[4]*z[6] + state_[9]*z[0]*z[1]*z[3] - state_[9]*z[0]*z[2]*z[4]*z[6];
  z[156] = state_[10]*z[0]*z[4]*z[5]*z[6] - state_[11]*z[0]*z[1]*z[6] - state_[11]*z[0]*z[2]*z[3]*z[4] - state_[9]*z[0]*z[1]*z[2]*z[6] - state_[9]*z[0]*z[3]*z[4];
  z[157] = -state_[10]*state_[9]*z[5]*z[6] + state_[11]*state_[9]*z[2]*z[3] + state_[8]*z[92];
  z[158] = -state_[10]*state_[8]*z[2]*z[3]*z[4] + state_[10]*state_[9]*z[3]*z[5] - state_[11]*z[39]*z[6] - state_[8]*state_[9]*z[1]*z[3]*z[5];
  z[159] = -front_.Ixz*z[118] - front_.Izz*z[65];
  z[160] = state_[10]*state_[11]*z[1]*z[5] + state_[11]*state_[9]*z[2]*z[4] - state_[13]*z[96];
  z[161] = state_[10]*state_[9]*z[3]*z[5] + state_[11]*state_[9]*z[2]*z[6] - state_[8]*(state_[10]*z[2]*z[3]*z[4] - state_[11]*z[4]*z[5]*z[6] + state_[9]*z[1]*z[3]*z[5]);
  z[162] = z[158];
  z[163] = -front_.a*z[65] + front_.b*z[118];
  z[164] = rear_.R*z[1]*z[24]/(z[16]*z[4]) + z[23]*z[36];
  z[165] = state_[10]*state_[8]*z[1]*z[5]*z[6] - state_[11]*state_[8]*z[1]*z[2]*z[3] + state_[11]*state_[8]*z[4]*z[6] - state_[8]*state_[9]*z[40];
  z[166] = front_.Ixx*z[118] + front_.Ixz*z[65];
  z[167] = front_.R*z[13]*z[3]*z[4]/z[102] - front_.b*z[3]*z[5];
  z[168] = -state_[10]*state_[8]*z[1]*z[3]*z[5] - state_[11]*state_[8]*z[1]*z[2]*z[6] - state_[11]*state_[8]*z[3]*z[4] + state_[8]*state_[9]*z[50];
  z[169] = front_.r*state_[8]*z[3]*z[5] - front_.r*z[153];
  z[170] = z[2]*z[72] - z[5]*z[69];
  z[171] = front_.R*z[40]/z[102] - front_.a;
  z[172] = -rear_.R*z[10]*z[8]/z[16] - rear_.R*z[13]*z[8]/z[16] + z[27]*z[4];
  z[173] = front_.R*z[40]*z[6]/z[102] - front_.a*z[6];
  z[174] = z[108] + z[88];
  z[175] = -rear_.R*z[1]*z[7]/(z[16]*z[4]) - state_[8]*z[126];
  z[176] = front_.R*z[3]*z[40]*z[5]/z[102] - front_.a*z[3]*z[5];
  z[177] = rear_.Ixx*z[39] + rear_.Ixz*z[0]*z[35] + rear_.Iyy*z[39] - rear_.Izz*z[39];
  z[178] = z[112]/z[105];
  z[179] = rear_.Ixx*z[35] - rear_.Ixz*z[0]*z[39] - rear_.Iyy*z[35] - rear_.Izz*z[35];
  z[180] = -z[118]*z[40] - z[4]*z[5]*z[65];
  z[181] = -state_[10]*state_[11]*z[1]*z[2] + state_[10]*state_[9]*z[1] + state_[11]*state_[9]*z[4]*z[5] - state_[13]*z[153];
  z[182] = state_[10]*state_[11]*z[6] - state_[10]*state_[9]*z[2]*z[6] - state_[11]*state_[9]*z[3]*z[5] - state_[8]*z[148];
  z[183] = -rear_.Ixz*z[33] - rear_.Iyy*z[19]*z[5] + rear_.Izz*z[34] + rear_.J*state_[12]*z[5] + z[19]*z[20];
  z[184] = state_[10]*state_[8]*z[3]*z[4]*z[5] + state_[10]*state_[9]*z[2]*z[3] + state_[11]*z[19]*z[3] + state_[11]*z[35]*z[6] - state_[8]*state_[9]*z[48];
  z[185] = state_[10]*state_[8]*z[4]*z[5]*z[6] + state_[10]*state_[9]*z[2]*z[6] + state_[11]*z[19]*z[6] - state_[11]*z[3]*z[35] + state_[8]*state_[9]*z[53];
  z[186] = state_[10]*state_[11]*z[3] - state_[10]*state_[9]*z[2]*z[3] + state_[11]*state_[9]*z[5]*z[6] - state_[8]*z[141];
  z[187] = -rear_.Ixx*z[33] + rear_.Ixz*z[34] + rear_.Iyy*z[19]*z[2] - rear_.J*state_[12]*z[2] - z[19]*z[21];
  z[188] = -front_.R*z[4]*z[5]*z[50]/z[102] + front_.b*z[50];
  z[189] = -z[1]*z[2]*z[69] - z[1]*z[5]*z[72] + z[38]*z[4];
  z[190] = -z[135]*z[5]/z[105];
  z[191] = z[142]/z[105];
  z[192] = -front_.R*z[40]*z[50]/z[102] + front_.a*z[50];
  z[193] = rear_.Iyy*state_[9]*z[4] + z[109]*z[4]*z[5] + z[110]*z[2]*z[4];
  z[194] = -rear_.R*state_[9]*z[1]*z[24]/(z[16]*z[4]) + state_[8]*z[91] - z[30]*z[36];
  z[195] = state_[10]*z[11]*z[2]*z[5] - state_[11]*z[13]*z[3]*z[6] + z[153]*z[48];
  z[196] = z[148]*z[40] + z[71];
  z[197] = -z[156]*z[40]/2 + z[71];
  z[198] = -state_[8]*z[164] + z[128];
  z[199] = -rear_.Iyy*state_[8]*state_[9]*z[1] - state_[8]*z[1]*z[109]*z[5] - state_[8]*z[1]*z[110]*z[2];
  z[200] = -state_[10]*z[0]*z[11]*z[2]*z[5] + state_[11]*z[0]*z[13]*z[3]*z[6] - z[154]*z[48];
  z[201] = -state_[10]*z[0]*z[12]*z[2]*z[5] - state_[9]*z[0]*z[1]*z[13]*z[4] - z[156]*z[40];
  z[202] = state_[10]*z[11]*z[2]*z[5] - state_[11]*z[13]*z[3]*z[6] - z[154]*z[48]/2;
  z[203] = -front_.R*z[13]*z[4]*z[6]/z[102] + front_.R*z[2]*z[40]/z[102];
  z[204] = -rear_.a*z[19]*z[39] + rear_.a*z[78] + rear_.b*z[19]*z[35] + rear_.b*z[77];
  z[205] = front_.Ixx*z[88] + front_.Iyy*z[108] - front_.Izz*z[108] - front_.J*state_[13];
  z[206] = -front_.r*(state_[11]*z[2] - state_[13]*z[3]*z[5] + state_[9]) - state_[17]*z[3]*z[5]/z[105] + state_[18]*z[48]/z[105];
  z[207] = z[203] - z[32];
  z[208] = -front_.R*z[1]*z[40]*z[5]/z[102] + front_.R*z[4]*z[5]*z[53]/z[102];
  z[209] = -rear_.R*z[0]*z[1]*z[2]*z[39]/z[16] - rear_.R*z[0]*z[1]*z[35]*z[5]/z[16] - rear_.a*z[19]*z[5] + rear_.a*z[34] - rear_.b*z[19]*z[2] + rear_.b*z[33];
  z[210] = -front_.R*z[50]*z[58]/z[103] + front_.R*z[50]/z[102];
  z[211] = -front_.Ixx*z[118] + front_.Ixz*z[0]*z[65] - front_.Iyy*z[93] + front_.Izz*z[118];
  z[212] = front_.R*z[122]*z[3]*z[4]*z[5]/z[103] - front_.R*z[2]*z[3]*z[4]/z[102];
  z[213] = front_.R*z[122]*z[4]*z[5]*z[6]/z[103] - front_.R*z[2]*z[4]*z[6]/z[102];
  z[214] = -front_.R*z[4]*z[40]*z[5]*z[50]*z[6]/z[103] + z[150];
  z[215] = z[141]*z[48] + z[153]*z[50];
  z[216] = z[141]*z[40] + z[148]*z[50];
  z[217] = -front_.R*z[13]*z[3]*z[4]*z[40]*z[50]/z[103] - front_.R*z[13]*z[4]*z[6]/z[102] + front_.b*z[5]*z[6];
  z[218] = front_.R*z[1]*z[5]*z[6]/z[102] + front_.R*z[138]*z[4]*z[5]*z[6]/z[103];
  z[219] = front_.R*z[122]*z[40]/z[103] - front_.R*z[4]*z[5]*z[6]/z[102];
  z[220] = -front_.r*(state_[10]*z[4] - state_[11]*z[1]*z[5] - state_[13]*z[48]) - state_[17]*z[48]/z[105] - state_[18]*z[3]*z[5]/z[105];
  z[221] = -z[156]*z[50] + z[40]*(-state_[10]*z[0]*z[3]*z[4]*z[5] + state_[11]*z[0]*z[1]*z[3] - state_[11]*z[0]*z[2]*z[4]*z[6] + state_[9]*z[0]*z[1]*z[2]*z[3] - state_[9]*z[0]*z[4]*z[6]);
  z[222] = -front_.R*z[1]*z[3]*z[5]/z[102] - front_.R*z[138]*z[3]*z[4]*z[5]/z[103];
  z[223] = rear_.Iyy*state_[8]*z[4] + z[109]*z[2] - z[110]*z[5] - z[20]*z[39] + z[21]*z[35];
  z[224] = front_.R*z[0]*z[2]*z[3]*z[4]*z[5]/z[102] + front_.R*z[122]*z[13]*z[3]*z[4]/z[103] + front_.b*z[2]*z[3];
  z[225] = front_.r*state_[8]*z[2] + front_.r*(state_[13]*z[53] + z[44]) - state_[17]*z[53]/z[105] + state_[18]*z[5]*z[6]/z[105];
  z[226] = front_.R*z[122]*z[40]*z[6]/z[103] - front_.R*z[14]*z[4]*z[5]/z[102];
  z[227] = -front_.R*z[118]*z[40]/z[102] - front_.R*z[4]*z[5]*z[65]/z[102];
  z[228] = -front_.R*z[1]*z[13]*z[3]/z[102] - front_.R*z[13]*z[138]*z[3]*z[4]/z[103];
  z[229] = front_.R*z[118]*z[4]*z[5]/z[102] - front_.R*z[40]*z[65]/z[102];
  z[230] = -front_.Ixx*z[3]*z[65] + front_.Ixz*z[118]*z[3] + front_.Iyy*z[70] - z[159]*z[3];
  z[231] = state_[10]*z[10]*z[12] - state_[10]*z[12]*z[13] - state_[9]*z[0]*z[1]*z[2]*z[4]*z[5] + z[148]*z[4]*z[5]*z[6] + z[40]*z[92];
  z[232] = -rear_.Ixx*z[77] + rear_.Ixz*z[78] - rear_.Iyy*z[19]*z[35] + rear_.J*state_[12]*z[35] - z[116]*z[19];
  z[233] = rear_.Ixx*z[78] + rear_.Ixz*z[77] - z[110]*z[19] + z[136];
  z[234] = -state_[10]*z[10]*z[11] + state_[10]*z[11]*z[13] - state_[11]*z[0]*z[2]*z[3]*z[5]*z[6] + z[1]*z[153]*z[3]*z[5] - z[48]*z[96];
  z[235] = -rear_.Ixz*z[77] + rear_.Izz*z[78] + z[115]*z[19] + z[136];
  z[236] = rear_.Ixz*z[78] + rear_.Iyy*z[19]*z[35] + rear_.Izz*z[77] - rear_.J*state_[12]*z[35] + z[109]*z[19];
  z[237] = -rear_.Ixx*z[46] + rear_.Ixz*z[52] + rear_.Iyy*z[1]*z[39] + rear_.Iyy*z[19]*z[4]*z[5] - rear_.J*state_[12]*z[4]*z[5] + z[1]*z[110] + z[19]*z[42];
  z[238] = -rear_.Ixz*z[46] - rear_.Iyy*z[1]*z[35] + rear_.Iyy*z[19]*z[2]*z[4] + rear_.Izz*z[52] - rear_.J*state_[12]*z[2]*z[4] - z[1]*z[109] - z[19]*z[41];
  z[239] = -state_[10]*z[0]*z[10]*z[12] + state_[10]*z[0]*z[12]*z[13] + 4*state_[9]*z[1]*z[2]*z[4]*z[5] - z[156]*z[4]*z[5]*z[6] + z[40]*(-state_[10]*z[0]*z[2]*z[4]*z[6] - state_[11]*z[0]*z[3]*z[4]*z[5] - state_[9]*z[0]*z[1]*z[5]*z[6]);
  z[240] = front_.R*z[138]*z[40]/z[103] + front_.R*z[53]/z[102];
  z[241] = state_[10]*z[0]*z[10]*z[11] - state_[10]*z[0]*z[11]*z[13] + 4*state_[11]*z[2]*z[3]*z[5]*z[6] - z[1]*z[154]*z[3]*z[5] - z[48]*(state_[10]*z[0]*z[1]*z[2]*z[3] - state_[11]*z[0]*z[1]*z[5]*z[6] - state_[9]*z[0]*z[3]*z[4]*z[5]);
  z[242] = front_.R*z[4]*z[40]*z[5]*pow(-z[50], -z[0])/z[103] + front_.R*z[4]*z[40]*z[5]/z[102] - front_.b*z[40];
  z[243] = -front_.R*z[108]*z[4]*z[5]/z[102] - front_.R*z[148]/z[102];
  z[244] = rear_.Ixx*z[56] + rear_.Ixz*z[64] - rear_.Iyy*state_[8]*z[1]*z[19]*z[5] + rear_.Iyy*state_[8]*z[39]*z[4] + rear_.J*state_[12]*state_[8]*z[1]*z[5] + state_[8]*z[110]*z[4] - z[19]*z[62];
  z[245] = -front_.R*z[138]*z[40]*z[6]/z[103] - front_.R*z[53]*z[6]/z[102];
  z[246] = front_.Ixz*z[152] + front_.Izz*z[78] + z[108]*z[132];
  z[247] = rear_.Ixz*z[56] - rear_.Iyy*state_[8]*z[1]*z[19]*z[2] - rear_.Iyy*state_[8]*z[35]*z[4] + rear_.Izz*z[64] + rear_.J*state_[12]*state_[8]*z[1]*z[2] - state_[8]*z[109]*z[4] + z[19]*z[61];
  z[248] = front_.Ixx*z[73] - front_.Ixz*z[108]*z[3] - front_.Ixz*z[35] + front_.Iyy*z[6]*z[65] + z[159]*z[6];
  z[249] = rear_.R*z[1]*z[47]/z[16] + rear_.R*z[1]*pow(-z[39], -z[0])/z[16] - rear_.a*z[19]*z[35] - rear_.a*z[77] - rear_.b*z[19]*z[39] + rear_.b*z[78];
  z[250] = -rear_.R*state_[8]*state_[9]*z[1]/(z[16]*z[4]) + rear_.R*state_[9]*z[0]*z[24]*z[8]/pow(z[12], 3.0/2.0) + rear_.R*state_[9]*z[1]*z[23]/(z[16]*z[4]) - rear_.R*state_[9]*z[24]/z[16] + rear_.R*z[1]*z[30]/(z[16]*z[4]) - z[36]*(state_[10]*state_[9]*z[4] + state_[12]*state_[9]*z[4]);
  z[251] = front_.R*z[138]*z[3]*z[40]*z[5]/z[103] + front_.R*z[3]*z[5]*z[53]/z[102];
  z[252] = -z[249];
  z[253] = -z[249];
  z[254] = -z[123] - z[195]*z[3]*z[5]/z[95];
  z[255] = -state_[10]*z[0]*z[1]*z[2]*z[4]*z[5] - state_[9]*z[12]*z[13] + state_[9]*z[13]*z[8] + z[140]*z[40] + z[148]*z[53];
  z[256] = -state_[10]*z[0]*z[2]*z[3]*z[5]*z[6] + state_[11]*z[11]*z[13] - state_[11]*z[13]*z[14] - z[140]*z[48] - z[153]*z[53];
  z[257] = front_.R*state_[10]*z[2]*z[4]/z[102] + front_.R*state_[9]*z[1]*z[5]/z[102] - front_.R*z[108]*z[40]/z[102];
  z[258] = rear_.R*z[0]*z[1]*z[2]*z[35]*z[4]/z[16] - rear_.R*z[0]*z[1]*z[39]*z[4]*z[5]/z[16] - rear_.a*z[1]*z[35] + rear_.a*z[19]*z[2]*z[4] + rear_.a*z[52] - rear_.b*z[1]*z[39] - rear_.b*z[19]*z[4]*z[5] + rear_.b*z[46];
  z[259] = z[258];
  z[260] = -z[123] - z[202]*z[3]*z[5]/z[95];
  z[261] = 4*state_[10]*z[1]*z[2]*z[4]*z[5] + state_[9]*z[0]*z[12]*z[13] - state_[9]*z[0]*z[13]*z[8] + z[155]*z[40] - z[156]*z[53];
  z[262] = -state_[10]*z[0]*z[2]*z[3]*z[5]*z[6] + state_[11]*z[11]*z[13] - state_[11]*z[13]*z[14] + z[154]*z[53]/2 - z[155]*z[48]/2;
  z[263] = -z[150]*z[3]*z[5] - z[151]*z[5]*z[6] + z[173]*z[2];
  z[264] = z[263];
  z[265] = rear_.R*state_[9]*z[35]*z[4]/z[16] + rear_.R*state_[9]*z[35]*z[8]/(z[16]*z[4]) - rear_.R*z[1]*z[19]*z[39]/z[16] - rear_.R*z[1]*z[78]/z[16] + z[35]*z[99];
  z[266] = rear_.R*state_[9]*z[39]*z[4]/z[16] + rear_.R*state_[9]*z[39]*z[8]/(z[16]*z[4]) + rear_.R*z[1]*z[19]*z[35]/z[16] - rear_.R*z[1]*z[77]/z[16] + z[39]*z[99];
  z[267] = -front_.R*z[50]*z[58]*z[6]/z[103] + front_.R*z[3]*z[40]/z[102] + front_.R*z[50]*z[6]/z[102] - front_.a*z[3];
  z[268] = -state_[17]*z[50]*z[60]/z[106] + state_[17]*z[50]/z[105] - state_[18]*z[3]*z[48]*z[5]*z[50]/z[106];
  z[269] = state_[17]*z[3]*z[48]*z[5]*z[50]/z[106] - state_[18]*z[50]*z[60]/z[106] + state_[18]*z[50]/z[105];
  z[270] = front_.Iyy*state_[8]*z[108]*z[53] + front_.Iyy*state_[8]*z[118]*z[48] - front_.J*state_[13]*state_[8]*z[53] - state_[8]*z[166]*z[48];
  z[271] = -front_.R*z[3]*z[5]*z[50]*z[58]/z[103] + front_.R*z[3]*z[5]*z[50]/z[102] - front_.R*z[40]*z[5]*z[6]/z[102] + front_.a*z[5]*z[6];
  z[272] = -state_[8]*z[3]*z[5] + z[153] - z[195]*z[48]/z[95];
  z[273] = -z[109]*z[35] - z[110]*z[39] - z[115]*z[39] + z[116]*z[35];
  z[274] = -rear_.a*state_[8]*state_[9]*z[4] - rear_.b*z[18] - z[265];
  z[275] = -front_.R*z[58]*pow(-z[50], -z[0])/z[103] - front_.R*z[58]/z[102] + front_.R*pow(-z[50], -z[0])/z[102] + front_.a*z[40];
  z[276] = -rear_.a*z[18] + rear_.b*state_[8]*state_[9]*z[4] + z[266];
  z[277] = -z[1]*z[173]*z[5] - z[150]*z[48] + z[151]*z[53];
  z[278] = -front_.R*z[13]*z[4]*z[40]*z[50]*z[6]/z[103] + front_.R*z[2]*z[50]*z[58]/z[103] - front_.R*z[2]*z[50]/z[102];
  z[279] = -z[1]*z[173]*z[5] - z[150]*z[48] + z[151]*z[53];
  z[280] = -rear_.a*state_[8]*state_[9]*z[4] - rear_.b*z[18] - z[265];
  z[281] = -rear_.R*state_[9]*z[16]*z[5] - rear_.R*state_[9]*z[5]*z[8]/z[16] + rear_.R*z[1]*z[19]*z[2]*z[4]/z[16] - rear_.R*z[1]*z[52]/z[16] - rear_.R*z[35]*z[8]/z[16] - rear_.a*z[0]*z[1]*z[19] + rear_.b*state_[9]*z[4] + z[38]*z[39] - z[4]*z[5]*z[99];
  z[282] = front_.R*z[122]*z[3]*z[40]*z[5]/z[103] - front_.R*z[13]*z[3]*z[4]*z[6]/z[102] - front_.R*z[2]*z[3]*z[40]/z[102] + front_.a*z[2]*z[3];
  z[283] = -front_.R*z[122]*z[4]*z[5]*z[50]/z[103] + front_.R*z[12]*z[13]*z[3]/z[102] + front_.R*z[2]*z[4]*z[50]/z[102] - front_.b*z[3]*z[4]*z[5];
  z[284] = -rear_.R*state_[9]*z[16]*z[2] - rear_.R*state_[9]*z[2]*z[8]/z[16] - rear_.R*z[1]*z[19]*z[4]*z[5]/z[16] - rear_.R*z[1]*z[46]/z[16] - rear_.R*z[39]*z[8]/z[16] - rear_.a*state_[9]*z[4] - rear_.b*z[0]*z[1]*z[19] - z[2]*z[4]*z[99] - z[35]*z[38];
  z[285] = -z[188]*z[5]*z[6] + z[192]*z[2] - z[3]*z[5]*z[83];
  z[286] = -rear_.R*state_[9]*z[16]*z[5] - rear_.R*state_[9]*z[5]*z[8]/z[16] + rear_.R*z[1]*z[19]*z[2]*z[4]/z[16] - rear_.R*z[1]*z[52]/z[16] - rear_.R*z[35]*z[8]/z[16] - rear_.a*z[0]*z[1]*z[19] + rear_.b*state_[9]*z[4] + z[38]*z[39] - z[4]*z[5]*z[99];
  z[287] = -(-state_[10]*z[0]*z[2]*z[3] + state_[11]*z[0]*z[5]*z[6] - state_[8]*z[0]*z[48] - z[200]*z[3]*z[5]/z[95])/(2*z[105]);
  z[288] = z[285];
  z[289] = -rear_.R*state_[9]*z[16]*z[2] - rear_.R*state_[9]*z[2]*z[8]/z[16] - rear_.R*z[1]*z[19]*z[4]*z[5]/z[16] - rear_.R*z[1]*z[46]/z[16] - rear_.R*z[39]*z[8]/z[16] - rear_.a*state_[9]*z[4] - rear_.b*z[0]*z[1]*z[19] - z[2]*z[4]*z[99] - z[35]*z[38];
  z[290] = -rear_.R*state_[9]*z[2]*z[4]/z[16] - rear_.R*state_[9]*z[2]*z[8]/(z[16]*z[4]) - rear_.R*z[1]*z[19]*z[5]/z[16] - rear_.R*z[1]*z[34]/z[16] + rear_.R*z[39]*z[4]/z[16] + rear_.R*z[39]*z[8]/(z[16]*z[4]) + rear_.b*state_[8]*z[4] - z[2]*z[99] + z[27]*z[39];
  z[291] = front_.Ixx*z[108]*z[3] + front_.Ixz*z[73] - front_.Iyy*z[108]*z[3] - front_.Iyy*z[118]*z[6] - front_.Izz*z[35] + front_.J*state_[13]*z[3] + z[166]*z[6];
  z[292] = -rear_.R*state_[9]*z[2]*z[4]/z[16] - rear_.R*state_[9]*z[2]*z[8]/(z[16]*z[4]) - rear_.R*z[1]*z[19]*z[5]/z[16] - rear_.R*z[1]*z[34]/z[16] + rear_.R*z[39]*z[4]/z[16] + rear_.R*z[39]*z[8]/(z[16]*z[4]) + rear_.b*state_[8]*z[4] - z[2]*z[99] + z[27]*z[39];
  z[293] = rear_.R*state_[9]*z[4]*z[5]/z[16] + rear_.R*state_[9]*z[5]*z[8]/(z[16]*z[4]) - rear_.R*z[1]*z[19]*z[2]/z[16] - rear_.R*z[1]*z[33]/z[16] - rear_.R*z[35]*z[4]/z[16] - rear_.R*z[35]*z[8]/(z[16]*z[4]) - rear_.a*state_[8]*z[4] - z[27]*z[35] + z[5]*z[99];
  z[294] = z[293];
  z[295] = -front_.Ixx*z[114] + front_.Ixz*z[34] + front_.Iyy*z[108]*z[2] - front_.Iyy*z[3]*z[5]*z[65] - front_.J*state_[13]*z[2] - z[108]*z[29] - z[159]*z[3]*z[5];
  z[296] = front_.Iyy*z[184] + z[118]*z[159] + z[166]*z[65];
  z[297] = front_.Iyy*z[124] + z[118]*z[29] - z[159]*z[5]*z[6] - z[166]*z[2] - z[28]*z[65];
  z[298] = -z[111]*z[39] + z[265];
  z[299] = -front_.Ixz*z[114] - front_.Iyy*z[108]*z[5]*z[6] + front_.Iyy*z[118]*z[3]*z[5] + front_.J*state_[13]*z[5]*z[6] + z[108]*z[28] - z[166]*z[3]*z[5];
  z[300] = front_.R*z[118]*z[138]*z[4]*z[5]/z[103] - front_.R*z[138]*z[40]*z[65]/z[103];
  z[301] = -z[111]*z[39] + z[265];
  z[302] = z[111]*z[35] + z[266];
  z[303] = -front_.R*z[122]*z[40]*z[50]/z[103] + front_.R*z[3]*z[4]*z[40]*z[5]/z[102] + front_.R*z[4]*z[5]*z[50]*z[6]/z[102] - front_.a*z[3]*z[4]*z[5];
  z[304] = -z[1]*z[192]*z[5] + z[188]*z[53] - z[48]*z[83];
  z[305] = -front_.R*z[1]*z[5]*z[50]/z[102] - front_.R*z[138]*z[4]*z[5]*z[50]/z[103] + front_.R*z[4]*z[48]*z[5]/z[102] - front_.b*z[48];
  z[306] = -z[1]*z[192]*z[5] + z[188]*z[53] - z[48]*z[83];
  z[307] = -front_.r*state_[8] - front_.r*(-state_[10]*z[1] - state_[11]*z[4]*z[5] + state_[13]*z[50]) + z[268];
  z[308] = -(-state_[8]*z[0]*z[3]*z[5] + z[154] + z[200]*z[48]/z[95])/(2*z[105]);
  z[309] = front_.Izz*z[34] + z[299];
  z[310] = z[167]*z[5]*z[6] - z[176]*z[2] + z[207]*z[3]*z[5];
  z[311] = front_.Ixx*z[184] + front_.Ixz*pow(-z[108], -z[0]) + front_.Iyy*z[118]*z[65] + z[118]*z[159];
  z[312] = -state_[17]*z[1]*z[3]*z[5]/z[105] - state_[17]*z[127]*z[48]/z[106] - state_[18]*z[127]*z[3]*z[5]/z[106] + state_[18]*z[2]*z[3]/z[105];
  z[313] = front_.R*state_[8]*z[1]*z[40]*z[5]/z[102] - front_.R*state_[8]*z[4]*z[5]*z[53]/z[102] + front_.R*z[1]*z[118]*z[5]/z[102] - front_.R*z[53]*z[65]/z[102];
  z[314] = -front_.Ixx*z[185] + front_.Ixz*z[77] - front_.Iyy*z[108]*z[65] + front_.J*state_[13]*z[65] - z[108]*z[159];
  z[315] = z[167] + z[278];
  z[316] = front_.R*z[138]*z[40]*z[50]/z[103] - front_.R*z[40]*z[48]/z[102] + front_.R*z[50]*z[53]/z[102] + front_.a*z[48];
  z[317] = front_.r*(state_[11]*z[5] + state_[13]*z[2]*z[3]) + state_[17]*z[127]*z[3]*z[5]/z[106] - state_[17]*z[2]*z[3]/z[105] - state_[18]*z[1]*z[3]*z[5]/z[105] - state_[18]*z[127]*z[48]/z[106];
  z[318] = -front_.R*z[122]*z[13]*z[4]*z[6]/z[103] + front_.R*z[122]*z[2]*z[40]/z[103] + front_.R*z[2]*z[4]*z[5]*z[6]/z[102] + front_.R*z[40]*z[5]/z[102];
  z[319] = z[1]*z[176]*z[5] - z[167]*z[53] + z[207]*z[48];
  z[320] = state_[17]*z[142]*z[3]*z[5]/z[106] + state_[17]*z[5]*z[6]/z[105] - state_[18]*z[142]*z[48]/z[106] + state_[18]*z[53]/z[105];
  z[321] = -front_.r*state_[8]*z[4] + z[317];
  z[322] = -front_.r*(state_[11]*z[1]*z[2] - state_[13]*z[1]*z[3]*z[5]) + z[312];
  z[323] = -front_.r*state_[8]*z[4] + z[317];
  z[324] = front_.Ixx*z[108]*z[65] - front_.Ixz*z[108]*z[118] + front_.Iyy*z[185] + z[108]*z[159];
  z[325] = front_.Ixx*z[139] + front_.Ixz*z[52] + front_.Iyy*z[108]*z[4]*z[5] - front_.Iyy*z[50]*z[65] - front_.J*state_[13]*z[4]*z[5] - z[108]*z[80] - z[159]*z[50];
  z[326] = front_.r*(-state_[11]*z[1]*z[2] + state_[13]*z[1]*z[3]*z[5] + state_[9]*z[1]) + z[312];
  z[327] = z[326];
  z[328] = front_.Iyy*z[147] + z[118]*z[80] - z[159]*z[40] - z[166]*z[4]*z[5] - z[65]*z[79];
  z[329] = -front_.a*z[5] - front_.b*z[2]*z[6] + z[318];
  z[330] = -front_.Ixz*z[185] + front_.Iyy*z[108]*z[118] + front_.Izz*z[77] - front_.J*state_[13]*z[118] - z[108]*z[166];
  z[331] = front_.R*z[196]*z[40]/z[103] + z[243];
  z[332] = -front_.R*z[1]*z[13]*z[6]/z[102] - front_.R*z[13]*z[138]*z[4]*z[6]/z[103] + front_.R*z[138]*z[2]*z[40]/z[103] + front_.R*z[2]*z[53]/z[102];
  z[333] = front_.Ixx*z[165] + front_.Ixz*z[64] - front_.Iyy*state_[8]*z[1]*z[108]*z[5] - front_.Iyy*state_[8]*z[48]*z[65] + front_.J*state_[13]*state_[8]*z[1]*z[5] - state_[8]*z[159]*z[48] - z[108]*z[90];
  z[334] = -front_.R*z[196]*z[4]*z[5]/z[103] + z[257];
  z[335] = front_.Iyy*z[168] + state_[8]*z[1]*z[166]*z[5] + state_[8]*z[159]*z[53] + z[118]*z[90] - z[65]*z[89];
  z[336] = front_.R*z[197]*z[40]/z[103] + z[243];
  z[337] = front_.r*state_[8]*z[1]*z[5] + front_.r*(state_[10]*z[5] - state_[13]*z[5]*z[6]) + z[320];
  z[338] = -front_.R*z[197]*z[4]*z[5]/z[103] + z[257];
  z[339] = -rear_.R*state_[8]*z[0]*z[2]*z[35]*z[8]/z[16] + rear_.R*state_[8]*z[0]*z[39]*z[5]*z[8]/z[16] - rear_.R*z[4]*z[47]/z[16] - rear_.R*z[4]*pow(-z[39], -z[0])/z[16] - rear_.R*z[47]*z[8]/(z[16]*z[4]) - rear_.R*z[8]*pow(-z[39], -z[0])/(z[16]*z[4]) - rear_.a*state_[8]*z[1]*z[19]*z[2] - rear_.a*state_[8]*z[35]*z[4] + rear_.a*z[64] + rear_.b*state_[8]*z[1]*z[19]*z[5] - rear_.b*state_[8]*z[39]*z[4] - rear_.b*z[56];
  z[340] = -rear_.R*state_[8]*z[0]*z[2]*z[35]*z[8]/z[16] + rear_.R*state_[8]*z[0]*z[39]*z[5]*z[8]/z[16] - rear_.R*z[4]*z[47]/z[16] - rear_.R*z[4]*pow(-z[39], -z[0])/z[16] - rear_.R*z[47]*z[8]/(z[16]*z[4]) - rear_.R*z[8]*pow(-z[39], -z[0])/(z[16]*z[4]) - rear_.a*state_[8]*z[1]*z[19]*z[2] - rear_.a*state_[8]*z[35]*z[4] + rear_.a*z[64] + rear_.b*state_[8]*z[1]*z[19]*z[5] - rear_.b*state_[8]*z[39]*z[4] - rear_.b*z[56];
  z[341] = front_.Ixz*z[139] - front_.Iyy*z[108]*z[40] + front_.Iyy*z[118]*z[50] + front_.Izz*z[52] + front_.J*state_[13]*z[40] + z[108]*z[79] - z[166]*z[50];
  z[342] = -state_[17]*z[142]*z[48]/z[106] - state_[18]*z[142]*z[3]*z[5]/z[106] - z[225];
  z[343] = front_.Iyy*z[158] + z[118]*z[133] - z[132]*z[65] - z[159]*z[66] + z[166]*z[35];
  z[344] = front_.Ixx*z[152] + front_.Ixz*z[78] - front_.Iyy*z[108]*z[35] + front_.Iyy*z[57]*z[65] + front_.J*state_[13]*z[35] - z[108]*z[133] + z[159]*z[57];
  z[345] = -front_.R*z[118]*z[4]*z[40]*z[5]*z[50]/z[103] + front_.R*z[50]*z[58]*z[65]/z[103] - front_.R*z[108]*z[4]*z[5]/z[102] - front_.R*z[50]*z[65]/z[102];
  z[346] = -2*front_.R*z[118]*z[40]/z[102] - front_.R*z[125]*z[50]/z[102] + front_.a*z[118] - front_.a*z[93];
  z[347] = state_[17]*z[144]*z[48]/z[106] + state_[18]*z[144]*z[3]*z[5]/z[106] - z[225];
  z[348] = front_.R*z[0]*z[108]*z[4]*z[5]/z[102] + front_.R*z[0]*z[50]*z[65]/z[102] + front_.R*z[118]*z[4]*z[40]*z[5]*z[51]/z[103] - front_.R*z[51]*z[58]*z[65]/z[103];
  z[349] = front_.Ixz*z[165] + front_.Izz*z[64] + z[108]*z[89] + z[270];
  z[350] = front_.R*z[108]*z[125]*z[40]/z[102] + front_.R*z[186]*z[4]*z[5]/z[102] - front_.a*pow(-z[108], -z[0]) + front_.b*z[184];
  z[351] = -front_.Ixx*pow(-z[108], -z[0]) + front_.Ixz*z[184] - front_.Iyy*pow(z[118], 2) + front_.Iyy*pow(-z[108], -z[0]) - front_.J*state_[13]*z[108] + z[118]*z[166];
  z[352] = -front_.R*z[118]*z[122]*z[4]*z[5]/z[103] + front_.R*z[122]*z[40]*z[65]/z[103] + front_.R*z[118]*z[2]*z[4]/z[102] + front_.R*z[35]*z[40]/z[102];
  z[353] = -front_.Iyy*z[108]*z[66] - front_.Iyy*z[118]*z[57] + front_.J*state_[13]*z[66] + z[166]*z[57] + z[246];
  z[354] = front_.R*z[0]*z[40]*z[65]/z[102] + front_.R*z[125]*z[4]*z[40]*z[5]*z[50]/z[103] - front_.a*z[0]*z[65] - front_.b*z[118] - front_.b*z[93];
  z[355] = front_.R*z[0]*z[40]*z[65]/z[102] + front_.R*z[125]*z[4]*z[40]*z[5]*z[50]/z[103] - front_.a*z[0]*z[65] - front_.b*z[118] - front_.b*z[93];
  z[356] = -front_.R*z[125]*z[50]*z[58]/z[103] - z[346];
  z[357] = z[356];
  z[358] = front_.R*z[125]*z[51]*z[58]/(2*z[103]) - z[346];
  z[359] = rear_.R*state_[8]*state_[9]*z[1]*z[2]*z[4]/z[16] + rear_.R*state_[8]*state_[9]*z[2]*z[9]/(z[16]*z[4]) - rear_.R*state_[8]*z[1]*z[39]*z[4]/z[16] + rear_.R*state_[8]*z[19]*z[5]*z[8]/z[16] + rear_.R*state_[9]*z[0]*z[1]*z[35]/z[16] + rear_.R*state_[9]*z[0]*z[35]*z[9]/pow(z[12], 3.0/2.0) + rear_.R*z[1]*z[56]/z[16] + rear_.R*z[19]*z[39]*z[4]/z[16] + rear_.R*z[19]*z[39]*z[8]/(z[16]*z[4]) + rear_.R*z[4]*z[78]/z[16] + rear_.R*z[78]*z[8]/(z[16]*z[4]) + rear_.a*state_[8]*state_[9]*z[1] - rear_.b*state_[8]*z[0]*z[19]*z[4] + state_[8]*z[1]*z[2]*z[99] + z[35]*z[55];
  z[360] = rear_.R*state_[8]*state_[9]*z[1]*z[4]*z[5]/z[16] + rear_.R*state_[8]*state_[9]*z[5]*z[9]/(z[16]*z[4]) - rear_.R*state_[8]*z[1]*z[35]*z[4]/z[16] - rear_.R*state_[8]*z[19]*z[2]*z[8]/z[16] - rear_.R*state_[9]*z[0]*z[1]*z[39]/z[16] - rear_.R*state_[9]*z[0]*z[39]*z[9]/pow(z[12], 3.0/2.0) - rear_.R*z[1]*z[64]/z[16] + rear_.R*z[19]*z[35]*z[4]/z[16] + rear_.R*z[19]*z[35]*z[8]/(z[16]*z[4]) - rear_.R*z[4]*z[77]/z[16] - rear_.R*z[77]*z[8]/(z[16]*z[4]) - rear_.a*state_[8]*z[0]*z[19]*z[4] - rear_.b*state_[8]*state_[9]*z[1] + state_[8]*z[1]*z[5]*z[99] - z[39]*z[55];
  z[361] = -z[2]*z[276]*z[36]*z[4] + z[280]*z[36]*z[4]*z[5];
  z[362] = z[360];
  z[363] = -front_.R*z[4]*z[5]*z[6]*z[65]/z[102] + front_.R*z[4]*z[5]*z[66]/z[102] + z[352];
  z[364] = z[300] + z[313];
  z[365] = front_.R*z[118]*z[149]*z[4]*z[5]/z[103] - front_.R*z[149]*z[40]*z[65]/z[103] + z[313];
  z[366] = front_.r*state_[13]*z[140] + state_[10]*state_[18]*z[142]*z[2]*z[3]/z[106] + state_[10]*state_[18]*z[2]*z[6]/z[105] - state_[11]*state_[18]*z[142]*z[5]*z[6]/z[106] + state_[11]*state_[18]*z[3]*z[5]/z[105] + state_[17]*z[142]*z[153]/z[106] - state_[17]*z[140]/z[105];
  z[367] = front_.r*z[75] - state_[10]*state_[17]*z[2]*z[3]/z[105] + state_[11]*state_[17]*z[5]*z[6]/z[105] + state_[17]*z[195]*z[3]*z[5]/z[106] - state_[18]*z[195]*z[48]/z[106] + state_[18]*z[153]/z[105] + state_[8]*z[220];
  z[368] = front_.r*z[75] - state_[10]*state_[17]*z[2]*z[3]/z[105] + state_[11]*state_[17]*z[5]*z[6]/z[105] + state_[17]*z[200]*z[3]*z[5]/(2*z[106]) - state_[18]*z[200]*z[48]/(2*z[106]) + state_[18]*z[153]/z[105] + state_[8]*z[220];
  z[369] = front_.r*z[181] + state_[10]*state_[18]*z[2]*z[3]/z[105] - state_[11]*state_[18]*z[5]*z[6]/z[105] - state_[17]*z[195]*z[48]/z[106] + state_[17]*z[153]/z[105] - state_[18]*z[195]*z[3]*z[5]/z[106] + state_[8]*z[206];
  z[370] = front_.r*z[181] + state_[10]*state_[18]*z[2]*z[3]/z[105] - state_[11]*state_[18]*z[5]*z[6]/z[105] - state_[17]*z[200]*z[48]/(2*z[106]) + state_[17]*z[153]/z[105] - state_[18]*z[200]*z[3]*z[5]/(2*z[106]) + state_[8]*z[206];
  z[371] = -state_[10]*state_[17]*z[2]*z[3]*z[48]*z[50]/z[106] + state_[11]*state_[17]*z[48]*z[5]*z[50]*z[6]/z[106] - state_[17]*z[215]*z[3]*z[5]/z[106] + state_[18]*z[153]*z[48]*z[50]/z[106] + state_[18]*z[215]*z[48]/z[106] - state_[18]*z[141]/z[105];
  z[372] = -front_.R*z[196]*z[40]/z[103] + front_.R*z[125]*z[4]*z[5]/z[102] + front_.R*z[148]/z[102] - front_.b*z[108] - front_.b*z[88] + z[345];
  z[373] = front_.R*state_[10]*z[2]*z[4]*z[40]/z[102] + front_.R*state_[9]*z[1]*z[40]*z[5]/z[102] + front_.R*z[118]*z[40]*z[50]/z[102] - front_.R*z[12]*z[125]*z[13]/z[102] - front_.R*z[125]*z[58]/z[102] + front_.R*z[4]*z[5]*z[50]*z[65]/z[102] + front_.R*z[40]*z[52]/z[102] + front_.a*z[108]*z[40] - front_.a*z[118]*z[50] - front_.a*z[52] + front_.b*z[108]*z[4]*z[5] + front_.b*z[139] - front_.b*z[50]*z[65];
  z[374] = -front_.r*(state_[10]*state_[11]*z[2]*z[4] - state_[10]*state_[9]*z[4] + state_[11]*state_[9]*z[1]*z[5] - state_[13]*z[141]) + state_[10]*state_[18]*z[2]*z[3]*z[48]*z[50]/z[106] - state_[11]*state_[18]*z[48]*z[5]*z[50]*z[6]/z[106] + state_[17]*z[153]*z[48]*z[50]/z[106] + state_[17]*z[215]*z[48]/z[106] - state_[17]*z[141]/z[105] + state_[18]*z[215]*z[3]*z[5]/z[106];
  z[375] = -z[373];
  z[376] = -z[373];
  z[377] = front_.r*(state_[10]*state_[13]*z[2]*z[6] + state_[11]*state_[13]*z[3]*z[5]) - state_[10]*state_[17]*z[142]*z[2]*z[3]/z[106] - state_[10]*state_[17]*z[2]*z[6]/z[105] + state_[11]*state_[17]*z[142]*z[5]*z[6]/z[106] - state_[11]*state_[17]*z[3]*z[5]/z[105] + state_[18]*z[142]*z[153]/z[106] - state_[18]*z[140]/z[105] + state_[8]*(-front_.r*state_[13]*z[53] - state_[17]*z[142]*z[48]/z[106] + state_[17]*z[53]/z[105] - state_[18]*z[142]*z[3]*z[5]/z[106] - state_[18]*z[5]*z[6]/z[105]);
  z[378] = front_.R*state_[10]*z[2]*z[4]*z[6]/z[102] + front_.R*state_[9]*z[1]*z[5]*z[6]/z[102] + front_.R*z[122]*z[125]*z[4]*z[5]/z[103] - front_.R*z[196]*z[4]*z[5]*z[6]/z[103] - front_.R*z[108]*z[40]*z[6]/z[102] - front_.R*z[125]*z[2]*z[4]/z[102] - front_.R*z[125]*z[40]*z[6]/z[102] + front_.R*z[3]*z[4]*z[5]*z[65]/z[102] - front_.R*z[4]*z[5]*z[70]/z[102] - front_.a*z[0]*z[108]*z[6] - front_.b*z[3]*z[65] + front_.b*z[70];
  z[379] = front_.R*state_[10]*z[2]*z[3]*z[4]/z[102] + front_.R*state_[9]*z[1]*z[3]*z[5]/z[102] - front_.R*z[118]*z[40]*z[6]/z[102] - front_.R*z[125]*z[3]*z[40]/z[102] - front_.R*z[4]*z[5]*z[73]/z[102] + front_.a*z[108]*z[3] + front_.a*z[118]*z[6] + front_.a*z[35] + front_.b*z[6]*z[65] + front_.b*z[73] - z[352];
  z[380] = -front_.R*z[122]*z[125]*z[40]/z[103] + front_.R*z[196]*z[40]*z[6]/z[103] - front_.R*z[108]*z[4]*z[5]*z[6]/z[102] - front_.R*z[118]*z[3]*z[4]*z[5]/z[102] - front_.R*z[148]*z[6]/z[102] + front_.R*z[40]*z[70]/z[102] - front_.a*z[70] - front_.b*z[0]*z[108]*z[6] + front_.b*z[118]*z[3] + z[163]*z[3] - z[229]*z[3];
  z[381] = -rear_.R*z[1]*z[2]*z[280]/z[16] - rear_.R*z[1]*z[276]*z[5]/z[16] - z[1]*z[2]*z[280]*z[36] - z[1]*z[276]*z[36]*z[5];
  z[382] = front_.R*state_[10]*z[125]*z[2]*z[4]/z[102] + front_.R*state_[9]*z[1]*z[125]*z[5]/z[102] - front_.R*z[125]*z[196]*z[4]*z[5]/z[103] - z[163]*z[65] + z[229]*z[65] - z[350];
  z[383] = front_.R*z[125]*z[196]*z[40]/z[103] - front_.R*z[108]*z[125]*z[4]*z[5]/z[102] - front_.R*z[125]*z[148]/z[102] + front_.R*z[186]*z[40]/z[102] + front_.a*z[184] + front_.b*pow(-z[108], -z[0]) + z[118]*z[163] - z[118]*z[229];
  z[384] = -front_.R*state_[10]*z[2]*z[4]*z[50]/z[102] - front_.R*state_[9]*z[1]*z[5]*z[50]/z[102] + front_.R*z[196]*z[4]*z[5]*z[50]/z[103] + front_.R*z[108]*z[40]*z[50]/z[102] + front_.R*z[125]*z[40]*z[50]/z[102] - front_.R*z[141]*z[4]*z[5]/z[102] + front_.a*z[0]*z[108]*z[50] + front_.b*z[147] - z[163]*z[4]*z[5] + z[229]*z[4]*z[5] + z[65]*z[83];
  z[385] = -front_.R*z[125]*z[201]*z[40]/(2*z[103]) + front_.R*z[108]*z[125]*z[4]*z[5]/z[102] + front_.R*z[125]*z[148]/z[102] - front_.R*z[186]*z[40]/z[102] - front_.a*z[184] - front_.b*pow(-z[108], -z[0]) - z[118]*z[163] + z[118]*z[229];
  z[386] = -front_.R*z[196]*z[40]*z[50]/z[103] + front_.R*z[108]*z[4]*z[5]*z[50]/z[102] + front_.R*z[125]*z[4]*z[5]*z[50]/z[102] + front_.R*z[141]*z[40]/z[102] + front_.R*z[148]*z[50]/z[102] - front_.a*z[147] + front_.b*z[0]*z[108]*z[50] - z[118]*z[83] + z[163]*z[40] - z[229]*z[40];
  z[387] = front_.R*z[196]*z[3]*z[4]*z[5]/z[103] - z[379];
  z[388] = front_.R*z[197]*z[3]*z[4]*z[5]/z[103] - z[379];
  z[389] = front_.R*z[201]*z[3]*z[4]*z[5]/(2*z[103]) - z[379];
  z[390] = -front_.R*state_[10]*z[2]*z[3]*z[4]*z[5]/z[102] - front_.R*state_[9]*z[1]*z[13]*z[3]/z[102] - front_.R*z[1]*z[125]*z[5]/z[102] - front_.R*z[125]*z[138]*z[4]*z[5]/z[103] + front_.R*z[13]*z[196]*z[3]*z[4]/z[103] + front_.R*z[108]*z[3]*z[40]*z[5]/z[102] - front_.R*z[124]*z[4]*z[5]/z[102] + front_.R*z[125]*z[3]*z[40]*z[5]/z[102] + front_.a*z[0]*z[108]*z[3]*z[5] + front_.b*z[124] - z[163]*z[2] + z[2]*z[229] - z[203]*z[65] + z[32]*z[65];
  z[391] = -front_.R*state_[10]*z[2]*z[3]*z[4]*z[5]/z[102] - front_.R*state_[9]*z[1]*z[13]*z[3]/z[102] - front_.R*z[1]*z[125]*z[5]/z[102] - front_.R*z[125]*z[143]*z[4]*z[5]/(2*z[103]) + front_.R*z[13]*z[201]*z[3]*z[4]/(2*z[103]) + front_.R*z[108]*z[3]*z[40]*z[5]/z[102] - front_.R*z[124]*z[4]*z[5]/z[102] + front_.R*z[125]*z[3]*z[40]*z[5]/z[102] + front_.a*z[0]*z[108]*z[3]*z[5] + front_.b*z[124] - z[163]*z[2] + z[2]*z[229] - z[203]*z[65] + z[32]*z[65];
  z[392] = front_.R*z[125]*z[138]*z[40]/z[103] - front_.R*z[196]*z[3]*z[40]*z[5]/z[103] + front_.R*z[108]*z[13]*z[3]*z[4]/z[102] + front_.R*z[124]*z[40]/z[102] + front_.R*z[125]*z[13]*z[3]*z[4]/z[102] + front_.R*z[125]*z[53]/z[102] + front_.R*z[148]*z[3]*z[5]/z[102] - front_.a*z[124] + front_.b*z[0]*z[108]*z[3]*z[5] + z[118]*z[203] - z[118]*z[32] + z[163]*z[5]*z[6] - z[229]*z[5]*z[6];
  z[393] = front_.R*z[125]*z[143]*z[40]/(2*z[103]) - front_.R*z[201]*z[3]*z[40]*z[5]/(2*z[103]) + front_.R*z[108]*z[13]*z[3]*z[4]/z[102] + front_.R*z[124]*z[40]/z[102] + front_.R*z[125]*z[13]*z[3]*z[4]/z[102] + front_.R*z[125]*z[53]/z[102] + front_.R*z[148]*z[3]*z[5]/z[102] - front_.a*z[124] + front_.b*z[0]*z[108]*z[3]*z[5] + z[118]*z[203] - z[118]*z[32] + z[163]*z[5]*z[6] - z[229]*z[5]*z[6];
  z[394] = front_.R*state_[10]*z[118]*z[2]*z[4]/z[102] + front_.R*state_[9]*z[1]*z[118]*z[5]/z[102] - front_.R*z[118]*z[196]*z[4]*z[5]/z[103] + front_.R*z[196]*z[40]*z[65]/z[103] - front_.R*z[118]*z[125]*z[40]/z[102] - front_.R*z[125]*z[4]*z[5]*z[65]/z[102] - front_.R*z[148]*z[65]/z[102] + front_.R*z[182]*z[4]*z[5]/z[102] - front_.R*z[40]*z[77]/z[102] + front_.a*z[108]*z[118] + front_.a*z[77] + front_.b*z[108]*z[65] + front_.b*z[185];
  z[395] = front_.R*state_[10]*z[118]*z[2]*z[4]/z[102] + front_.R*state_[9]*z[1]*z[118]*z[5]/z[102] - front_.R*z[118]*z[201]*z[4]*z[5]/(2*z[103]) + front_.R*z[201]*z[40]*z[65]/(2*z[103]) - front_.R*z[118]*z[125]*z[40]/z[102] - front_.R*z[125]*z[4]*z[5]*z[65]/z[102] - front_.R*z[148]*z[65]/z[102] + front_.R*z[182]*z[4]*z[5]/z[102] - front_.R*z[40]*z[77]/z[102] + front_.a*z[108]*z[118] + front_.a*z[77] + front_.b*z[108]*z[65] + front_.b*z[185];
  z[396] = 3*state_[17]*z[195]*z[3]*z[48]*z[5]*z[50]/z[107] - 3*state_[18]*z[195]*z[50]*z[60]/z[107] + state_[18]*z[195]*z[50]/z[106] + state_[8]*(-front_.r*(-state_[10]*z[1] - state_[11]*z[4]*z[5] + state_[13]*z[50]) + z[268]) + z[371];
  z[397] = 3*state_[17]*z[202]*z[3]*z[48]*z[5]*z[50]/z[107] - 3*state_[18]*z[202]*z[50]*z[60]/z[107] + state_[18]*z[202]*z[50]/z[106] + state_[8]*(-front_.r*(-state_[10]*z[1] - state_[11]*z[4]*z[5] + state_[13]*z[50]) + z[268]) + z[371];
  z[398] = -3*state_[17]*z[195]*z[50]*z[60]/z[107] + state_[17]*z[195]*z[50]/z[106] - 3*state_[18]*z[195]*z[3]*z[48]*z[5]*z[50]/z[107] - state_[8]*z[269] + z[374];
  z[399] = -3*state_[17]*z[202]*z[50]*z[60]/z[107] + state_[17]*z[202]*z[50]/z[106] - 3*state_[18]*z[202]*z[3]*z[48]*z[5]*z[50]/z[107] - state_[8]*(-state_[17]*z[3]*z[48]*z[5]*z[51]/(2*z[106]) + state_[18]*z[51]*z[60]/(2*z[106]) + state_[18]*z[50]/z[105]) + z[374];
  z[400] = -front_.R*state_[10]*z[2]*z[4]*z[5]*z[6]/z[102] - front_.R*state_[9]*z[1]*z[13]*z[6]/z[102] + front_.R*z[1]*z[118]*z[5]/z[102] + front_.R*z[13]*z[196]*z[4]*z[6]/z[103] - front_.R*z[196]*z[2]*z[40]/z[103] - front_.R*z[114]*z[4]*z[5]/z[102] - front_.R*z[118]*z[3]*z[40]*z[5]/z[102] + front_.R*z[125]*z[2]*z[4]*z[5]/z[102] + front_.R*z[125]*z[40]*z[5]*z[6]/z[102] - front_.R*z[13]*z[3]*z[4]*z[65]/z[102] + front_.R*z[148]*z[2]/z[102] - front_.R*z[34]*z[40]/z[102] - front_.R*z[53]*z[65]/z[102] - front_.a*z[108]*z[5]*z[6] + front_.a*z[118]*z[3]*z[5] + front_.a*z[34] - front_.b*z[108]*z[2] + front_.b*z[114] + front_.b*z[3]*z[5]*z[65] + z[300];
  z[401] = front_.r*z[74] - state_[10]*state_[17]*z[127]*z[2]*z[3]/z[106] - state_[10]*state_[17]*z[3]*z[5]/z[105] + state_[11]*state_[17]*z[127]*z[5]*z[6]/z[106] - state_[11]*state_[17]*z[2]*z[6]/z[105] + 3*state_[17]*z[127]*z[195]*z[3]*z[5]/z[107] - state_[17]*z[195]*z[2]*z[3]/z[106] + state_[17]*z[234]*z[3]*z[5]/z[106] - state_[18]*z[1]*z[195]*z[3]*z[5]/z[106] - 3*state_[18]*z[127]*z[195]*z[48]/z[107] + state_[18]*z[127]*z[153]/z[106] - state_[18]*z[234]*z[48]/z[106] - state_[18]*z[96]/z[105] + state_[8]*z[322];
  z[402] = -front_.r*z[160] + state_[10]*state_[18]*z[127]*z[2]*z[3]/z[106] + state_[10]*state_[18]*z[3]*z[5]/z[105] - state_[11]*state_[18]*z[127]*z[5]*z[6]/z[106] + state_[11]*state_[18]*z[2]*z[6]/z[105] - state_[17]*z[1]*z[195]*z[3]*z[5]/z[106] - 3*state_[17]*z[127]*z[195]*z[48]/z[107] + state_[17]*z[127]*z[153]/z[106] - state_[17]*z[234]*z[48]/z[106] - state_[17]*z[96]/z[105] - 3*state_[18]*z[127]*z[195]*z[3]*z[5]/z[107] + state_[18]*z[195]*z[2]*z[3]/z[106] - state_[18]*z[234]*z[3]*z[5]/z[106] - state_[8]*z[317];
  z[403] = front_.r*z[74] - state_[10]*state_[17]*z[127]*z[2]*z[3]/z[106] - state_[10]*state_[17]*z[3]*z[5]/z[105] + state_[11]*state_[17]*z[127]*z[5]*z[6]/z[106] - state_[11]*state_[17]*z[2]*z[6]/z[105] + 3*state_[17]*z[127]*z[200]*z[3]*z[5]/(2*z[107]) - state_[17]*z[2]*z[200]*z[3]/(2*z[106]) + state_[17]*z[241]*z[3]*z[5]/(2*z[106]) - state_[18]*z[1]*z[200]*z[3]*z[5]/(2*z[106]) - 3*state_[18]*z[127]*z[200]*z[48]/(2*z[107]) + state_[18]*z[127]*z[153]/z[106] - state_[18]*z[241]*z[48]/(2*z[106]) - state_[18]*z[96]/z[105] + state_[8]*z[322];
  z[404] = -front_.r*z[160] + state_[10]*state_[18]*z[127]*z[2]*z[3]/z[106] + state_[10]*state_[18]*z[3]*z[5]/z[105] - state_[11]*state_[18]*z[127]*z[5]*z[6]/z[106] + state_[11]*state_[18]*z[2]*z[6]/z[105] - state_[17]*z[1]*z[200]*z[3]*z[5]/(2*z[106]) - 3*state_[17]*z[127]*z[200]*z[48]/(2*z[107]) + state_[17]*z[127]*z[153]/z[106] - state_[17]*z[241]*z[48]/(2*z[106]) - state_[17]*z[96]/z[105] - 3*state_[18]*z[127]*z[200]*z[3]*z[5]/(2*z[107]) + state_[18]*z[2]*z[200]*z[3]/(2*z[106]) - state_[18]*z[241]*z[3]*z[5]/(2*z[106]) - state_[8]*z[317];
  z[405] = 3*state_[17]*z[142]*z[195]*z[3]*z[5]/z[107] + state_[17]*z[195]*z[5]*z[6]/z[106] + state_[17]*z[256]*z[3]*z[5]/z[106] - 3*state_[18]*z[142]*z[195]*z[48]/z[107] + state_[18]*z[195]*z[53]/z[106] - state_[18]*z[256]*z[48]/z[106] + z[377];
  z[406] = -3*state_[17]*z[142]*z[195]*z[48]/z[107] + state_[17]*z[195]*z[53]/z[106] - state_[17]*z[256]*z[48]/z[106] - 3*state_[18]*z[142]*z[195]*z[3]*z[5]/z[107] - state_[18]*z[195]*z[5]*z[6]/z[106] - state_[18]*z[256]*z[3]*z[5]/z[106] - state_[8]*(-front_.r*state_[13]*z[5]*z[6] + z[320]) + z[366];
  z[407] = 3*state_[17]*z[142]*z[202]*z[3]*z[5]/z[107] + state_[17]*z[202]*z[5]*z[6]/z[106] + state_[17]*z[262]*z[3]*z[5]/z[106] - 3*state_[18]*z[142]*z[202]*z[48]/z[107] + state_[18]*z[202]*z[53]/z[106] - state_[18]*z[262]*z[48]/z[106] + z[377];
  z[408] = -3*state_[17]*z[142]*z[202]*z[48]/z[107] + state_[17]*z[202]*z[53]/z[106] - state_[17]*z[262]*z[48]/z[106] - 3*state_[18]*z[142]*z[202]*z[3]*z[5]/z[107] - state_[18]*z[202]*z[5]*z[6]/z[106] - state_[18]*z[262]*z[3]*z[5]/z[106] - state_[8]*(-front_.r*state_[13]*z[5]*z[6] - state_[17]*z[144]*z[3]*z[5]/z[106] + state_[17]*z[5]*z[6]/z[105] + state_[18]*z[144]*z[48]/z[106] + state_[18]*z[53]/z[105]) + z[366];
  z[409] = -front_.R*state_[10]*z[125]*z[2]*z[4]*z[40]*z[50]/z[103] + front_.R*state_[10]*z[118]*z[2]*z[4]/z[102] - front_.R*state_[9]*z[1]*z[125]*z[40]*z[5]*z[50]/z[103] + front_.R*state_[9]*z[1]*z[118]*z[5]/z[102] + 3*front_.R*z[125]*z[196]*z[4]*z[40]*z[5]*z[50]/z[104] + front_.R*z[108]*z[125]*z[50]*z[58]/z[103] - front_.R*z[118]*z[196]*z[4]*z[5]/z[103] - front_.R*z[125]*z[216]*z[4]*z[5]/z[103] + front_.R*z[186]*z[4]*z[40]*z[5]*z[50]/z[103] - front_.R*z[108]*z[118]*z[40]/z[102] - front_.R*z[108]*z[125]*z[50]/z[102] - front_.R*z[118]*z[125]*z[40]/z[102] + front_.R*z[182]*z[4]*z[5]/z[102] - front_.a*z[0]*z[108]*z[118] + front_.b*z[108]*z[65] + front_.b*z[185] + z[345]*z[65];
  z[410] = -front_.R*state_[10]*z[125]*z[2]*z[4]*z[40]*z[50]/z[103] + front_.R*state_[10]*z[118]*z[2]*z[4]/z[102] - front_.R*state_[9]*z[1]*z[125]*z[40]*z[5]*z[50]/z[103] + front_.R*state_[9]*z[1]*z[118]*z[5]/z[102] + 3*front_.R*z[125]*z[201]*z[4]*z[40]*z[5]*z[50]/(2*z[104]) + front_.R*z[108]*z[125]*z[50]*z[58]/z[103] - front_.R*z[118]*z[201]*z[4]*z[5]/(2*z[103]) - front_.R*z[125]*z[221]*z[4]*z[5]/(2*z[103]) + front_.R*z[186]*z[4]*z[40]*z[5]*z[50]/z[103] - front_.R*z[108]*z[118]*z[40]/z[102] - front_.R*z[108]*z[125]*z[50]/z[102] - front_.R*z[118]*z[125]*z[40]/z[102] + front_.R*z[182]*z[4]*z[5]/z[102] - front_.a*z[0]*z[108]*z[118] + front_.b*z[108]*z[65] + front_.b*z[185] + z[348]*z[65]/2;
  z[411] = -3*front_.R*z[122]*z[125]*z[196]*z[40]/z[104] + front_.R*z[108]*z[122]*z[125]*z[4]*z[5]/z[103] + front_.R*z[122]*z[125]*z[148]/z[103] - front_.R*z[122]*z[186]*z[40]/z[103] + front_.R*z[125]*z[196]*z[4]*z[5]*z[6]/z[103] + front_.R*z[125]*z[231]*z[40]/z[103] + front_.R*z[196]*z[40]*z[57]/z[103] - front_.R*z[108]*z[125]*z[2]*z[4]/z[102] - front_.R*z[108]*z[4]*z[5]*z[57]/z[102] - front_.R*z[125]*z[4]*z[5]*z[57]/z[102] - front_.R*z[125]*z[92]/z[102] - front_.R*z[148]*z[57]/z[102] + front_.R*z[161]*z[40]/z[102] + front_.R*z[186]*z[4]*z[5]*z[6]/z[102] - front_.b*z[0]*z[108]*z[57] - z[118]*z[363] + z[163]*z[66] - z[229]*z[66];
  z[412] = -3*front_.R*z[125]*z[196]*z[50]*z[58]/z[104] + front_.R*z[108]*z[125]*z[4]*z[40]*z[5]*z[50]/z[103] + front_.R*z[118]*z[196]*z[40]/z[103] + front_.R*z[125]*z[148]*z[40]*z[50]/z[103] + front_.R*z[125]*z[196]*z[50]/z[103] + front_.R*z[125]*z[216]*z[40]/z[103] - front_.R*z[186]*z[50]*z[58]/z[103] - front_.R*z[108]*z[118]*z[4]*z[5]/z[102] - front_.R*z[118]*z[125]*z[4]*z[5]/z[102] - front_.R*z[118]*z[148]/z[102] - front_.R*z[125]*z[141]/z[102] - front_.R*z[182]*z[40]/z[102] + front_.R*z[186]*z[50]/z[102] - front_.a*z[185] - front_.b*z[0]*z[108]*z[118] - front_.b*z[108]*z[118] - z[108]*z[163] + z[108]*z[229] - z[118]*z[345];
  z[413] = -3*front_.R*z[125]*z[201]*z[50]*z[58]/(2*z[104]) + front_.R*z[108]*z[125]*z[4]*z[40]*z[5]*z[50]/z[103] + front_.R*z[118]*z[201]*z[40]/(2*z[103]) + front_.R*z[125]*z[148]*z[40]*z[50]/z[103] + front_.R*z[125]*z[201]*z[50]/(2*z[103]) + front_.R*z[125]*z[221]*z[40]/(2*z[103]) - front_.R*z[186]*z[50]*z[58]/z[103] - front_.R*z[108]*z[118]*z[4]*z[5]/z[102] - front_.R*z[118]*z[125]*z[4]*z[5]/z[102] - front_.R*z[118]*z[148]/z[102] - front_.R*z[125]*z[141]/z[102] - front_.R*z[182]*z[40]/z[102] + front_.R*z[186]*z[50]/z[102] - front_.a*z[185] - front_.b*z[0]*z[108]*z[118] - front_.b*z[108]*z[118] - z[108]*z[163] + z[108]*z[229] - z[118]*z[348]/2;
  z[414] = -front_.R*state_[10]*z[122]*z[125]*z[2]*z[4]/z[103] - front_.R*state_[10]*z[125]*z[4]*z[5]/z[102] + front_.R*state_[10]*z[2]*z[4]*z[57]/z[102] - front_.R*state_[9]*z[1]*z[122]*z[125]*z[5]/z[103] + front_.R*state_[9]*z[1]*z[125]*z[2]/z[102] + front_.R*state_[9]*z[1]*z[5]*z[57]/z[102] + 3*front_.R*z[122]*z[125]*z[196]*z[4]*z[5]/z[104] + front_.R*z[108]*z[122]*z[125]*z[40]/z[103] + front_.R*z[122]*z[186]*z[4]*z[5]/z[103] - front_.R*z[125]*z[196]*z[2]*z[4]/z[103] - front_.R*z[125]*z[231]*z[4]*z[5]/z[103] - front_.R*z[196]*z[4]*z[5]*z[57]/z[103] - front_.R*z[108]*z[125]*z[4]*z[5]*z[6]/z[102] - front_.R*z[108]*z[40]*z[57]/z[102] - front_.R*z[125]*z[40]*z[57]/z[102] - front_.R*z[161]*z[4]*z[5]/z[102] - front_.R*z[186]*z[2]*z[4]/z[102] - front_.a*z[0]*z[108]*z[57] + z[163]*z[35] - z[229]*z[35] + z[363]*z[65];
  z[415] = -front_.a*z[158] - z[118]*z[129] + z[411];
  z[416] = -front_.a*z[162] - z[118]*z[134] + z[411];
  z[417] = front_.b*z[158] + z[129]*z[65] + z[414];
  z[418] = front_.b*z[162] + z[134]*z[65] + z[414];
  z[419] = -front_.R*state_[8]*z[196]*z[40]*z[48]/z[103] + front_.R*state_[8]*z[108]*z[4]*z[48]*z[5]/z[102] + front_.R*state_[8]*z[125]*z[4]*z[48]*z[5]/z[102] + front_.R*state_[8]*z[148]*z[48]/z[102] + front_.R*state_[8]*z[153]*z[40]/z[102] - front_.R*z[1]*z[108]*z[125]*z[5]/z[102] + 3*front_.R*z[125]*z[138]*z[196]*z[40]/z[104] - front_.R*z[108]*z[125]*z[138]*z[4]*z[5]/z[103] - front_.R*z[125]*z[138]*z[148]/z[103] + front_.R*z[125]*z[196]*z[53]/z[103] + front_.R*z[125]*z[255]*z[40]/z[103] + front_.R*z[138]*z[186]*z[40]/z[103] - front_.R*z[125]*z[140]/z[102] + front_.R*z[186]*z[53]/z[102] - front_.a*z[168] + front_.b*state_[8]*z[0]*z[108]*z[48] - state_[8]*z[163]*z[53] + state_[8]*z[229]*z[53] - z[118]*z[364] + z[118]*z[84];
  z[420] = -front_.R*state_[10]*state_[8]*z[2]*z[4]*z[48]/z[102] + front_.R*state_[10]*z[1]*z[125]*z[2]/z[102] + front_.R*state_[10]*z[125]*z[138]*z[2]*z[4]/z[103] - front_.R*state_[8]*state_[9]*z[1]*z[48]*z[5]/z[102] + front_.R*state_[8]*z[196]*z[4]*z[48]*z[5]/z[103] + front_.R*state_[8]*z[108]*z[40]*z[48]/z[102] + front_.R*state_[8]*z[125]*z[40]*z[48]/z[102] - front_.R*state_[8]*z[153]*z[4]*z[5]/z[102] + front_.R*state_[9]*z[1]*z[125]*z[138]*z[5]/z[103] - front_.R*state_[9]*z[125]*z[4]*z[5]/z[102] - front_.R*z[1]*z[125]*z[196]*z[5]/z[103] - front_.R*z[1]*z[186]*z[5]/z[102] - 3*front_.R*z[125]*z[138]*z[196]*z[4]*z[5]/z[104] - front_.R*z[108]*z[125]*z[138]*z[40]/z[103] - front_.R*z[125]*z[255]*z[4]*z[5]/z[103] - front_.R*z[138]*z[186]*z[4]*z[5]/z[103] - front_.R*z[108]*z[125]*z[53]/z[102] + front_.a*state_[8]*z[0]*z[108]*z[48] + front_.b*z[168] + state_[8]*z[1]*z[163]*z[5] - state_[8]*z[1]*z[229]*z[5] + z[364]*z[65] - z[65]*z[84];
  z[421] = -front_.R*state_[8]*z[201]*z[40]*z[48]/(2*z[103]) + front_.R*state_[8]*z[108]*z[4]*z[48]*z[5]/z[102] + front_.R*state_[8]*z[125]*z[4]*z[48]*z[5]/z[102] + front_.R*state_[8]*z[148]*z[48]/z[102] + front_.R*state_[8]*z[153]*z[40]/z[102] - front_.R*z[1]*z[108]*z[125]*z[5]/z[102] + 3*front_.R*z[125]*z[143]*z[201]*z[40]/(4*z[104]) - front_.R*z[108]*z[125]*z[143]*z[4]*z[5]/(2*z[103]) - front_.R*z[125]*z[143]*z[148]/(2*z[103]) + front_.R*z[125]*z[201]*z[53]/(2*z[103]) + front_.R*z[125]*z[261]*z[40]/(2*z[103]) + front_.R*z[143]*z[186]*z[40]/(2*z[103]) - front_.R*z[125]*z[140]/z[102] + front_.R*z[186]*z[53]/z[102] - front_.a*z[168] + front_.b*state_[8]*z[0]*z[108]*z[48] - state_[8]*z[163]*z[53] + state_[8]*z[229]*z[53] - z[118]*z[365] + z[118]*z[84];
  z[422] = -front_.r*z[1]*z[2]*z[383] - front_.r*z[1]*z[3]*z[394]*z[5] - front_.r*z[1]*z[382]*z[5]*z[6];
  z[423] = front_.R*state_[10]*z[118]*z[2]*z[4]*z[40]*z[50]/z[103] + front_.R*state_[10]*z[108]*z[2]*z[4]/z[102] + front_.R*state_[9]*z[1]*z[118]*z[40]*z[5]*z[50]/z[103] + front_.R*state_[9]*z[1]*z[108]*z[5]/z[102] - 3*front_.R*z[118]*z[196]*z[4]*z[40]*z[5]*z[50]/z[104] + 3*front_.R*z[196]*z[50]*z[58]*z[65]/z[104] - front_.R*z[108]*z[196]*z[4]*z[5]/z[103] - front_.R*z[118]*z[125]*z[50]*z[58]/z[103] + front_.R*z[118]*z[216]*z[4]*z[5]/z[103] - front_.R*z[125]*z[4]*z[40]*z[5]*z[50]*z[65]/z[103] - front_.R*z[148]*z[40]*z[50]*z[65]/z[103] + front_.R*z[182]*z[4]*z[40]*z[5]*z[50]/z[103] - front_.R*z[196]*z[50]*z[65]/z[103] - front_.R*z[216]*z[40]*z[65]/z[103] - front_.R*z[50]*z[58]*z[77]/z[103] + front_.R*pow(z[118], 2)*z[40]/z[102] + front_.R*z[118]*z[125]*z[50]/z[102] + front_.R*z[118]*z[4]*z[5]*z[65]/z[102] + front_.R*z[141]*z[65]/z[102] + front_.R*z[50]*z[77]/z[102] - front_.a*pow(z[118], 2) - front_.b*z[118]*z[65] - z[350];
  z[424] = -front_.R*state_[10]*state_[8]*z[2]*z[4]*z[48]/z[102] + front_.R*state_[10]*z[1]*z[125]*z[2]/z[102] + front_.R*state_[10]*z[125]*z[143]*z[2]*z[4]/(2*z[103]) - front_.R*state_[8]*state_[9]*z[1]*z[48]*z[5]/z[102] + front_.R*state_[8]*z[201]*z[4]*z[48]*z[5]/(2*z[103]) + front_.R*state_[8]*z[108]*z[40]*z[48]/z[102] + front_.R*state_[8]*z[125]*z[40]*z[48]/z[102] - front_.R*state_[8]*z[153]*z[4]*z[5]/z[102] + front_.R*state_[9]*z[1]*z[125]*z[143]*z[5]/(2*z[103]) - front_.R*state_[9]*z[125]*z[4]*z[5]/z[102] - front_.R*z[1]*z[125]*z[201]*z[5]/(2*z[103]) - front_.R*z[1]*z[186]*z[5]/z[102] - 3*front_.R*z[125]*z[143]*z[201]*z[4]*z[5]/(4*z[104]) - front_.R*z[108]*z[125]*z[143]*z[40]/(2*z[103]) - front_.R*z[125]*z[261]*z[4]*z[5]/(2*z[103]) - front_.R*z[143]*z[186]*z[4]*z[5]/(2*z[103]) - front_.R*z[108]*z[125]*z[53]/z[102] + front_.a*state_[8]*z[0]*z[108]*z[48] + front_.b*z[168] + state_[8]*z[1]*z[163]*z[5] - state_[8]*z[1]*z[229]*z[5] + z[365]*z[65] - z[65]*z[84];
  z[425] = front_.R*state_[10]*z[118]*z[2]*z[4]*z[40]*z[50]/z[103] + front_.R*state_[10]*z[108]*z[2]*z[4]/z[102] + front_.R*state_[9]*z[1]*z[118]*z[40]*z[5]*z[50]/z[103] + front_.R*state_[9]*z[1]*z[108]*z[5]/z[102] - 3*front_.R*z[118]*z[201]*z[4]*z[40]*z[5]*z[50]/(2*z[104]) + 3*front_.R*z[201]*z[50]*z[58]*z[65]/(2*z[104]) - front_.R*z[108]*z[201]*z[4]*z[5]/(2*z[103]) - front_.R*z[118]*z[125]*z[50]*z[58]/z[103] + front_.R*z[118]*z[221]*z[4]*z[5]/(2*z[103]) - front_.R*z[125]*z[4]*z[40]*z[5]*z[50]*z[65]/z[103] - front_.R*z[148]*z[40]*z[50]*z[65]/z[103] + front_.R*z[182]*z[4]*z[40]*z[5]*z[50]/z[103] - front_.R*z[201]*z[50]*z[65]/(2*z[103]) - front_.R*z[221]*z[40]*z[65]/(2*z[103]) - front_.R*z[50]*z[58]*z[77]/z[103] + front_.R*pow(z[118], 2)*z[40]/z[102] + front_.R*z[118]*z[125]*z[50]/z[102] + front_.R*z[118]*z[4]*z[5]*z[65]/z[102] + front_.R*z[141]*z[65]/z[102] + front_.R*z[50]*z[77]/z[102] - front_.a*pow(z[118], 2) - front_.b*z[118]*z[65] - z[350];
  z[426] = front_.R*state_[10]*z[118]*z[122]*z[2]*z[4]/z[103] + front_.R*state_[10]*z[118]*z[4]*z[5]/z[102] - front_.R*state_[10]*z[2]*z[4]*z[66]/z[102] + front_.R*state_[9]*z[1]*z[118]*z[122]*z[5]/z[103] - front_.R*state_[9]*z[1]*z[118]*z[2]/z[102] - front_.R*state_[9]*z[1]*z[5]*z[66]/z[102] - 3*front_.R*z[118]*z[122]*z[196]*z[4]*z[5]/z[104] + 3*front_.R*z[122]*z[196]*z[40]*z[65]/z[104] - front_.R*z[118]*z[122]*z[125]*z[40]/z[103] + front_.R*z[118]*z[196]*z[2]*z[4]/z[103] + front_.R*z[118]*z[231]*z[4]*z[5]/z[103] - front_.R*z[122]*z[125]*z[4]*z[5]*z[65]/z[103] - front_.R*z[122]*z[148]*z[65]/z[103] + front_.R*z[122]*z[182]*z[4]*z[5]/z[103] - front_.R*z[122]*z[40]*z[77]/z[103] + front_.R*z[196]*z[35]*z[40]/z[103] - front_.R*z[196]*z[4]*z[5]*z[6]*z[65]/z[103] + front_.R*z[196]*z[4]*z[5]*z[66]/z[103] - front_.R*z[231]*z[40]*z[65]/z[103] + front_.R*z[118]*z[125]*z[4]*z[5]*z[6]/z[102] + front_.R*z[118]*z[40]*z[57]/z[102] + front_.R*z[125]*z[2]*z[4]*z[65]/z[102] - front_.R*z[125]*z[35]*z[4]*z[5]/z[102] + front_.R*z[125]*z[40]*z[66]/z[102] - front_.R*z[148]*z[35]/z[102] + front_.R*z[157]*z[4]*z[5]/z[102] - front_.R*z[182]*z[2]*z[4]/z[102] + front_.R*z[4]*z[5]*z[57]*z[65]/z[102] + front_.R*z[4]*z[5]*z[6]*z[77]/z[102] - front_.R*z[40]*z[78]/z[102] + front_.R*z[65]*z[92]/z[102] - front_.a*z[108]*z[66] - front_.a*z[118]*z[57] + front_.a*z[78] + front_.b*z[108]*z[35] - front_.b*z[152] - front_.b*z[57]*z[65];
  z[427] = front_.R*state_[10]*z[118]*z[122]*z[2]*z[4]/z[103] + front_.R*state_[10]*z[118]*z[4]*z[5]/z[102] - front_.R*state_[10]*z[2]*z[4]*z[66]/z[102] + front_.R*state_[9]*z[1]*z[118]*z[122]*z[5]/z[103] - front_.R*state_[9]*z[1]*z[118]*z[2]/z[102] - front_.R*state_[9]*z[1]*z[5]*z[66]/z[102] - 3*front_.R*z[118]*z[122]*z[201]*z[4]*z[5]/(2*z[104]) + 3*front_.R*z[122]*z[201]*z[40]*z[65]/(2*z[104]) - front_.R*z[118]*z[122]*z[125]*z[40]/z[103] + front_.R*z[118]*z[2]*z[201]*z[4]/(2*z[103]) + front_.R*z[118]*z[239]*z[4]*z[5]/(2*z[103]) - front_.R*z[122]*z[125]*z[4]*z[5]*z[65]/z[103] - front_.R*z[122]*z[148]*z[65]/z[103] + front_.R*z[122]*z[182]*z[4]*z[5]/z[103] - front_.R*z[122]*z[40]*z[77]/z[103] + front_.R*z[201]*z[35]*z[40]/(2*z[103]) - front_.R*z[201]*z[4]*z[5]*z[6]*z[65]/(2*z[103]) + front_.R*z[201]*z[4]*z[5]*z[66]/(2*z[103]) - front_.R*z[239]*z[40]*z[65]/(2*z[103]) + front_.R*z[118]*z[125]*z[4]*z[5]*z[6]/z[102] + front_.R*z[118]*z[40]*z[57]/z[102] + front_.R*z[125]*z[2]*z[4]*z[65]/z[102] - front_.R*z[125]*z[35]*z[4]*z[5]/z[102] + front_.R*z[125]*z[40]*z[66]/z[102] - front_.R*z[148]*z[35]/z[102] + front_.R*z[157]*z[4]*z[5]/z[102] - front_.R*z[182]*z[2]*z[4]/z[102] + front_.R*z[4]*z[5]*z[57]*z[65]/z[102] + front_.R*z[4]*z[5]*z[6]*z[77]/z[102] - front_.R*z[40]*z[78]/z[102] + front_.R*z[65]*z[92]/z[102] - front_.a*z[108]*z[66] - front_.a*z[118]*z[57] + front_.a*z[78] + front_.b*z[108]*z[35] - front_.b*z[152] - front_.b*z[57]*z[65];
  z[428] = front_.R*state_[10]*state_[8]*z[2]*z[4]*z[53]/z[102] - front_.R*state_[10]*z[1]*z[118]*z[2]/z[102] - front_.R*state_[10]*z[118]*z[138]*z[2]*z[4]/z[103] + front_.R*state_[8]*state_[9]*z[1]*z[5]*z[53]/z[102] + front_.R*state_[8]*z[1]*z[196]*z[40]*z[5]/z[103] - front_.R*state_[8]*z[1]*z[125]*z[13]*z[4]/z[102] - front_.R*state_[8]*z[1]*z[148]*z[5]/z[102] - front_.R*state_[8]*z[196]*z[4]*z[5]*z[53]/z[103] - front_.R*state_[8]*z[118]*z[40]*z[48]/z[102] - front_.R*state_[8]*z[125]*z[40]*z[53]/z[102] + front_.R*state_[8]*z[140]*z[4]*z[5]/z[102] - front_.R*state_[8]*z[4]*z[48]*z[5]*z[65]/z[102] - front_.R*state_[9]*z[1]*z[118]*z[138]*z[5]/z[103] + front_.R*state_[9]*z[118]*z[4]*z[5]/z[102] + front_.R*z[1]*z[118]*z[196]*z[5]/z[103] + front_.R*z[1]*z[125]*z[5]*z[65]/z[102] - front_.R*z[1]*z[182]*z[5]/z[102] + 3*front_.R*z[118]*z[138]*z[196]*z[4]*z[5]/z[104] - 3*front_.R*z[138]*z[196]*z[40]*z[65]/z[104] + front_.R*z[118]*z[125]*z[138]*z[40]/z[103] + front_.R*z[118]*z[255]*z[4]*z[5]/z[103] + front_.R*z[125]*z[138]*z[4]*z[5]*z[65]/z[103] + front_.R*z[138]*z[148]*z[65]/z[103] - front_.R*z[138]*z[182]*z[4]*z[5]/z[103] + front_.R*z[138]*z[40]*z[77]/z[103] - front_.R*z[196]*z[53]*z[65]/z[103] - front_.R*z[255]*z[40]*z[65]/z[103] + front_.R*z[118]*z[125]*z[53]/z[102] + front_.R*z[140]*z[65]/z[102] - front_.R*z[40]*z[64]/z[102] + front_.R*z[53]*z[77]/z[102] + front_.a*state_[8]*z[108]*z[53] + front_.a*state_[8]*z[118]*z[48] + front_.a*z[64] + front_.b*state_[8]*z[1]*z[108]*z[5] + front_.b*state_[8]*z[48]*z[65] - front_.b*z[165];
  z[429] = -front_.Ixx;
  z[430] = -front_.Iyy;
  z[431] = -front_.a;
  z[432] = -rear_.a;
  z[433] = -front_.b;
  z[434] = -rear_.b;
  z[435] = -front_.m;
  z[436] = -rear_.m;
  z[437] = -front_.r;
  z[438] = -state_[11];
  z[439] = -state_[13];
  z[440] = -state_[18];
  z[441] = -state_[8];
  z[442] = -state_[9];
  z[443] = z[0]*z[442];
  z[444] = -front_.J*z[439];
  z[445] = -rear_.J*z[441];
  z[446] = z[436]*z[441];
  z[447] = -z[1]*z[432];
  z[448] = -z[1]*z[434];
  z[449] = -z[1]*z[437];
  z[450] = -z[2]*z[437];
  z[451] = -z[3]*z[437];
  z[452] = -z[4]*z[437];
  z[453] = -z[437]*z[5];
  z[454] = state_[10]*z[1];
  z[455] = state_[10]*z[2];
  z[456] = -z[438]*z[5];
  z[457] = -z[1]*z[441];
  z[458] = -z[4]*z[441];
  z[459] = -z[441]*z[5];
  z[460] = -z[1]*z[442];
  z[461] = -z[4]*z[442];
  z[462] = -z[1];
  z[463] = -z[2];
  z[464] = z[0]*z[463];
  z[465] = -z[3];
  z[466] = -z[4];
  z[467] = z[0]*z[466];
  z[468] = -z[5];
  z[469] = -z[6];
  z[470] = z[462]*z[463];
  z[471] = z[462]*z[465];
  z[472] = z[462]*z[468];
  z[473] = z[462]*z[469];
  z[474] = z[463]*z[465];
  z[475] = z[463]*z[466];
  z[476] = z[463]*z[469];
  z[477] = z[465]*z[466];
  z[478] = z[465]*z[468];
  z[479] = z[466]*z[468];
  z[480] = z[466]*z[469];
  z[481] = z[468]*z[469];
  z[482] = -z[8];
  z[483] = -z[11];
  z[484] = -z[12];
  z[485] = -z[13];
  z[486] = z[462]/z[466];
  z[487] = z[465]*z[485];
  z[488] = z[466]*z[485];
  z[489] = -z[3]*z[433]*z[468];
  z[490] = rear_.R/z[16];
  z[491] = -z[436]/z[16];
  z[492] = z[19]*z[468];
  z[493] = -z[466]/z[16];
  z[494] = -z[9]/z[466];
  z[495] = z[483]*z[485];
  z[496] = -z[469]*z[487];
  z[497] = z[36]*z[436];
  z[498] = z[36]*z[441];
  z[499] = -rear_.J*z[39];
  z[500] = z[36]*z[462];
  z[501] = z[36]*z[466];
  z[502] = rear_.J*z[35];
  z[503] = z[433]*z[50];
  z[504] = z[437]*z[50];
  z[505] = z[437]*z[53];
  z[506] = -z[437]*z[48];
  z[507] = state_[17]*z[48];
  z[508] = z[462]*z[50];
  z[509] = z[463]*z[50];
  z[510] = z[469]*z[50];
  z[511] = -z[40]*z[468];
  z[512] = -z[463]*z[48];
  z[513] = -z[468]*z[48];
  z[514] = -z[469]*z[48];
  z[515] = -z[58];
  z[516] = -z[40]*z[65];
  z[517] = z[50]*z[53];
  z[518] = -z[48]*z[50];
  z[519] = -z[48]*z[53];
  z[520] = z[118]*z[430];
  z[521] = z[108]*z[430];
  z[522] = -front_.J*z[118];
  z[523] = z[108]*z[433];
  z[524] = front_.R/z[103];
  z[525] = front_.R/z[102];
  z[526] = -1/z[105];
  z[527] = z[468]*z[526];
  z[528] = pow(front_.R, -z[0])/z[94];
  z[529] = -z[485]/z[95];
  z[530] = -z[468]*(z[1]*z[40] - z[4]*z[53]);
  z[531] = z[469]*z[479]*z[525];
  z[532] = -z[477]*z[485]*z[525];
  z[533] = -z[108]*z[40];
  z[534] = z[50]*z[526];
  z[535] = z[48]/z[106];
  z[536] = z[48]/z[95];
  z[537] = -z[48]*z[526];
  z[538] = -z[50]*z[524];
  z[539] = z[60]/z[95];
  z[540] = -z[50]*z[60]/z[106];
  z[541] = z[119]/z[106];
  z[542] = z[127]/z[95];
  z[543] = z[122]*z[524];
  z[544] = z[131]/z[95];
  z[545] = z[171]*z[48];
  z[546] = -z[142]/z[106];
  z[547] = -z[142]/z[95];
  z[548] = -z[148]*z[525];
  z[549] = z[138]*z[524];
  z[550] = z[145]/z[95];
  z[551] = z[170]*z[98];
  z[552] = -z[194]*z[462];
  z[553] = z[196]*z[40];
  z[554] = z[196]/z[94];
  z[555] = -z[260]*z[526];
  z[556] = -z[314]*z[469];
  z[557] = -z[36]*z[360];
  z[558] = -z[368]*z[526];
  z[559] = z[171]*z[367];
  z[560] = -z[370]*z[526];
  z[561] = z[171]*z[369];
  z[562] = -z[383]*z[452]*z[468];
  z[563] = z[382]*z[526];
  z[564] = -z[385]*z[526];

  m[0] = 0;
  m[1] = -z[233]*z[470] + z[236]*z[472] + z[244]*z[475] - z[247]*z[479] + z[296]*z[48] + z[314]*z[53] + z[330]*z[472] - z[333]*z[40] + z[335]*z[50] - z[349]*z[479] + z[435]*(-z[188]*z[420] + z[192]*z[419] + z[285]*z[398] - z[305]*z[382] + z[306]*z[396] - z[316]*z[383] + z[367]*(z[188]*z[40] - z[192]*z[479] - z[305]*z[53] - z[316]*z[472] + z[48]*z[76] + z[50]*z[83]) + z[369]*(z[305]*z[481] - z[316]*z[463] + z[478]*z[76]) - z[394]*z[76] + z[428]*z[83]) + z[436]*(z[170]*z[250] - z[175]*(z[37]*z[466] + z[38]*z[462] - z[470]*z[68] + z[472]*z[67] - z[475]*z[69] - z[479]*z[72]) + z[189]*z[198] + z[194]*(z[463]*z[67] + z[468]*z[68]) - z[253]*z[37] - z[276]*z[68] - z[280]*z[67] + z[340]*z[38] + z[359]*z[72] - z[360]*z[69]) + z[462]*(z[199] + z[35]*z[62] - z[39]*z[61]) + z[466]*(rear_.Iyy*z[4]*z[441]*z[442] - z[109]*z[39] + z[110]*z[35]);
  m[2] = z[232]*z[475] + z[233]*z[479] - z[235]*z[479] + z[236]*z[475] + z[273]*z[462] + z[296]*z[468]*z[477] + z[330]*z[475] + z[343]*z[50] - z[344]*z[40] - z[353]*z[479] + z[435]*(-z[188]*z[417] + z[192]*z[415] + z[283]*z[382] + z[285]*z[402] - z[303]*z[383] + z[306]*z[401] + z[367]*(z[188]*z[469]*z[472] + z[192]*z[470] + z[283]*z[53] - z[303]*z[472] + z[468]*z[471]*z[83] + z[48]*z[59]) + z[369]*(z[188]*z[476] - z[192]*z[468] - z[283]*z[481] - z[303]*z[463] + z[474]*z[83] + z[478]*z[59]) - z[394]*z[59] + z[426]*z[83]) + z[436]*(-z[175]*(z[10]*z[466]*z[482]*z[490] + z[43]*z[466] + z[470]*z[72] - z[472]*z[69] - z[482]*z[488]*z[490]) - z[194]*(z[463]*z[69] + z[468]*z[72]) + z[204]*z[38] - z[253]*z[43] - z[276]*z[466]*z[470]*z[490] + z[280]*z[466]*z[472]*z[490] - z[298]*z[69] + z[302]*z[72]) + z[479]*z[556];
  m[3] = z[296]*z[40] - z[311]*z[40] + z[314]*z[50] + z[324]*z[50] - z[351]*z[479] + z[435]*(-z[188]*z[409] + z[192]*z[412] - z[242]*z[382] - z[275]*z[383] + z[285]*z[406] + z[306]*z[405] + z[367]*(z[188]*z[48] - z[242]*z[53] - z[275]*z[472] + z[48]*z[503] + z[53]*z[83]) + z[369]*(z[188]*z[478] + z[242]*z[481] - z[275]*z[463] - z[481]*z[83] + z[489]*z[50]) - z[394]*z[503] + z[423]*z[83]);
  m[4] = 0;
  m[5] = 0;
  m[6] = 0;
  m[7] = 0;
  m[8] = z[237]*z[475] - z[238]*z[479] - z[325]*z[40] + z[328]*z[50] - z[341]*z[479] + z[435]*(-z[188]*z[384] + z[192]*z[386] + z[206]*z[285] + z[220]*z[306] + z[376]*z[83]) + z[436]*(z[126]*z[189] + z[170]*z[91] + z[258]*z[38] - z[286]*z[69] + z[289]*z[72]) + z[462]*(z[193] - z[35]*z[42] + z[39]*z[41]);
  m[9] = -z[183]*z[479] + z[187]*z[475] + z[223]*z[462] - z[295]*z[40] + z[297]*z[50] - z[309]*z[479] + z[435]*(-z[188]*z[390] + z[192]*z[392] + z[269]*z[306] + z[285]*z[307] + z[400]*z[83]) + z[436]*(z[170]*(-z[164] - z[498]) + z[189]*z[443]*z[486]*z[490] + z[209]*z[38] - z[292]*z[69] + z[293]*z[72]);
  m[10] = z[177]*z[475] - z[179]*z[479] + z[230]*z[50] - z[248]*z[40] - z[291]*z[479] + z[435]*(-z[188]*z[378] + z[192]*z[380] + z[285]*z[326] + z[306]*z[323] + z[387]*z[83]) + z[436]*(z[0]*z[111]*z[38] - z[0]*z[19]*z[432]*z[69] + z[0]*z[19]*z[434]*z[72] + z[189]*z[36]*z[458] + z[551]);
  m[11] = -front_.Ixz*z[174]*z[479] - z[205]*z[40] + z[211]*z[50] + z[435]*(-z[188]*z[355] + z[192]*z[356] + z[285]*z[342] + z[306]*z[337] + z[372]*z[83]);
  m[12] = z[436]*(z[189]*z[36]*z[458] + z[551]) - z[475]*z[499] + z[479]*z[502];
  m[13] = front_.J*z[516] + z[435]*(-z[137]*z[306] + z[169]*z[285] - z[188]*z[334] + z[192]*z[331] - z[227]*z[83]) - z[479]*z[522];
  m[14] = -z[446]*z[493]*(-z[22]*z[484] - z[463]*z[482]*z[63] + z[468]*z[482]*z[49]);
  m[15] = z[446]*z[462]*z[493]*(-z[463]*z[49] - z[468]*z[63]);
  m[16] = 0;
  m[17] = z[435]*(z[287]*z[304] + z[288]*z[308]);
  m[18] = z[435]*(z[288]*z[555] + z[304]*z[308]);
  m[19] = 0;
  m[20] = 0;
  m[21] = z[244]*z[468] + z[247]*z[463] - z[333]*z[481] + z[335]*z[478] + z[349]*z[463] + z[435]*(z[167]*z[420] - z[176]*z[419] - z[207]*z[428] - z[228]*z[382] - z[251]*z[383] + z[310]*z[398] + z[319]*z[396] + z[332]*z[394] + z[367]*(-z[167]*z[40] + z[176]*z[479] - z[207]*z[50] - z[228]*z[53] - z[251]*z[472] - z[332]*z[48]) + z[369]*(z[228]*z[481] - z[251]*z[463] - z[332]*z[478]) - z[382]*z[40]*z[437] - z[394]*z[504] - z[396]*z[437] + z[419]*z[449]*z[468] + z[420]*z[505] - z[428]*z[506] + z[562]) + z[436]*(z[172]*z[198] - z[175]*z[486]*z[490] + z[175]*(-z[10]*z[462]*z[467]*z[490] + z[10]*z[490]*z[494] - z[27]*z[462] + z[462]*z[467]*z[485]*z[490] - z[485]*z[490]*z[494]) - z[198]*z[36] - z[253]*z[462]*z[490] - z[253]*z[500] + z[27]*z[340] - z[276]*z[475]*z[490] + z[280]*z[479]*z[490] + z[340]*z[501] + z[359]*z[36]*z[472] + z[359]*z[472]*z[490] - z[360]*z[470]*z[490] + z[361] + z[470]*z[557]);
  m[22] = z[232]*z[468] - z[233]*z[463] + z[235]*z[463] + z[236]*z[468] - z[296]*z[474] + z[314]*z[476] + z[330]*z[468] + z[343]*z[478] - z[344]*z[481] + z[353]*z[463] + z[435]*(z[167]*z[417] - z[176]*z[415] - z[207]*z[426] - z[224]*z[382] + z[282]*z[383] + z[310]*z[402] + z[319]*z[401] - z[329]*z[394] + z[367]*(-z[167]*z[469]*z[472] - z[176]*z[470] - z[207]*z[468]*z[471] - z[224]*z[53] + z[282]*z[472] + z[329]*z[48]) + z[369]*(-z[167]*z[476] + z[176]*z[468] - z[207]*z[474] + z[224]*z[481] + z[282]*z[463] + z[329]*z[478]) - z[401]*z[437] + z[415]*z[449]*z[468] + z[417]*z[505] + z[422] - z[426]*z[506]) + z[436]*(z[175]*z[22]*z[466] + z[204]*z[27] + z[204]*z[501] + z[22]*z[253] - z[298]*z[36]*z[470] - z[298]*z[470]*z[490] + z[302]*z[36]*z[472] + z[302]*z[472]*z[490] + z[381]);
  m[23] = z[296]*z[481] - z[311]*z[481] + z[314]*z[478] + z[324]*z[478] + z[351]*z[463] + z[435]*(z[167]*z[409] - z[176]*z[412] - z[207]*z[423] + z[217]*z[382] - z[271]*z[383] + z[310]*z[406] - z[315]*z[394] + z[319]*z[405] + z[367]*(-z[167]*z[48] - z[207]*z[53] + z[217]*z[53] - z[271]*z[472] + z[315]*z[48]) + z[369]*(-z[167]*z[478] + z[207]*z[481] - z[217]*z[481] - z[271]*z[463] + z[315]*z[478]) + z[382]*z[506] - z[394]*z[505] - z[405]*z[437] + z[409]*z[505] + z[412]*z[449]*z[468] - z[423]*z[506]);
  m[24] = 0;
  m[25] = 0;
  m[26] = 0;
  m[27] = 0;
  m[28] = z[237]*z[468] + z[238]*z[463] - z[325]*z[481] + z[328]*z[478] + z[341]*z[463] + z[435]*(z[167]*z[384] - z[176]*z[386] + z[206]*z[310] - z[207]*z[376] + z[220]*z[319] - z[220]*z[437] - z[376]*z[506] + z[384]*z[505] + z[386]*z[449]*z[468]) + z[436]*(z[126]*z[172] - z[126]*z[36] + z[258]*z[27] + z[258]*z[501] - z[286]*z[36]*z[470] - z[286]*z[470]*z[490] + z[289]*z[36]*z[472] + z[289]*z[472]*z[490]);
  m[29] = z[183]*z[463] + z[187]*z[468] - z[295]*z[481] + z[297]*z[478] + z[309]*z[463] + z[435]*(z[167]*z[390] - z[176]*z[392] - z[207]*z[400] + z[269]*z[319] - z[269]*z[437] + z[307]*z[310] + z[390]*z[505] + z[392]*z[449]*z[468] - z[400]*z[506]) + z[436]*(z[172]*z[443]*z[486]*z[490] + z[209]*z[27] + z[209]*z[501] - z[292]*z[36]*z[470] - z[292]*z[470]*z[490] + z[293]*z[36]*z[472] + z[293]*z[472]*z[490] - z[36]*z[443]*z[486]*z[490]);
  m[30] = z[177]*z[468] + z[179]*z[463] + z[230]*z[478] - z[248]*z[481] + z[291]*z[463] + z[435]*(z[167]*z[378] - z[176]*z[380] - z[207]*z[387] + z[310]*z[326] + z[319]*z[323] - z[323]*z[437] + z[378]*z[505] + z[380]*z[449]*z[468] - z[387]*z[506]) + z[436]*(z[0]*z[111]*z[27] + z[0]*z[36]*z[448]*z[492] + z[0]*z[448]*z[490]*z[492] + z[111]*z[36]*z[467] + z[172]*z[36]*z[458] - z[19]*z[36]*z[447]*z[464] - z[19]*z[447]*z[464]*z[490] - z[458]*pow(-z[36], -z[0]));
  m[31] = -front_.Ixz*z[174]*z[2] - z[205]*z[481] + z[211]*z[478] + z[435]*(z[167]*z[355] - z[176]*z[356] - z[207]*z[372] + z[310]*z[342] + z[319]*z[337] - z[337]*z[437] + z[355]*z[505] + z[356]*z[449]*z[468] - z[372]*z[506]);
  m[32] = z[36]*z[436]*z[458]*(z[172] - z[36]) - z[463]*z[502] - z[468]*z[499];
  m[33] = -front_.J*z[481]*z[65] + z[435]*(-z[137]*z[319] + z[137]*z[437] + z[167]*z[334] + z[169]*z[310] - z[176]*z[331] + z[207]*z[227] + z[227]*z[506] + z[331]*z[449]*z[468] + z[334]*z[505]) + z[463]*z[522];
  m[34] = -z[446]*z[493]*(z[172] - z[36]);
  m[35] = 0;
  m[36] = 0;
  m[37] = z[435]*(z[287]*z[319] - z[287]*z[437] + z[308]*z[310]);
  m[38] = z[435]*(z[308]*z[319] - z[308]*z[437] + z[310]*z[555]);
  m[39] = 0;
  m[40] = 0;
  m[41] = -z[199] + z[25]*z[39]*z[457] - z[26]*z[35]*z[457] + z[333]*z[465] + z[335]*z[469] + z[435]*(z[150]*z[428] - z[151]*z[420] + z[173]*z[419] - z[218]*z[382] + z[222]*z[394] - z[245]*z[383] + z[263]*z[398] + z[279]*z[396] + z[367]*(z[150]*z[50] + z[151]*z[40] - z[173]*z[479] - z[218]*z[53] - z[222]*z[48] - z[245]*z[472]) + z[369]*z[449] + z[369]*(z[218]*z[481] - z[222]*z[478] - z[245]*z[463]) - z[398]*z[452] + z[419]*z[450]*z[466] - z[420]*z[452]*z[481] + z[422] + z[428]*z[451]*z[479]) + z[436]*(-z[175]*z[38] + z[194]*z[500] + z[198]*z[37] - z[250]*z[27] - z[250]*z[501] + z[359]*z[36]*z[475] + z[359]*z[432] - z[360]*z[434] + z[381] - z[479]*z[557] - z[490]*z[552]);
  m[42] = -z[273] + z[343]*z[469] + z[344]*z[465] + z[435]*(z[150]*z[426] - z[151]*z[417] + z[173]*z[415] + z[212]*z[394] + z[213]*z[382] - z[226]*z[383] + z[263]*z[402] + z[279]*z[401] + z[367]*(z[150]*z[468]*z[471] + z[151]*z[469]*z[472] + z[173]*z[470] - z[212]*z[48] + z[213]*z[53] - z[226]*z[472]) + z[369]*(z[150]*z[474] + z[151]*z[476] - z[173]*z[468] - z[212]*z[478] - z[213]*z[481] - z[226]*z[463]) - z[382]*z[450]*z[480] - z[394]*z[450]*z[477] - z[402]*z[452] + z[415]*z[450]*z[466] - z[417]*z[452]*z[481] + z[426]*z[451]*z[479] + z[562]) + z[436]*(z[175]*(-z[447]*z[463] + z[448]*z[468]) - z[194]*z[22] + z[298]*z[36]*z[479] - z[298]*z[434] + z[302]*z[36]*z[475] + z[302]*z[432] + z[361]);
  m[43] = -z[296]*z[465] + z[311]*z[465] + z[324]*z[469] + z[435]*(z[150]*z[423] - z[151]*z[409] + z[173]*z[412] - z[214]*z[382] + z[263]*z[406] + z[267]*z[383] + z[279]*z[405] + z[367]*(z[150]*z[53] + z[151]*z[48] - z[214]*z[53] + z[267]*z[472] + z[48]*(-z[151] + z[477]*z[511]*z[538])) + z[369]*(-z[150]*z[481] + z[151]*z[478] + z[214]*z[481] + z[267]*z[463] + z[478]*(-z[151] + z[477]*z[511]*z[538])) - z[382]*z[451]*z[479] + z[394]*z[452]*z[481] - z[394]*(-z[151] + z[477]*z[511]*z[538]) - z[406]*z[452] - z[409]*z[452]*z[481] + z[412]*z[450]*z[466] + z[423]*z[451]*z[479]) - z[556];
  m[44] = 0;
  m[45] = 0;
  m[46] = 0;
  m[47] = 0;
  m[48] = -z[193] + z[25]*z[39]*z[466] - z[26]*z[35]*z[466] + z[325]*z[465] + z[328]*z[469] + z[435]*(z[150]*z[376] - z[151]*z[384] + z[173]*z[386] + z[206]*z[263] - z[206]*z[452] + z[220]*z[279] + z[376]*z[451]*z[479] - z[384]*z[452]*z[481] + z[386]*z[450]*z[466]) + z[436]*(z[126]*z[37] - z[27]*z[91] + z[286]*z[36]*z[479] - z[286]*z[434] + z[289]*z[36]*z[475] + z[289]*z[432] - z[501]*z[91]);
  m[49] = -z[223] + z[295]*z[465] + z[297]*z[469] + z[435]*(z[150]*z[400] - z[151]*z[390] + z[173]*z[392] + z[263]*z[307] + z[269]*z[279] - z[307]*z[452] - z[390]*z[452]*z[481] + z[392]*z[450]*z[466] + z[400]*z[451]*z[479]) + z[436]*(-z[27]*(-z[164] - z[498]) + z[292]*z[36]*z[479] - z[292]*z[434] + z[293]*z[36]*z[475] + z[293]*z[432] + z[37]*z[443]*z[486]*z[490] - z[501]*(-z[164] - z[498]));
  m[50] = z[230]*z[469] + z[248]*z[465] + z[435]*(z[150]*z[387] - z[151]*z[378] + z[173]*z[380] + z[263]*z[326] + z[279]*z[323] - z[326]*z[452] - z[378]*z[452]*z[481] + z[380]*z[450]*z[466] + z[387]*z[451]*z[479]) + z[436]*(-z[0]*z[36]*z[4]*z[432]*z[492] - z[19]*z[2]*z[36]*z[434]*z[467] - z[27]*z[98] + z[36]*z[37]*z[458] - z[501]*z[98]);
  m[51] = z[205]*z[465] + z[211]*z[469] + z[435]*(z[150]*z[372] - z[151]*z[355] + z[173]*z[356] + z[263]*z[342] + z[279]*z[337] - z[342]*z[452] - z[355]*z[452]*z[481] + z[356]*z[450]*z[466] + z[372]*z[451]*z[479]);
  m[52] = z[436]*z[462]*(-rear_.r*z[27]*z[442] - rear_.r*z[36]*z[461] - z[22]*z[36]*z[458]);
  m[53] = front_.J*z[465]*z[65] + z[435]*(-z[137]*z[279] - z[150]*z[227] - z[151]*z[338] + z[169]*z[263] - z[169]*z[452] + z[173]*z[336] - z[227]*z[451]*z[479] + z[336]*z[450]*z[466] - z[338]*z[452]*z[481]);
  m[54] = z[22]*z[446]*z[462]*z[493];
  m[55] = -z[446]*z[493]*(z[27] + z[501]);
  m[56] = 0;
  m[57] = z[435]*(z[264]*z[308] + z[277]*z[287] - z[308]*z[452]);
  m[58] = z[435]*(z[264]*z[555] + z[277]*z[308] - z[452]*z[555]);
  m[59] = 0;
  m[60] = 0;
  m[61] = front_.Ixz*z[441]*(z[40]*z[442] + z[85]) + front_.Izz*z[44]*z[441] + z[108]*z[441]*(-front_.Ixz*z[472] + z[429]*z[53]) - z[270] + z[435]*(z[101]*z[420] + z[121]*z[428] + z[171]*z[398]*z[478] - z[171]*z[428] - z[240]*z[367]*z[48] - z[240]*z[369]*z[478] + z[240]*z[394] - z[369]*z[452]*z[468] - z[382]*(-z[40]*z[450] + z[452]*z[469]*z[485]) + z[394]*(z[450]*z[50] - z[451]*z[488]) + z[396]*z[450] + z[396]*z[545] - z[398]*z[449]*z[468] - z[50]*z[559]);
  m[62] = -z[166]*z[39]*z[465] - z[246] + z[39]*z[444]*z[469] - z[39]*z[465]*z[520] + z[39]*z[469]*z[521] + z[435]*(z[101]*z[417] + z[117]*z[394] + z[121]*z[426] + z[171]*z[402]*z[478] - z[171]*z[426] + z[219]*z[367]*z[48] + z[219]*z[369]*z[478] - z[219]*z[394] + z[367]*z[453] + z[369]*z[449]*z[463] - z[382]*(z[449]*z[463]*z[468]*z[469] - z[453]*z[53]) + z[401]*z[450] + z[401]*z[545] - z[402]*z[449]*z[468] - z[468]*z[471]*z[559] - z[474]*z[561]);
  m[63] = -z[351] + z[435]*(-z[101]*z[394] + z[101]*z[409] - z[121]*z[382] + z[121]*z[423] + z[171]*z[406]*z[478] - z[171]*z[423] - z[210]*z[367]*z[48] - z[210]*z[369]*z[478] + z[210]*z[394] + z[405]*z[450] + z[405]*z[545] - z[406]*z[449]*z[468] + z[481]*z[561] - z[53]*z[559]);
  m[64] = 0;
  m[65] = 0;
  m[66] = 0;
  m[67] = 0;
  m[68] = -z[341] + z[435]*(z[101]*z[384] + z[121]*z[376] + z[171]*z[206]*z[478] - z[171]*z[376] - z[206]*z[449]*z[468] + z[220]*z[450] + z[220]*z[545]);
  m[69] = front_.Izz*z[468]*(state_[10] - z[457]) - z[299] + z[435]*(z[101]*z[390] + z[121]*z[400] + z[171]*z[307]*z[478] - z[171]*z[400] + z[269]*z[450] + z[269]*z[545] - z[307]*z[449]*z[468]);
  m[70] = -front_.Ixz*z[469]*(-z[39] + z[438]) + front_.Izz*z[35] - z[108]*z[429]*z[465] + z[166]*z[469] + z[435]*(z[101]*z[378] + z[120]*z[388] + z[171]*z[327]*z[478] - z[171]*z[388] + z[321]*z[450] + z[321]*z[545] - z[327]*z[449]*z[468]) + z[444]*z[465] + z[465]*z[521] + z[469]*z[520];
  m[71] = -front_.Ixz*z[108] - front_.Ixz*z[88] + z[435]*(z[101]*z[355] + z[121]*z[372] + z[171]*z[342]*z[478] - z[171]*z[372] + z[337]*z[450] + z[337]*z[545] - z[342]*z[449]*z[468]);
  m[72] = 0;
  m[73] = z[435]*(z[101]*z[334] - z[121]*z[227] - z[137]*z[450] - z[137]*z[545] + z[169]*z[171]*z[478] - z[169]*z[449]*z[468] + z[171]*z[227]) - z[522];
  m[74] = 0;
  m[75] = 0;
  m[76] = 0;
  m[77] = z[435]*(z[171]*z[308]*z[478] + z[287]*z[450] + z[287]*z[545] - z[308]*z[449]*z[468]);
  m[78] = z[435]*(z[171]*z[478]*z[555] + z[260]*z[449]*z[527] + z[308]*z[450] + z[308]*z[545]);
  m[79] = 0;
  m[80] = 0;
  m[81] = z[436]*(z[194]*z[500] - z[250]*z[501] + z[359]*z[36]*z[475] + z[381] - z[479]*z[557] - z[490]*z[552]) + z[445]*z[460];
  m[82] = -z[436]*z[501]*(z[276]*z[463] - z[280]*z[468] - z[298]*z[468] - z[302]*z[463]);
  m[83] = 0;
  m[84] = 0;
  m[85] = 0;
  m[86] = 0;
  m[87] = 0;
  m[88] = z[466]*(-rear_.J*z[442] + z[497]*(z[286]*z[468] + z[289]*z[463] - z[91]));
  m[89] = z[466]*(z[445] + z[497]*(z[164] + z[292]*z[468] + z[293]*z[463] + z[498]));
  m[90] = z[466]*z[497]*(-z[17] + z[81]);
  m[91] = 0;
  m[92] = -z[17]*z[436]*z[501];
  m[93] = 0;
  m[94] = 0;
  m[95] = z[16]*z[36]*z[446];
  m[96] = 0;
  m[97] = 0;
  m[98] = 0;
  m[99] = 0;
  m[100] = 0;
  m[101] = front_.J*z[441]*(-z[442]*z[50] + z[97]) + z[435]*(-z[121]*z[419] + z[146]*z[420] + z[203]*z[398] + z[208]*z[396] - z[332]*z[369] + z[367]*(z[40]*z[472]*z[549] - z[479]*z[53]*z[549]) + z[369]*z[504] - z[382]*z[472]*z[525] - z[382]*z[479]*z[549] - z[382]*(z[451]*z[511] + z[453]*z[510]) + z[383]*z[40]*z[549] + z[383]*z[525]*z[53] - z[383]*(-z[450]*z[50] + z[451]*z[488]) + z[396]*z[451]*z[468] + z[398]*z[506] + z[40]*z[419]*z[525] - z[420]*z[479]*z[525]);
  m[102] = -front_.J*z[158] + z[435]*(z[117]*z[383] - z[121]*z[415] + z[146]*z[417] + z[203]*z[402] + z[208]*z[401] + z[318]*z[369] - z[367]*z[450]*z[465] - z[367]*(-z[40]*z[470]*z[525] + z[40]*z[472]*z[543] + z[475]*z[525]*z[53] - z[479]*z[53]*z[543]) + z[369]*z[449]*z[478] - z[382]*z[475]*z[525] + z[382]*z[479]*z[543] - z[382]*(z[450]*z[465]*z[53] - z[450]*z[514]) - z[383]*z[40]*z[543] - z[383]*z[531] + z[40]*z[415]*z[525] + z[401]*z[451]*z[468] + z[402]*z[506] - z[417]*z[479]*z[525]);
  m[103] = -front_.J*z[185] + z[435]*(-z[101]*z[383] - z[121]*z[412] + z[146]*z[409] + z[203]*z[406] + z[208]*z[405] + z[367]*z[453]*z[469] + z[367]*(z[40]*z[479]*z[517]*z[524] + z[472]*z[50]*z[525] - z[472]*z[515]*z[538] + z[479]*z[48]*z[525]) + z[369]*z[505] + z[369]*(z[278] + z[532]) + z[382]*z[40]*z[479]*z[50]*z[524] + z[383]*z[50]*z[525] - z[383]*z[515]*z[538] + z[40]*z[412]*z[525] + z[405]*z[451]*z[468] + z[406]*z[506] - z[409]*z[479]*z[525]);
  m[104] = 0;
  m[105] = 0;
  m[106] = 0;
  m[107] = 0;
  m[108] = -front_.J*z[147] + z[435]*(-z[121]*z[386] + z[146]*z[384] + z[203]*z[206] + z[206]*z[506] + z[208]*z[220] + z[220]*z[451]*z[468] - z[384]*z[479]*z[525] + z[386]*z[40]*z[525]);
  m[109] = -front_.J*z[124] + z[435]*(-z[121]*z[392] + z[146]*z[390] + z[203]*z[307] + z[208]*z[269] + z[269]*z[451]*z[468] + z[307]*z[506] - z[390]*z[479]*z[525] + z[392]*z[40]*z[525]);
  m[110] = front_.J*z[465]*(-z[39] + z[438]) + z[435]*(-z[121]*z[380] + z[146]*z[378] + z[203]*z[326] + z[208]*z[323] + z[323]*z[451]*z[468] + z[326]*z[506] - z[378]*z[479]*z[525] + z[380]*z[40]*z[525]);
  m[111] = front_.J*z[93] + z[435]*(-z[120]*z[358] + z[146]*z[354] + z[203]*z[347] + z[208]*z[337] + z[337]*z[451]*z[468] + z[347]*z[506] - z[354]*z[479]*z[525] + z[358]*z[40]*z[525]);
  m[112] = 0;
  m[113] = z[435]*(-z[100]*z[437]*z[525]*(-z[153] - z[459]*z[465]) - z[112]*z[437]*z[525]*(z[108]*z[479] + z[148] - z[553]/z[94]) - z[130]*z[451]*z[468] + z[130]*z[525]*z[530] + z[135]*z[453]*z[525]*(-z[479]*z[554] - z[52] + z[533]) + z[40]*z[528]*(-z[108]*z[479] - z[148] + z[553]/z[94]) - z[479]*z[528]*(-z[479]*z[554] - z[52] + z[533]) + z[48]*pow(-z[437], -z[0])*(-z[153] - z[459]*z[465]));
  m[114] = 0;
  m[115] = 0;
  m[116] = 0;
  m[117] = z[435]*z[526]*(-z[100]*z[272]*z[525] + z[254]*z[451]*z[468] - z[254]*z[525]*z[530] - z[272]*z[506]);
  m[118] = z[435]*(z[100]*z[525]*z[555] + z[308]*z[451]*z[468] - z[308]*z[525]*z[530] + z[506]*z[555]);
  m[119] = 0;
  m[120] = 0;
  m[121] = z[466]*z[491]*(z[250] - z[359]*z[463] - z[362]*z[468]);
  m[122] = z[466]*z[491]*(-z[274]*z[468] + z[276]*z[463] - z[301]*z[468] - z[302]*z[463]);
  m[123] = 0;
  m[124] = 0;
  m[125] = 0;
  m[126] = 0;
  m[127] = 0;
  m[128] = z[466]*z[491]*(-z[281]*z[468] - z[284]*z[463] + z[91]);
  m[129] = z[466]*z[491]*(-z[164] - z[290]*z[468] - z[294]*z[463] - z[498]);
  m[130] = -z[436]*z[493]*(-rear_.r*z[460] + z[81]);
  m[131] = 0;
  m[132] = z[17]*z[466]*z[491];
  m[133] = 0;
  m[134] = 0;
  m[135] = z[446];
  m[136] = 0;
  m[137] = 0;
  m[138] = 0;
  m[139] = 0;
  m[140] = 0;
  m[141] = z[466]*z[491]*(z[128] + z[164]*z[441] + z[252]*z[462] - z[274]*z[479] + z[276]*z[475] - z[339]*z[466] - z[359]*z[472] + z[362]*z[470]);
  m[142] = z[466]*z[491]*(-z[204]*z[466] + z[274]*z[470] + z[276]*z[472] + z[301]*z[470] - z[302]*z[472]);
  m[143] = 0;
  m[144] = 0;
  m[145] = 0;
  m[146] = 0;
  m[147] = 0;
  m[148] = z[466]*z[491]*(z[126] - z[259]*z[466] + z[281]*z[470] - z[284]*z[472]);
  m[149] = z[436]*(rear_.R*z[443]*z[462]/z[484] + z[16]*z[209] + z[290]*z[470]*z[493] - z[294]*z[472]*z[493]);
  m[150] = -z[436]*z[493]*(z[0]*z[448]*z[492] + z[111]*z[467] - z[19]*z[447]*z[464] - z[36]*z[458]);
  m[151] = 0;
  m[152] = -z[16]*z[36]*z[446];
  m[153] = 0;
  m[154] = -z[446];
  m[155] = 0;
  m[156] = 0;
  m[157] = 0;
  m[158] = 0;
  m[159] = 0;
  m[160] = 0;
  m[161] = z[436]*(-z[252]*z[466] - z[274]*z[472] + z[276]*z[470] - z[339]*z[462] + z[359]*z[479] - z[362]*z[475]);
  m[162] = z[436]*(-z[204]*z[462] - z[276]*z[479] - z[280]*z[475] - z[298]*z[475] + z[302]*z[479]);
  m[163] = 0;
  m[164] = 0;
  m[165] = 0;
  m[166] = 0;
  m[167] = 0;
  m[168] = z[436]*(-z[259]*z[462] - z[281]*z[475] + z[284]*z[479]);
  m[169] = z[436]*(-z[209]*z[462] - z[290]*z[475] + z[294]*z[479]);
  m[170] = z[436]*(-z[0]*z[111]*z[462] - z[0]*z[4]*z[434]*z[492] + z[19]*z[2]*z[432]*z[467]);
  m[171] = 0;
  m[172] = 0;
  m[173] = 0;
  m[174] = 0;
  m[175] = 0;
  m[176] = 0;
  m[177] = 0;
  m[178] = 0;
  m[179] = 0;
  m[180] = 0;
  m[181] = z[435]*(z[178]*z[421] + z[190]*z[424] - z[370]*z[534] + z[370]*z[540] + z[382]*z[527]*(-z[40]*z[465] + z[465]*z[50]*z[519]/z[95] - z[510]*z[539] + z[510]) + z[385]*z[526]*(-z[471]*z[518]*z[529] - z[477]*z[485] - z[509]*z[539] + z[509]) - z[397]*z[478]*z[526] - z[399]*z[537] - z[368]*z[478]*z[518]/z[106]);
  m[182] = z[435]*(-z[119]*z[370]*z[535] + z[178]*z[416] + z[190]*z[418] + z[368]*z[478]*z[541] - z[370]*z[471]*z[527] - z[382]*z[526]*(z[127]*z[481]*z[536] - z[474]*z[53] - z[476]*z[48] + z[478]*z[53]*z[542]) + z[385]*z[526]*(z[127]*z[471]*z[529] - z[470]*z[478] + z[512]*z[542] + z[513]) - z[403]*z[478]*z[526] - z[404]*z[537] - z[474]*z[558]);
  m[183] = z[435]*(z[135]*z[382]*z[468]*z[546] - z[142]*z[370]*z[535] + z[178]*z[413] + z[190]*z[410] - z[368]*z[478]*z[546] - z[407]*z[478]*z[526] - z[408]*z[537] + z[481]*z[558] + z[53]*z[560] + z[564]*(-z[142]*z[471]*z[529] - z[463]*z[53] + z[473]*z[485] + z[512]*z[547]));
  m[184] = 0;
  m[185] = 0;
  m[186] = 0;
  m[187] = 0;
  m[188] = z[435]*z[526]*(-z[112]*z[386] - z[135]*z[384]*z[468] + z[206]*z[48] - z[220]*z[478]);
  m[189] = z[435]*(z[178]*z[393] + z[190]*z[391] + z[478]*z[526]*z[534]*(z[440]*z[539] - z[440] + z[465]*z[468]*z[507]/z[95]) - z[537]*(z[268] - z[437]*z[441] + z[437]*(-z[439]*z[50] - z[454] + z[456]*z[466])));
  m[190] = z[435]*(z[178]*z[380] + z[190]*z[378] - z[321]*z[478]*z[526] - z[327]*z[537]);
  m[191] = z[435]*(z[178]*z[357] + z[190]*z[354] - z[337]*z[478]*z[526] - z[537]*(-z[225] - z[145]*z[440]*z[478]/(2*z[106]) + z[145]*z[507]/(2*z[106])));
  m[192] = 0;
  m[193] = z[435]*z[526]*(-z[112]*z[525]*(-z[108]*z[479] - z[148] + z[553]/z[94]) - z[123]*z[451]*z[468] - z[135]*z[468]*z[525]*(-z[479]*z[554] - z[52] + z[533]) + z[506]*(-z[153] - z[459]*z[465]));
  m[194] = 0;
  m[195] = 0;
  m[196] = 0;
  m[197] = -z[435]*z[526]*(z[287]*z[478] - z[308]*z[48]);
  m[198] = -z[435]*(z[254]*z[48] - z[272]*z[478])/z[95];
  m[199] = 0;
  m[200] = 0;
  m[201] = z[435]*(z[105]*z[428] + z[191]*z[424] - z[368]*z[534] + z[368]*z[540] + z[385]*z[527]*(-z[466]*z[48] + z[474]*z[518]/z[95] - z[508]*z[539] + z[508]) + z[395]*z[518]*z[526]*(z[0] + z[495]/z[95] + z[539]) - z[397]*z[537] + z[399]*z[478]*z[526] + z[421]*z[527]*z[82] + z[563]*(z[40]*z[48] + z[496]*z[518]/z[95] + z[517]*z[539] - z[517]) + z[370]*z[478]*z[518]/z[106]);
  m[202] = z[435]*(z[105]*z[427] - z[119]*z[368]*z[535] + z[191]*z[418] - z[368]*z[471]*z[527] - z[370]*z[478]*z[541] - z[382]*z[526]*(z[464]*z[469]*z[478] + z[468]*z[471]*z[53] + z[472]*z[514] + z[496]*z[542] + z[519]*z[542]) - z[395]*z[526]*(-z[0]*z[471]*z[513] + z[131]*z[539] - z[464]*z[468]*z[483] + z[495]*z[544]) - z[403]*z[537] + z[404]*z[478]*z[526] + z[416]*z[527]*z[82] + z[474]*z[560] + z[564]*(-z[10]*z[465] + z[131]*z[472]*z[536] + z[468]*z[474]*z[544] - z[470]*z[48] - z[482]*z[487] - z[487]));
  m[203] = z[435]*(z[105]*z[425] - z[142]*z[368]*z[535] + z[191]*z[410] + z[370]*z[478]*z[546] - z[385]*z[527]*(z[0]*z[462]*z[53] - z[462]*z[48]*z[550] - z[464]*z[469] - z[474]*z[550])/2 + z[395]*z[526]*(z[145]*z[539] + z[495]*z[550] - 4*z[496] - 4*z[519])/2 - z[407]*z[537] + z[408]*z[478]*z[526] + z[413]*z[527]*z[82] - z[481]*z[560] + z[53]*z[558] + z[563]*(z[14]*z[485] + z[496]*z[547] + z[519]*z[547] + z[95] - pow(-z[53], -z[0])));
  m[204] = 0;
  m[205] = 0;
  m[206] = 0;
  m[207] = 0;
  m[208] = z[435]*(z[105]*z[375] + z[191]*z[384] + z[206]*z[478]*z[526] - z[220]*z[537] + z[386]*z[527]*z[82]);
  m[209] = z[435]*(z[105]*z[400] - z[142]*z[390]*z[526] + z[307]*z[478]*z[526] + z[392]*z[527]*z[82] - z[518]*(-z[440]*z[539] + z[440] - z[478]*z[507]/z[95])/z[95]);
  m[210] = z[435]*(z[105]*z[389] + z[191]*z[378] - z[321]*z[537] + z[327]*z[478]*z[526] + z[380]*z[527]*z[82]);
  m[211] = z[435]*(z[105]*z[372] - z[142]*z[355]*z[526] - z[337]*z[537] + z[342]*z[478]*z[526] + z[356]*z[527]*z[82]);
  m[212] = 0;
  m[213] = z[435]*(-z[105]*z[180]*z[525] - z[123]*z[506]*z[526] - z[142]*z[525]*z[526]*(-z[479]*z[554] - z[52] + z[533]) - z[451]*z[527]*(-z[153] - z[459]*z[465]) + z[525]*z[527]*z[82]*(-z[108]*z[479] - z[148] + z[553]/z[94]));
  m[214] = 0;
  m[215] = 0;
  m[216] = 0;
  m[217] = -z[435]*(-z[254]*z[48] + z[272]*z[478])/z[95];
  m[218] = -z[435]*(z[254]*z[478] + z[272]*z[48])/z[95];
  m[219] = 0;
  m[220] = 0;
  m[221] = z[435]*(z[382]*z[53] - z[385]*z[472] - z[395]*z[48] + z[40]*z[424] + z[421]*z[479] - z[428]*z[50]);
  m[222] = z[435]*(-z[382]*z[469]*z[479] - z[385]*z[475] - z[395]*z[468]*z[477] + z[40]*z[418] + z[416]*z[479] - z[427]*z[50]);
  m[223] = z[435]*(z[382]*z[50] - z[395]*z[40] + z[40]*z[410] + z[413]*z[479] - z[425]*z[50]);
  m[224] = 0;
  m[225] = 0;
  m[226] = 0;
  m[227] = 0;
  m[228] = z[435]*(-z[375]*z[50] + z[384]*z[40] + z[386]*z[479]);
  m[229] = z[435]*(z[391]*z[40] + z[393]*z[479] - z[50]*(z[108]*z[431]*z[481] - z[114]*z[433] - z[114]*z[479]*z[525] + z[118]*z[143]*z[479]*z[524]/2 - z[118]*z[40]*z[478]*z[525] - z[118]*z[431]*z[478] + z[118]*z[472]*z[525] + z[125]*z[40]*z[481]*z[525] - z[125]*z[468]*z[475]*z[525] + z[143]*z[516]*z[524]/2 + z[201]*z[40]*z[463]*z[524]/2 - z[201]*z[480]*z[485]*z[524]/2 - z[34]*z[40]*z[525] - z[34]*z[431] + z[455]*z[531] - z[460]*z[469]*z[485]*z[525] - z[463]*z[523] + z[463]*z[548] - z[489]*z[65] - z[525]*z[53]*z[65] - z[532]*z[65]));
  m[230] = z[435]*(z[378]*z[40] + z[380]*z[479] - z[389]*z[50]);
  m[231] = z[435]*(z[354]*z[40] + z[357]*z[479] - z[50]*(z[125]*z[479]*z[525] - z[201]*z[40]*z[524]/2 + z[345] + z[433]*z[88] + z[523] - z[548]));
  m[232] = 0;
  m[233] = z[435]*z[525]*(z[180]*z[50] + z[40]*(-z[479]*z[554] - z[52] + z[533]) + z[479]*(-z[108]*z[479] - z[148] + z[553]/z[94]));
  m[234] = 0;
  m[235] = 0;
  m[236] = 0;
  m[237] = 0;
  m[238] = 0;
  m[239] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (12)
 *
 * @param[out] a C-array of with 12 elements
 */
//  void Bicycle::gaf(double m[12]) const;
void Bicycle::gaf(double m[12]) const
{
  double * z = new double[56];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = front_.Tz + steer_torque_;
  z[7] = pow(z[3], 2);
  z[8] = pow(z[4], 2);
  z[9] = front_.Tw - front_.Ty;
  z[10] = rear_.Tz - steer_torque_;
  z[11] = sqrt(z[7]);
  z[12] = rear_.a*z[4] + rear_.b*z[1];
  z[13] = rear_.R/z[11] + rear_.r;
  z[14] = rear_.a*z[1] - rear_.b*z[4];
  z[15] = z[0]*z[1]*z[5] + z[2]*z[3];
  z[16] = z[0]*z[2] - z[1]*z[3]*z[5];
  z[17] = -z[0]*z[1]*z[2] + z[3]*z[5];
  z[18] = -z[17];
  z[19] = -z[0]*z[5] - z[1]*z[2]*z[3];
  z[20] = front_.a*z[3]*z[4] - front_.b*z[16];
  z[21] = z[0]*z[2]*z[8] + z[1]*z[18];
  z[22] = -front_.r*z[21];
  z[23] = rear_.Fx*z[13]*z[3]*z[4] + rear_.Fz*z[1]*z[13]*z[3];
  z[24] = front_.R*z[3]*z[4]/sqrt(pow(z[16], 2) + z[7]*z[8]) - front_.b;
  z[25] = front_.R*z[16]/sqrt(pow(z[16], 2) + z[7]*z[8]) - front_.a;
  z[26] = front_.R*z[1]*z[16]/sqrt(pow(z[16], 2) + z[7]*z[8]) - front_.R*z[3]*z[5]*z[8]/sqrt(pow(z[16], 2) + z[7]*z[8]) - front_.a*z[1] + front_.b*z[4]*z[5];
  z[27] = -front_.Fy;
  z[28] = -front_.Fz;
  z[29] = -rear_.Ty;
  z[30] = -front_.a;
  z[31] = -front_.b;
  z[32] = -rear_.b;
  z[33] = front_.Fx*front_.r;
  z[34] = -front_.r*z[27];
  z[35] = -front_.r*z[28];
  z[36] = g_*front_.m;
  z[37] = g_*rear_.m;
  z[38] = rear_.Fx*z[1];
  z[39] = rear_.Fy*z[3];
  z[40] = -z[28]*z[4];
  z[41] = -z[0];
  z[42] = -z[2];
  z[43] = -z[3];
  z[44] = -z[4]*z[41];
  z[45] = -z[1]*z[43];
  z[46] = z[42]*z[43];
  z[47] = -z[4]*z[42];
  z[48] = -z[4]*z[43];
  z[49] = rear_.Fz/z[11];
  z[50] = rear_.R/z[11];
  z[51] = front_.R/sqrt(pow(z[16], 2) + z[7]*z[8]);
  z[52] = z[4]*(-z[15]*z[2] + z[18]*z[5]);
  z[53] = front_.Fx*z[24];
  z[54] = (front_.Gx*z[2]*z[4] - front_.Gy*z[18])/(pow(z[18], 2) + pow(z[42], 2)*z[8]);
  z[55] = -(front_.Gx*z[18] + front_.Gy*z[2]*z[4])/(sqrt(pow(z[18], 2) + pow(z[2], 2)*z[8])*sqrt(pow(z[18], 2) + pow(z[42], 2)*z[8]));

  m[0] = rear_.Fx*z[41]*(z[32] + z[48]*z[50]) + rear_.Fz*z[41]*(rear_.a + z[45]*z[50]) - rear_.Tw*z[41] + front_.Tx*z[16] - rear_.Tx*z[45] + z[10]*z[48] + z[12]*z[39] + z[19]*z[25]*z[28] + z[19]*z[53] + z[19]*z[9] - z[20]*z[27] + z[36]*(-z[16]*(-z[19]*z[31] - z[19]*z[48]*z[51]) - z[19]*z[20] + z[48]*(-z[16]*z[19]*z[51] - z[19]*z[30])) + z[37]*(-z[41]*(-rear_.a*z[4]*z[43] + z[1]*z[32]*z[43]) + z[45]*(-z[32]*z[41] - z[43]*z[44]*z[50]) - z[48]*(-rear_.a*z[41] - z[41]*z[45]*z[50])) + z[41]*(rear_.Tw + z[29]) + z[48]*z[6];
  m[1] = rear_.Fy*z[14] - rear_.Fz*z[13]*z[44] + rear_.R*z[44]*z[49] + front_.Tx*z[4]*z[5] + rear_.Tx*z[4] + z[1]*z[10] + z[1]*z[6] - z[13]*z[38]*z[41] + z[13]*z[39] + z[15]*z[33] - z[18]*z[34] + z[25]*z[40]*z[42] + z[26]*z[27] - z[35]*z[44] + z[36]*(z[16]*(z[31]*z[47] + z[46]*z[51]*z[8]) + z[19]*z[26] - z[48]*(z[16]*z[47]*z[51] + z[30]*z[47])) - z[37]*z[41]*(z[1]*z[45]*z[50] + z[14] - z[43]*z[50]*z[8]) + z[38]*z[41]*z[50] + z[47]*z[53] + z[47]*z[9];
  m[2] = -rear_.Fx*z[32] - rear_.Fz*rear_.a - front_.Tx*z[42] + z[12]*z[37]*z[43] - z[23] + z[24]*z[27]*z[42] - z[25]*z[28]*z[5] - z[29] - z[33]*z[48]*z[5] + z[34]*z[4]*z[46] - z[35]*z[45] + z[36]*(-z[16]*(z[31]*z[5] + z[48]*z[5]*z[51]) - z[19]*(-z[31]*z[42] + z[4]*z[46]*z[51]) + z[48]*(z[16]*z[5]*z[51] + z[30]*z[5])) - z[5]*z[53] - z[5]*z[9];
  m[3] = z[19]*z[25]*z[36] - z[22]*z[27] + z[25]*z[27] + z[33]*(z[1]*z[15] - z[41]*z[5]*z[8]) + z[6];
  m[4] = rear_.Tw - z[23];
  m[5] = -front_.Fx*z[48]*z[51] + front_.Tw - z[16]*z[28]*z[51] + z[22]*z[28] + z[33]*z[52];
  m[6] = rear_.Fx*z[48]/z[11] + rear_.Gx + z[45]*z[49];
  m[7] = rear_.Fy*z[11] + rear_.Gy + z[43]*z[44]*z[49] + z[38]*z[41]*z[43]/z[11];
  m[8] = -rear_.Fy*z[41] + rear_.Fz*z[48] + rear_.Gz + z[37] + z[38]*z[43];
  m[9] = -front_.Fx*z[52]/sqrt(pow(z[18], 2) + pow(z[42], 2)*z[8]) - z[18]*z[55] + z[21]*z[28]/sqrt(pow(z[18], 2) + pow(z[42], 2)*z[8]) + z[47]*z[54];
  m[10] = -front_.Fx*(z[15]*z[18] - z[42]*z[5]*z[8])/sqrt(pow(z[18], 2) + pow(z[42], 2)*z[8]) - z[18]*z[54] - z[27]*sqrt(pow(z[18], 2) + pow(z[42], 2)*z[8]) + z[40]*(z[1]*z[42] - z[18]*z[41])/sqrt(pow(z[18], 2) + pow(z[42], 2)*z[8]) - z[47]*z[55];
  m[11] = front_.Fx*z[16] + front_.Gz + z[19]*z[27] + z[36] - z[40]*z[43];

  delete [] z;
}

/** Computes the n-d array of shape (12, 8)
 *
 * @param[out] a C-array of with 96 elements
 */
//  void Bicycle::gaf_dq(double m[96]) const;
void Bicycle::gaf_dq(double m[96]) const
{
  double * z = new double[166];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = front_.Tz + steer_torque_;
  z[7] = pow(z[1], 2);
  z[8] = pow(z[2], 2);
  z[9] = pow(z[3], 2);
  z[10] = pow(z[4], 2);
  z[11] = pow(z[5], 2);
  z[12] = front_.Tw - front_.Ty;
  z[13] = rear_.Tz - steer_torque_;
  z[14] = sqrt(z[9]);
  z[15] = rear_.a*z[4] + rear_.b*z[1];
  z[16] = rear_.a*z[1] - rear_.b*z[4];
  z[17] = -rear_.R/z[14] - rear_.r;
  z[18] = -z[0]*z[2] + z[1]*z[3]*z[5];
  z[19] = -z[18];
  z[20] = -z[0]*z[1]*z[2] + z[3]*z[5];
  z[21] = -z[20];
  z[22] = -z[0]*z[5] - z[1]*z[2]*z[3];
  z[23] = 2*z[0]*z[5] + 2*z[1]*z[2]*z[3];
  z[24] = -z[0]*z[1]*z[5] - z[2]*z[3];
  z[25] = 2*z[0]*z[1]*z[5] + 2*z[2]*z[3];
  z[26] = rear_.R*z[0]*z[1]*z[3]/z[14] + rear_.a*z[0];
  z[27] = rear_.R*z[0]*z[3]*z[4]/z[14] - rear_.b*z[0];
  z[28] = front_.a*z[0]*z[4] - front_.b*z[24];
  z[29] = z[1]*z[3] + z[19]*z[5];
  z[30] = -z[0]*z[21] + z[1]*z[2];
  z[31] = front_.Gx*z[2]*z[4] - front_.Gy*z[21];
  z[32] = front_.a*z[3]*z[4] - front_.b*z[19];
  z[33] = -front_.Gx*z[21] - front_.Gy*z[2]*z[4];
  z[34] = -z[1]*z[22] + z[10]*z[2]*z[3];
  z[35] = -z[0]*z[10]*z[5] + z[1]*z[24];
  z[36] = z[2]*z[30]*z[4];
  z[37] = z[1]*z[4]*z[9] + z[19]*z[3]*z[4]*z[5];
  z[38] = -z[0]*z[2]*z[21]*z[4] + z[1]*z[4]*z[8];
  z[39] = z[19]*z[2] - z[22]*z[5];
  z[40] = z[10]*z[2]*z[5] - z[21]*z[24];
  z[41] = -z[0]*z[10]*z[3] - z[19]*z[24];
  z[42] = -2*z[0]*z[10]*z[3] + z[19]*z[25];
  z[43] = 2*z[10]*z[2]*z[5] + z[21]*z[25];
  z[44] = -z[0]*z[10]*z[3] + z[19]*z[25]/2;
  z[45] = front_.R*z[2]*z[3]*z[4]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.b*z[2];
  z[46] = front_.R*z[3]*z[4]*z[5]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.b*z[5];
  z[47] = front_.R*z[10]*z[2]*z[3]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.b*z[2]*z[4];
  z[48] = -front_.R*z[10]*z[3]*z[5]/sqrt(z[10]*z[9] + pow(z[19], 2)) + front_.b*z[4]*z[5];
  z[49] = pow(z[19], 2)/(z[10]*z[9] + pow(z[19], 2)) - 1;
  z[50] = front_.R*z[19]*z[5]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.a*z[5];
  z[51] = z[33]/sqrt(z[10]*z[8] + pow(z[21], 2));
  z[52] = front_.R*z[19]*z[2]*z[4]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.a*z[2]*z[4];
  z[53] = -front_.R*z[22]*z[3]*z[4]/sqrt(z[10]*z[9] + pow(z[19], 2)) + front_.b*z[22];
  z[54] = -z[1] + z[37]*z[4]/(z[10]*z[9] + pow(z[19], 2));
  z[55] = -front_.R*z[19]*z[22]/sqrt(z[10]*z[9] + pow(z[19], 2)) + front_.a*z[22];
  z[56] = z[19]*z[37]/(z[10]*z[9] + pow(z[19], 2)) - z[3]*z[4]*z[5];
  z[57] = z[19]*z[41]/(z[10]*z[9] + pow(z[19], 2)) + z[24];
  z[58] = front_.R*z[1]*z[19]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.a*z[1] + z[48];
  z[59] = front_.Gx*pow(z[21], 2)/(z[10]*z[8] + pow(z[21], 2)) - front_.Gx + front_.Gy*z[2]*z[21]*z[4]/(z[10]*z[8] + pow(z[21], 2));
  z[60] = front_.Fx*front_.r*z[0]*z[4]*z[5] - rear_.Fx*rear_.R*z[0]*z[4]/z[14] - rear_.Fx*z[0]*z[17]*z[4] - front_.Fy*front_.r*z[0]*z[2]*z[4] + front_.Fz*front_.r*z[0]*z[1] - rear_.Fz*rear_.R*z[0]*z[1]/z[14] - rear_.Fz*z[0]*z[1]*z[17] + g_*rear_.m*z[0]*z[15];
  z[61] = -front_.R*z[19]*z[2]*z[22]*z[3]*z[4]/pow(z[10]*z[9] + pow(z[19], 2), 3.0/2.0) - z[46];
  z[62] = -front_.R*z[0]*z[22]*z[4]/sqrt(z[10]*z[9] + pow(z[19], 2)) + front_.R*z[21]*z[3]*z[4]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.b*z[21];
  z[63] = front_.Gx*z[21]*z[40]/(z[10]*z[8] + pow(z[21], 2)) + front_.Gx*z[24] + front_.Gy*z[2]*z[4]*z[40]/(z[10]*z[8] + pow(z[21], 2)) - front_.Gy*z[4]*z[5];
  z[64] = front_.R*z[19]*z[2]*z[3]*z[4]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.R*z[19]*z[22]*z[37]/pow(z[10]*z[9] + pow(z[19], 2), 3.0/2.0) + front_.R*z[22]*z[3]*z[4]*z[5]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.a*z[2]*z[3]*z[4];
  z[65] = front_.R*z[1]*pow(z[19], 2)*z[22]/pow(z[10]*z[9] + pow(z[19], 2), 3.0/2.0) - front_.R*z[1]*z[22]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.R*z[10]*z[19]*z[22]*z[3]*z[5]/pow(z[10]*z[9] + pow(z[19], 2), 3.0/2.0) + z[47];
  z[66] = front_.R*z[1]*z[19]*z[37]/pow(z[10]*z[9] + pow(z[19], 2), 3.0/2.0) + front_.R*z[1]*z[3]*z[4]*z[5]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.R*z[10]*z[3]*z[37]*z[5]/pow(z[10]*z[9] + pow(z[19], 2), 3.0/2.0) + front_.R*z[19]*z[4]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.a*z[4] - front_.b*z[1]*z[5];
  z[67] = -front_.Fx;
  z[68] = -front_.Fy;
  z[69] = -front_.Fz;
  z[70] = -front_.Gx;
  z[71] = -front_.Gy;
  z[72] = -front_.a;
  z[73] = -front_.b;
  z[74] = -rear_.b;
  z[75] = -front_.r*z[67];
  z[76] = -front_.r*z[68];
  z[77] = -front_.r*z[69];
  z[78] = g_*front_.m;
  z[79] = g_*rear_.m;
  z[80] = -z[3]*z[67];
  z[81] = -z[4]*z[67];
  z[82] = rear_.Fx*z[1];
  z[83] = rear_.Fx*z[4];
  z[84] = rear_.Fy*z[3];
  z[85] = -z[5]*z[69];
  z[86] = rear_.Fz*z[1];
  z[87] = rear_.Fz*z[4];
  z[88] = front_.Tx*z[5];
  z[89] = -z[1]*z[72];
  z[90] = rear_.a*z[3];
  z[91] = -z[1]*z[73];
  z[92] = -z[5]*z[73];
  z[93] = -z[1]*z[74];
  z[94] = -z[0];
  z[95] = -2*z[94];
  z[96] = -z[1];
  z[97] = 2*z[2];
  z[98] = -z[3];
  z[99] = -z[4];
  z[100] = -z[5];
  z[101] = z[94]*z[96];
  z[102] = -z[2]*z[94];
  z[103] = z[94]*z[98];
  z[104] = z[94]*z[99];
  z[105] = -z[2]*z[96];
  z[106] = z[96]*z[98];
  z[107] = z[96]*z[99];
  z[108] = z[100]*z[96];
  z[109] = -z[2]*z[98];
  z[110] = -z[2]*z[99];
  z[111] = z[98]*z[99];
  z[112] = z[100]*z[98];
  z[113] = -z[100]*z[99];
  z[114] = -z[10];
  z[115] = -z[114]*z[2];
  z[116] = z[114]*z[98];
  z[117] = z[100]*z[114];
  z[118] = rear_.R/z[14];
  z[119] = -z[98]/z[14];
  z[120] = -z[114]*z[8];
  z[121] = -z[114]*z[9];
  z[122] = -z[109]*z[114];
  z[123] = rear_.Fy*z[15];
  z[124] = z[17]*z[98];
  z[125] = z[22]*z[68];
  z[126] = -z[21]*z[70];
  z[127] = z[22]*z[96];
  z[128] = z[100]*z[22];
  z[129] = -z[2]*z[24];
  z[130] = -z[19]*z[96];
  z[131] = z[19]*z[2];
  z[132] = -z[19]*z[99];
  z[133] = -z[100]*z[19];
  z[134] = -z[21]*z[94];
  z[135] = -z[21]*z[96];
  z[136] = -z[100]*z[21];
  z[137] = z[22]*z[24];
  z[138] = -z[19]*z[22];
  z[139] = -z[21]*z[22];
  z[140] = -z[21]*z[24];
  z[141] = z[19]*z[21];
  z[142] = -z[67]/sqrt(z[120] + pow(z[21], 2));
  z[143] = front_.R/pow(z[121] + pow(z[19], 2), 3.0/2.0);
  z[144] = front_.R/sqrt(z[121] + pow(z[19], 2));
  z[145] = z[139]*z[21];
  z[146] = 1/(2*sqrt(z[120] + pow(z[21], 2)));
  z[147] = -z[99]/sqrt(z[120] + pow(z[21], 2));
  z[148] = -z[37]*z[99];
  z[149] = z[21]/(z[120] + pow(z[21], 2));
  z[150] = z[149]*z[21];
  z[151] = z[78]*(front_.R*z[19]/sqrt(z[10]*z[9] + pow(z[19], 2)) - front_.a);
  z[152] = z[31]/pow(z[120] + pow(z[21], 2), 2);
  z[153] = z[31]/(z[120] + pow(z[21], 2));
  z[154] = z[19]*z[41];
  z[155] = z[38]/(z[120] + pow(z[21], 2));
  z[156] = z[40]/pow(z[120] + pow(z[21], 2), 3.0/2.0);
  z[157] = z[40]/(z[120] + pow(z[21], 2));
  z[158] = z[41]/(z[121] + pow(z[19], 2));
  z[159] = z[42]/(z[121] + pow(z[19], 2));
  z[160] = z[43]/(z[120] + pow(z[21], 2));
  z[161] = z[51]/pow(z[120] + pow(z[21], 2), 3.0/2.0);
  z[162] = z[51]/sqrt(z[120] + pow(z[21], 2));
  z[163] = z[149]*z[162];
  z[164] = z[22]*(front_.Gx*z[2]*z[21]*z[4]/(z[10]*z[8] + pow(z[21], 2)) - front_.Gy*pow(z[21], 2)/(z[10]*z[8] + pow(z[21], 2)) + front_.Gy)/(sqrt(z[120] + pow(z[21], 2))*sqrt(z[10]*z[8] + pow(z[21], 2)));
  z[165] = -(front_.Gx*z[2]*z[4]*z[43]/(z[10]*z[8] + pow(z[21], 2)) - 2*front_.Gx*z[4]*z[5] - front_.Gy*z[21]*z[43]/(z[10]*z[8] + pow(z[21], 2)) - 2*front_.Gy*z[24])/(2*sqrt(z[120] + pow(z[21], 2))*sqrt(z[10]*z[8] + pow(z[21], 2)));

  m[0] = 0;
  m[1] = rear_.Fx*z[98]*(z[111]*z[118] + z[74]) + rear_.Fz*z[98]*(rear_.a + z[106]*z[118]) - rear_.Tw*z[98] - front_.Tx*z[24] + rear_.Tx*z[101] - z[104]*z[13] - z[104]*z[6] + z[12]*z[21] + z[123]*z[94] + z[28]*z[68] - z[67]*(-z[111]*z[143]*z[22]*z[41] + z[62]) - z[69]*(z[137]*z[144] - z[138]*z[143]*z[42]/2 - z[141]*z[144] - z[21]*z[72]) + z[78]*(-z[104]*z[55] + z[111]*(z[137]*z[144] - z[138]*z[143]*z[44] - z[141]*z[144] - z[21]*z[72]) + z[19]*(-z[111]*z[143]*z[22]*z[44] + z[62]) - z[21]*z[32] + z[22]*z[28] + z[24]*z[53]) + z[79]*(-z[101]*z[27] + z[104]*z[26] + z[106]*(-rear_.R*z[14]*z[99] - z[74]*z[98]) - z[111]*(-rear_.R*z[14]*z[96] + z[90]) + z[94]*(-rear_.a*z[0]*z[99] - z[93]*z[94]) - z[98]*(-z[90]*z[99] - z[93]*z[98])) + z[98]*(rear_.Tw - rear_.Ty);
  m[2] = -rear_.Tx*z[111] + z[103]*z[118]*z[82] - z[103]*z[118]*z[87] - z[106]*z[13] - z[106]*z[6] + z[109]*z[12]*z[99] - z[111]*z[88] - z[16]*z[84] - z[64]*z[69] - z[68]*z[98]*(z[89] + z[92]*z[99]) + z[78]*(-z[100]*z[111]*z[53] - z[106]*z[55] - z[109]*z[32]*z[99] + z[111]*z[64] - z[19]*(z[106]*z[144]*z[22] - z[111]*z[143]*z[22]*z[37] + z[111]*z[2]*z[73] + z[115]*z[144]*z[9]) + z[22]*(-z[111]*z[92] - z[89]*z[98])) + z[79]*(-rear_.R*z[114]*z[14]*z[94] + rear_.R*z[14]*z[7]*z[94] + z[106]*z[26] + z[111]*z[27] + z[94]*(-rear_.a*z[1]*z[98] + z[74]*z[98]*z[99])) - z[80]*(-z[127]*z[144] - z[143]*z[148]*z[22] + z[47]);
  m[3] = -front_.Tx*z[22] + z[12]*z[19] + z[125]*z[73] - z[19]*z[67]*(z[111]*z[143]*pow(z[22], 2) + z[111]*z[144] + z[73]) - z[69]*(-pow(z[138], 2)*z[143] - z[144]*pow(z[19], 2) + z[144]*pow(z[22], 2) - z[19]*z[72]) + z[78]*(z[111]*(-z[138]*z[143]*z[19]*z[23] - 2*z[144]*pow(z[19], 2) + 2*z[144]*pow(z[22], 2) - 2*z[19]*z[72])/2 - z[19]*z[32] + z[19]*(z[111]*z[138]*z[143]*z[23] + 2*z[111]*z[144]*z[19] + 2*z[19]*z[73])/2 + pow(z[22], 2)*z[73] + z[22]*z[53]);
  m[4] = 0;
  m[5] = 0;
  m[6] = 0;
  m[7] = 0;
  m[8] = 0;
  m[9] = -rear_.Fy*z[118]*z[94] - rear_.Fy*z[17]*z[94] - z[110]*z[144]*z[57]*z[69] - z[111]*z[77] - z[115]*z[144]*z[67]*(z[158]*z[98] + z[94]) + z[118]*z[82]*z[98] - z[118]*z[87]*z[98] + z[124]*z[82] - z[124]*z[87] - z[144]*z[68]*(z[112]*z[114]*z[158] + z[130]*z[158] + z[35]) - z[19]*z[75] + z[22]*z[76] + z[78]*(z[104]*z[52] + z[111]*(z[110]*z[143]*z[154] + z[110]*z[144]*z[24]) + z[19]*(z[102]*z[114]*z[144] - z[122]*z[143]*z[41]) + z[21]*z[58] - z[22]*(z[100]*z[114]*z[144]*z[94] + z[112]*z[114]*z[143]*z[41] + z[130]*z[143]*z[41] - z[144]*z[24]*z[96]) - z[24]*z[47]) - z[79]*z[98]*(z[116]*z[118] - z[118]*z[7]*z[98] + z[16]);
  m[10] = rear_.Tx*z[96] - z[105]*z[12] + z[123] - z[13]*z[99] - z[2]*z[67]*(2*z[106]*z[144]*z[99] + z[116]*z[143]*z[37] + z[91]) + z[2]*z[69]*(z[112]*z[114]*z[144] - z[130]*z[144] + z[132]*z[143]*z[37] + z[89]) - z[6]*z[99] + z[60] + z[66]*z[68] + z[78]*(z[100]*z[111]*z[47] + z[106]*z[52] + z[109]*z[58]*z[99] - z[111]*(-z[105]*z[144]*z[19] - z[109]*z[117]*z[144] + z[110]*z[143]*z[19]*z[37] + z[2]*z[89]) + z[19]*(z[106]*z[144]*z[97]*z[99] + z[122]*z[143]*z[37] + z[2]*z[91]) + z[22]*z[66]) + z[88]*z[96];
  m[11] = -front_.Tx*z[110] - z[113]*z[12] - z[21]*z[75] + z[24]*z[76] - z[61]*z[81] + z[65]*z[68] + z[69]*z[99]*(z[131]*z[138]*z[143] + z[144]*z[2]*z[22] - z[50]) + z[78]*(z[111]*(z[110]*z[138]*z[143]*z[19] + z[110]*z[144]*z[22] + z[113]*z[144]*z[19] + z[5]*z[72]*z[99]) + z[19]*z[58] - z[19]*(z[122]*z[138]*z[143] + z[48]) - z[22]*z[47] + z[22]*z[65]);
  m[12] = 0;
  m[13] = 0;
  m[14] = 0;
  m[15] = 0;
  m[16] = 0;
  m[17] = -z[100]*z[144]*z[69]*(z[159]*z[19] - z[25])/2 - z[100]*z[144]*z[81]*(-z[158]*z[98] - z[94]) + z[110]*z[144]*z[68]*(-z[159]*z[98] + z[95])/2 + z[60] + z[78]*(-z[104]*z[50] + z[111]*(z[100]*z[144]*z[24] - z[133]*z[143]*z[44]) + z[19]*(-z[100]*z[104]*z[144] - z[100]*z[111]*z[143]*z[44]) - z[21]*z[45] - z[22]*(z[102]*z[144]*z[99] + z[109]*z[143]*z[44]*z[99]) + z[24]*z[46]);
  m[18] = -z[100]*z[106]*z[75] + z[100]*z[144]*z[54]*z[80] + z[105]*z[76]*z[98] - z[109]*z[144]*z[54]*z[68] - z[111]*z[77] + z[124]*z[82] - z[124]*z[87] + z[144]*z[56]*z[85] - z[16]*z[79]*z[98] + z[78]*(-z[100]*z[111]*z[46] - z[106]*z[50] - z[109]*z[45]*z[99] + z[111]*(-z[11]*z[111]*z[144] + z[133]*z[143]*z[37]) - z[19]*(z[100]*z[106]*z[144] - z[100]*z[111]*z[143]*z[37]) - z[22]*(z[105]*z[144]*z[98] + z[109]*z[143]*z[148]));
  m[19] = -z[100]*z[111]*z[76] - z[109]*z[75]*z[99] + z[12]*z[2] + z[61]*z[68] - z[67]*(z[111]*z[128]*z[143]*z[19] + z[45]) + z[69]*(z[128]*z[143]*pow(z[19], 2) - z[128]*z[144] + z[131]*z[144] + z[2]*z[72]) + z[78]*(-z[111]*(-2*z[100]*z[144]*z[22] + z[133]*z[143]*z[19]*z[23] + z[144]*z[19]*z[97] + z[72]*z[97])/2 - z[19]*z[45] + z[19]*(z[111]*z[133]*z[143]*z[23] + z[111]*z[144]*z[97] + z[73]*z[97])/2 + z[22]*z[46] + z[22]*(2*z[100]*z[111]*z[144] + z[109]*z[132]*z[143]*z[23] + 2*z[92])/2) + z[88];
  m[20] = 0;
  m[21] = 0;
  m[22] = 0;
  m[23] = 0;
  m[24] = 0;
  m[25] = front_.r*z[34]*z[68] + front_.r*z[67]*(z[112]*z[114] + z[130]) - z[144]*z[22]*z[57]*z[78] - z[144]*z[57]*z[68] + z[151]*z[21];
  m[26] = -z[100]*z[111]*z[76] + z[109]*z[151]*z[99] - z[109]*z[75]*z[99] + z[144]*z[22]*z[56]*z[78] + z[144]*z[56]*z[68];
  m[27] = front_.r*z[67]*(-z[102]*z[114] + z[135]) + z[125]*z[144]*z[49] + z[144]*pow(z[22], 2)*z[49]*z[78] + z[151]*z[19] + z[35]*z[76];
  m[28] = 0;
  m[29] = 0;
  m[30] = 0;
  m[31] = 0;
  m[32] = 0;
  m[33] = z[94]*(z[118]*z[83] + z[118]*z[86] + z[17]*z[83] + z[17]*z[86]);
  m[34] = z[124]*(z[82] - z[87]);
  m[35] = 0;
  m[36] = 0;
  m[37] = 0;
  m[38] = 0;
  m[39] = 0;
  m[40] = 0;
  m[41] = z[143]*z[154]*z[69] - z[143]*z[41]*z[80]*z[99] + z[144]*z[24]*z[69] - z[144]*z[81]*z[94] + z[34]*z[77] - z[39]*z[75]*z[99];
  m[42] = z[100]*z[111]*z[77] - z[111]*z[143]*z[19]*z[29]*z[69] - z[111]*z[144]*z[85] + z[121]*z[143]*z[29]*z[67] - z[144]*z[80]*z[96] - z[75]*z[96]*(z[129] - z[136]);
  m[43] = -z[132]*z[143]*z[22]*z[80] + z[138]*z[143]*z[19]*z[69] + z[144]*z[22]*z[69] - z[35]*z[77];
  m[44] = 0;
  m[45] = 0;
  m[46] = 0;
  m[47] = 0;
  m[48] = 0;
  m[49] = 0;
  m[50] = z[119]*(-z[82] + z[87]);
  m[51] = 0;
  m[52] = 0;
  m[53] = 0;
  m[54] = 0;
  m[55] = 0;
  m[56] = 0;
  m[57] = z[119]*(rear_.Fy*z[94] - z[82]*z[98] + z[87]*z[98]);
  m[58] = z[103]*(z[83] + z[86])/z[14];
  m[59] = 0;
  m[60] = 0;
  m[61] = 0;
  m[62] = 0;
  m[63] = 0;
  m[64] = 0;
  m[65] = -z[82]*z[94] + z[84] + z[87]*z[94];
  m[66] = -z[98]*(-z[83] - z[86]);
  m[67] = 0;
  m[68] = 0;
  m[69] = 0;
  m[70] = 0;
  m[71] = 0;
  m[72] = 0;
  m[73] = -z[110]*z[139]*z[152] + z[110]*z[164] - z[139]*z[59]/(z[120] + pow(z[21], 2)) + z[145]*z[161] + z[147]*z[67]*(-z[128]*z[150] + z[129]*z[139]/(z[120] + pow(z[21], 2)) + z[39]) + z[162]*z[22] + z[69]*(z[102]*z[114]*z[139]/(z[120] + pow(z[21], 2)) - z[127]*z[150] + z[34])/sqrt(z[120] + pow(z[21], 2));
  m[74] = -z[102]*z[147]*z[51] - z[105]*z[153] + z[110]*z[152]*z[36] - z[110]*(z[102]*z[71]*z[99] - z[105]*z[70] - z[149]*z[38]*z[71] - z[2]*z[38]*z[70]*z[99]/(z[120] + pow(z[21], 2)))/(z[120] + pow(z[21], 2)) - z[163]*z[36] + z[21]*(z[102]*z[70]*z[99] + z[105]*z[71] - z[110]*z[155]*z[71] + z[126]*z[155])/(z[120] + pow(z[21], 2)) + z[67]*(-z[105]*z[24] - z[108]*z[21] + z[110]*z[155]*z[24] - z[113]*z[149]*z[38])/sqrt(z[120] + pow(z[21], 2)) + z[69]*(-z[101]*z[110] - z[102]*z[114]*z[155] + z[135]*z[155] - z[21]*z[99])/sqrt(z[120] + pow(z[21], 2));
  m[75] = -z[110]*z[152]*z[40] + z[110]*z[165] - z[113]*z[153] - z[149]*z[63] + z[156]*z[81]*(-z[129] + z[136]) + z[162]*z[24] + z[163]*z[40] - z[69]*(-z[102]*z[114]*z[157] + z[135]*z[157] + z[35])/sqrt(z[120] + pow(z[21], 2));
  m[76] = 0;
  m[77] = 0;
  m[78] = 0;
  m[79] = 0;
  m[80] = 0;
  m[81] = z[110]*z[139]*z[161] + z[110]*z[22]*z[59]/(z[120] + pow(z[21], 2)) + z[139]*z[68]*(z[120]/(z[120] + pow(z[21], 2)) + z[150] - 2)/sqrt(z[120] + pow(z[21], 2)) + z[142]*(z[115]*z[128]*z[149] + z[137]*z[150] - z[137] + z[141]) + z[145]*z[152] - z[147]*z[69]*(z[105]*z[139]/(z[120] + pow(z[21], 2)) - z[134]*z[139]/(z[120] + pow(z[21], 2)) - z[21]*z[98] + z[22]*z[94]) + z[153]*z[22] - z[164]*z[21];
  m[82] = -z[102]*z[147]*z[31]/sqrt(z[120] + pow(z[21], 2)) + z[105]*z[33]/(z[120] + pow(z[21], 2)) - z[110]*z[149]*z[153]*z[30] - z[110]*(-z[102]*z[70]*z[99] - z[105]*z[71] + z[110]*z[155]*z[71] - z[126]*z[155])/(z[120] + pow(z[21], 2)) - z[120]*z[30]*z[33]/pow(z[120] + pow(z[21], 2), 2) + z[142]*(-z[100]*z[107]*z[97] + z[100]*z[115]*z[155] - z[102]*z[24]*z[99] - z[104]*z[136] - z[140]*z[155]) - z[149]*(-z[102]*z[71]*z[99] + z[105]*z[70] - z[110]*z[155]*z[70] + z[149]*z[38]*z[71]) - z[68]*(-2*z[107]*z[8] + z[110]*z[21]*z[95] + z[120]*z[155] + z[150]*z[38])/sqrt(z[120] + pow(z[21], 2)) - z[69]*(-z[101]*z[21] + z[102]*z[114]*z[94] + z[104]*z[149]*z[38] - z[105]*z[147]*z[38]/sqrt(z[120] + pow(z[21], 2)) - z[115] + z[2]*z[7])/sqrt(z[120] + pow(z[21], 2));
  m[83] = z[110]*z[156]*z[51] - z[110]*z[63]/(z[120] + pow(z[21], 2)) + z[113]*z[162] + z[142]*(-z[100]*z[115]*z[157] + z[11]*z[114] + z[120] + z[140]*z[157] + pow(z[21], 2) - pow(z[24], 2)) + z[146]*z[68]*(-2*z[117]*z[97] + z[120]*z[160] - 4*z[140] + z[150]*z[43]) - z[146]*z[69]*z[99]*(-z[105]*z[160] + 2*z[108] + z[134]*z[160] + z[24]*z[95]) + z[149]*z[153]*z[40] + z[153]*z[24] - z[165]*z[21];
  m[84] = 0;
  m[85] = 0;
  m[86] = 0;
  m[87] = 0;
  m[88] = 0;
  m[89] = z[104]*z[69] + z[21]*z[68] + z[24]*z[67];
  m[90] = -z[98]*(z[100]*z[81] - z[110]*z[68] - z[69]*z[96]);
  m[91] = z[19]*z[68] + z[22]*z[67];
  m[92] = 0;
  m[93] = 0;
  m[94] = 0;
  m[95] = 0;

  delete [] z;
}

/** Computes the n-d array of shape (12, 22)
 *
 * @param[out] a C-array of with 264 elements
 */
//  void Bicycle::gaf_dr(double m[264]) const;
void Bicycle::gaf_dr(double m[264]) const
{
  double * z = new double[45];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = pow(z[3], 2);
  z[7] = pow(z[4], 2);
  z[8] = sqrt(z[6]);
  z[9] = rear_.R/z[8] + rear_.r;
  z[10] = rear_.a*z[1] - rear_.b*z[4];
  z[11] = z[0]*z[5] + z[1]*z[2]*z[3];
  z[12] = z[0]*z[1]*z[5] + z[2]*z[3];
  z[13] = z[0]*z[2] - z[1]*z[3]*z[5];
  z[14] = z[0]*z[1]*z[2] - z[3]*z[5];
  z[15] = front_.a*z[3]*z[4] - front_.b*z[13];
  z[16] = sqrt(pow(z[14], 2) + pow(z[2], 2)*z[7]);
  z[17] = front_.r*z[0]*z[2]*z[7] + front_.r*z[1]*z[14];
  z[18] = -front_.R*z[3]*z[4]/sqrt(pow(z[13], 2) + z[6]*z[7]) + front_.b;
  z[19] = front_.R*z[2]*z[3]*z[7]/sqrt(pow(z[13], 2) + z[6]*z[7]) - front_.b*z[2]*z[4];
  z[20] = front_.R*z[13]/sqrt(pow(z[13], 2) + z[6]*z[7]) - front_.a;
  z[21] = front_.R*z[13]*z[5]/sqrt(pow(z[13], 2) + z[6]*z[7]) - front_.a*z[5];
  z[22] = front_.R*z[1]*z[13]/sqrt(pow(z[13], 2) + z[6]*z[7]) - front_.R*z[3]*z[5]*z[7]/sqrt(pow(z[13], 2) + z[6]*z[7]) - front_.a*z[1] + front_.b*z[4]*z[5];
  z[23] = -front_.a;
  z[24] = -front_.b;
  z[25] = -rear_.b;
  z[26] = -front_.r;
  z[27] = rear_.r*z[0];
  z[28] = -z[1];
  z[29] = -z[2];
  z[30] = -z[5];
  z[31] = -z[29]*z[4];
  z[32] = z[3]*z[4];
  z[33] = z[28]*z[3];
  z[34] = rear_.R/z[8];
  z[35] = z[0]/z[8];
  z[36] = z[3]*(rear_.a*z[4] + rear_.b*z[1]);
  z[37] = -z[12]*z[26];
  z[38] = -z[14]*z[26];
  z[39] = -z[32]*z[9];
  z[40] = front_.R/sqrt(pow(z[13], 2) + z[6]*z[7]);
  z[41] = z[4]/z[16];
  z[42] = -z[32]*z[40];
  z[43] = z[13]*z[40];
  z[44] = z[11]*z[20];

  m[0] = 0;
  m[1] = z[33];
  m[2] = z[0];
  m[3] = z[32];
  m[4] = 0;
  m[5] = 0;
  m[6] = 0;
  m[7] = z[0]*(-z[25] - z[32]*z[34]);
  m[8] = z[36];
  m[9] = z[0]*(-rear_.a + z[33]*z[34]);
  m[10] = -z[11];
  m[11] = z[13];
  m[12] = z[11];
  m[13] = z[32];
  m[14] = 0;
  m[15] = 0;
  m[16] = 0;
  m[17] = z[11]*z[18];
  m[18] = z[15];
  m[19] = z[44];
  m[20] = 0;
  m[21] = front_.m*(z[11]*z[15] - z[13]*(z[11]*z[24] - z[11]*z[42]) + z[32]*(z[11]*z[23] + z[11]*z[43])) + rear_.m*(z[0]*(rear_.a*z[3]*z[4] - z[1]*z[25]*z[3]) - z[32]*(rear_.a*z[0] - z[0]*z[33]*z[34]) - z[33]*(z[0]*z[25] + z[0]*z[32]*z[34]));
  m[22] = 0;
  m[23] = z[4];
  m[24] = 0;
  m[25] = z[1];
  m[26] = 0;
  m[27] = 0;
  m[28] = 0;
  m[29] = -z[27]*z[28];
  m[30] = z[10] + z[3]*z[9];
  m[31] = -z[27]*z[4];
  m[32] = z[31];
  m[33] = -z[30]*z[4];
  m[34] = -z[31];
  m[35] = z[1];
  m[36] = 0;
  m[37] = 0;
  m[38] = 0;
  m[39] = z[19] + z[37];
  m[40] = -z[22] - z[38];
  m[41] = z[4]*(z[0]*z[26] + z[23]*z[29] + z[29]*z[43]);
  m[42] = 0;
  m[43] = front_.m*(-z[11]*z[22] + z[13]*z[19] - z[32]*(z[23]*z[31] + z[31]*z[43])) + rear_.m*z[0]*(z[10] + z[28]*z[33]*z[34] + z[3]*z[34]*z[7]);
  m[44] = 0;
  m[45] = 0;
  m[46] = 1;
  m[47] = 0;
  m[48] = 0;
  m[49] = 0;
  m[50] = 0;
  m[51] = rear_.b + z[39];
  m[52] = 0;
  m[53] = -rear_.a + z[33]*z[9];
  m[54] = z[30];
  m[55] = z[2];
  m[56] = z[5];
  m[57] = 0;
  m[58] = 0;
  m[59] = 0;
  m[60] = 0;
  m[61] = -z[30]*(z[18] + z[26]*z[32]);
  m[62] = -z[29]*(-z[18] - z[26]*z[32]);
  m[63] = z[21] - z[26]*z[33];
  m[64] = 0;
  m[65] = front_.m*(z[11]*(-z[24]*z[29] - z[29]*z[3]*z[4]*z[40]) - z[13]*(-z[24]*z[30] + z[30]*z[42]) + z[21]*z[32]) - rear_.m*z[36];
  m[66] = 0;
  m[67] = 0;
  m[68] = 0;
  m[69] = 0;
  m[70] = 0;
  m[71] = 0;
  m[72] = 0;
  m[73] = 0;
  m[74] = 0;
  m[75] = 0;
  m[76] = 0;
  m[77] = 0;
  m[78] = 0;
  m[79] = 1;
  m[80] = 0;
  m[81] = 0;
  m[82] = 0;
  m[83] = -z[26]*(-z[0]*z[30]*z[7] - z[12]*z[28]);
  m[84] = -z[17] - z[20];
  m[85] = 0;
  m[86] = 1;
  m[87] = -front_.m*z[44];
  m[88] = 1;
  m[89] = 0;
  m[90] = 0;
  m[91] = 0;
  m[92] = 0;
  m[93] = 0;
  m[94] = 0;
  m[95] = z[39];
  m[96] = 0;
  m[97] = z[33]*z[9];
  m[98] = 0;
  m[99] = 0;
  m[100] = 0;
  m[101] = 0;
  m[102] = 0;
  m[103] = 0;
  m[104] = 0;
  m[105] = 0;
  m[106] = 0;
  m[107] = 0;
  m[108] = 0;
  m[109] = 0;
  m[110] = 0;
  m[111] = 0;
  m[112] = 0;
  m[113] = 0;
  m[114] = 0;
  m[115] = 0;
  m[116] = 0;
  m[117] = 0;
  m[118] = 0;
  m[119] = 0;
  m[120] = 1;
  m[121] = 0;
  m[122] = 0;
  m[123] = 0;
  m[124] = 0;
  m[125] = 0;
  m[126] = 0;
  m[127] = -z[4]*(-z[29]*z[37] + z[3]*z[40] + z[30]*z[38]);
  m[128] = 0;
  m[129] = z[17] + z[43];
  m[130] = 0;
  m[131] = 0;
  m[132] = 0;
  m[133] = 0;
  m[134] = 0;
  m[135] = 0;
  m[136] = 1;
  m[137] = 0;
  m[138] = 0;
  m[139] = z[32]/z[8];
  m[140] = 0;
  m[141] = -z[33]/z[8];
  m[142] = 0;
  m[143] = 0;
  m[144] = 0;
  m[145] = 0;
  m[146] = 0;
  m[147] = 0;
  m[148] = 0;
  m[149] = 0;
  m[150] = 0;
  m[151] = 0;
  m[152] = 0;
  m[153] = 0;
  m[154] = 0;
  m[155] = 0;
  m[156] = 0;
  m[157] = 0;
  m[158] = 0;
  m[159] = 1;
  m[160] = 0;
  m[161] = -z[33]*z[35];
  m[162] = z[8];
  m[163] = -z[32]*z[35];
  m[164] = 0;
  m[165] = 0;
  m[166] = 0;
  m[167] = 0;
  m[168] = 0;
  m[169] = 0;
  m[170] = 0;
  m[171] = 0;
  m[172] = 0;
  m[173] = 0;
  m[174] = 0;
  m[175] = 0;
  m[176] = 0;
  m[177] = 0;
  m[178] = 0;
  m[179] = 0;
  m[180] = 0;
  m[181] = 0;
  m[182] = 1;
  m[183] = z[33];
  m[184] = z[0];
  m[185] = z[32];
  m[186] = 0;
  m[187] = 0;
  m[188] = 0;
  m[189] = 0;
  m[190] = 0;
  m[191] = 0;
  m[192] = 0;
  m[193] = 0;
  m[194] = 0;
  m[195] = 0;
  m[196] = 0;
  m[197] = rear_.m;
  m[198] = 0;
  m[199] = 0;
  m[200] = 0;
  m[201] = 0;
  m[202] = 0;
  m[203] = 0;
  m[204] = 0;
  m[205] = 0;
  m[206] = 0;
  m[207] = 0;
  m[208] = 0;
  m[209] = 0;
  m[210] = 0;
  m[211] = 0;
  m[212] = 1;
  m[213] = 0;
  m[214] = 0;
  m[215] = -z[41]*(z[12]*z[29] - z[14]*z[30]);
  m[216] = 0;
  m[217] = -(-z[0]*z[29]*z[7] - z[14]*z[28])/z[16];
  m[218] = 0;
  m[219] = 0;
  m[220] = 0;
  m[221] = 0;
  m[222] = 0;
  m[223] = 0;
  m[224] = 0;
  m[225] = 0;
  m[226] = 0;
  m[227] = 0;
  m[228] = 0;
  m[229] = 0;
  m[230] = 0;
  m[231] = 0;
  m[232] = 0;
  m[233] = 0;
  m[234] = 0;
  m[235] = 1;
  m[236] = 0;
  m[237] = -(z[12]*z[14] + z[29]*z[30]*z[7])/z[16];
  m[238] = z[16];
  m[239] = z[41]*(z[0]*z[14] - z[28]*z[29]);
  m[240] = 0;
  m[241] = 0;
  m[242] = 0;
  m[243] = 0;
  m[244] = 0;
  m[245] = 0;
  m[246] = 0;
  m[247] = 0;
  m[248] = 0;
  m[249] = 0;
  m[250] = 0;
  m[251] = 0;
  m[252] = 0;
  m[253] = 0;
  m[254] = 0;
  m[255] = 0;
  m[256] = 0;
  m[257] = 0;
  m[258] = 1;
  m[259] = z[13];
  m[260] = z[11];
  m[261] = z[32];
  m[262] = 0;
  m[263] = front_.m;

  delete [] z;
}

/** Computes the n-d array of shape (12, 30)
 *
 * @param[out] a C-array of with 360 elements
 */
//  void Bicycle::gaf_dqdr(double m[360]) const;
void Bicycle::gaf_dqdr(double m[360]) const
{
  double * z = new double[173];

  z[0] = sin(state_[1]);
  z[1] = sin(state_[2]);
  z[2] = sin(state_[3]);
  z[3] = cos(state_[1]);
  z[4] = cos(state_[2]);
  z[5] = cos(state_[3]);
  z[6] = front_.Tz + steer_torque_;
  z[7] = pow(z[1], 2);
  z[8] = pow(z[2], 2);
  z[9] = pow(z[3], 2);
  z[10] = pow(z[4], 2);
  z[11] = front_.Tw - front_.Ty;
  z[12] = rear_.Tz - steer_torque_;
  z[13] = sqrt(z[9]);
  z[14] = rear_.a*z[4] + rear_.b*z[1];
  z[15] = rear_.a*z[1] - rear_.b*z[4];
  z[16] = -rear_.R/z[13] - rear_.r;
  z[17] = z[0]*z[5] + z[1]*z[2]*z[3];
  z[18] = rear_.a*z[3]*z[4] + rear_.b*z[1]*z[3];
  z[19] = -z[0]*z[2] + z[1]*z[3]*z[5];
  z[20] = -z[19];
  z[21] = -z[0]*z[1]*z[2] + z[3]*z[5];
  z[22] = -z[21];
  z[23] = -z[17];
  z[24] = 2*z[0]*z[5] + 2*z[1]*z[2]*z[3];
  z[25] = -z[0]*z[1]*z[5] - z[2]*z[3];
  z[26] = 2*z[0]*z[1]*z[5] + 2*z[2]*z[3];
  z[27] = rear_.R*z[0]*z[1]*z[3]/z[13] + rear_.a*z[0];
  z[28] = rear_.R*z[0]*z[3]*z[4]/z[13] - rear_.b*z[0];
  z[29] = front_.a*z[0]*z[4] - front_.b*z[25];
  z[30] = z[1]*z[3] + z[20]*z[5];
  z[31] = z[0]*z[22] - z[1]*z[2];
  z[32] = front_.Gx*z[2]*z[4] - front_.Gy*z[22];
  z[33] = front_.a*z[3]*z[4] - front_.b*z[20];
  z[34] = -front_.Gx*z[22] - front_.Gy*z[2]*z[4];
  z[35] = -z[1]*z[23] + z[10]*z[2]*z[3];
  z[36] = z[0]*z[10]*z[2] + z[1]*z[22];
  z[37] = -z[0]*z[10]*z[5] + z[1]*z[25];
  z[38] = front_.r*z[0]*z[10]*z[2] + front_.r*z[1]*z[22];
  z[39] = -z[2]*z[31]*z[4];
  z[40] = z[1]*z[4]*z[9] + z[20]*z[3]*z[4]*z[5];
  z[41] = -z[0]*z[2]*z[22]*z[4] + z[1]*z[4]*z[8];
  z[42] = z[2]*z[20] - z[23]*z[5];
  z[43] = z[2]*z[25] + z[22]*z[5];
  z[44] = z[10]*z[2]*z[5] - z[22]*z[25];
  z[45] = front_.R*z[3]*z[4]/sqrt(z[10]*z[9] + pow(z[20], 2)) - front_.b;
  z[46] = rear_.R*z[10]*z[3]/z[13] + rear_.R*z[3]*z[7]/z[13] + z[15];
  z[47] = -z[0]*z[10]*z[3] - z[20]*z[25];
  z[48] = -2*z[0]*z[10]*z[3] + z[20]*z[26];
  z[49] = 2*z[10]*z[2]*z[5] + z[22]*z[26];
  z[50] = -z[0]*z[10]*z[3] + z[20]*z[26]/2;
  z[51] = front_.R*z[2]*z[3]*z[4]/sqrt(z[10]*z[9] + pow(z[20], 2)) - front_.b*z[2];
  z[52] = front_.R*z[3]*z[4]*z[5]/sqrt(z[10]*z[9] + pow(z[20], 2)) - front_.b*z[5];
  z[53] = front_.R*z[10]*z[2]*z[3]/sqrt(z[10]*z[9] + pow(z[20], 2)) - front_.b*z[2]*z[4];
  z[54] = -front_.R*z[10]*z[3]*z[5]/sqrt(z[10]*z[9] + pow(z[20], 2)) + front_.b*z[4]*z[5];
  z[55] = pow(z[20], 2)/(z[10]*z[9] + pow(z[20], 2)) - 1;
  z[56] = front_.R*z[20]/sqrt(z[10]*z[9] + pow(z[20], 2)) - front_.a;
  z[57] = front_.R*z[1]*z[20]/sqrt(z[10]*z[9] + pow(z[20], 2)) - front_.a*z[1];
  z[58] = front_.R*z[20]*z[5]/sqrt(z[10]*z[9] + pow(z[20], 2)) - front_.a*z[5];
  z[59] = z[34]/sqrt(z[10]*z[8] + pow(z[22], 2));
  z[60] = front_.R*z[2]*z[20]*z[4]/sqrt(z[10]*z[9] + pow(z[20], 2)) - front_.a*z[2]*z[4];
  z[61] = -front_.R*z[23]*z[3]*z[4]/sqrt(z[10]*z[9] + pow(z[20], 2)) + front_.b*z[23];
  z[62] = -z[1] + z[4]*z[40]/(z[10]*z[9] + pow(z[20], 2));
  z[63] = -front_.R*z[20]*z[23]/sqrt(z[10]*z[9] + pow(z[20], 2)) + front_.a*z[23];
  z[64] = z[20]*z[40]/(z[10]*z[9] + pow(z[20], 2)) - z[3]*z[4]*z[5];
  z[65] = z[20]*z[47]/(z[10]*z[9] + pow(z[20], 2)) + z[25];
  z[66] = z[54] + z[57];
  z[67] = front_.Gx*pow(z[22], 2)/(z[10]*z[8] + pow(z[22], 2)) - front_.Gx + front_.Gy*z[2]*z[22]*z[4]/(z[10]*z[8] + pow(z[22], 2));
  z[68] = front_.Fx*front_.r*z[0]*z[4]*z[5] - rear_.Fx*rear_.R*z[0]*z[4]/z[13] - rear_.Fx*z[0]*z[16]*z[4] - front_.Fy*front_.r*z[0]*z[2]*z[4] + front_.Fz*front_.r*z[0]*z[1] - rear_.Fz*rear_.R*z[0]*z[1]/z[13] - rear_.Fz*z[0]*z[1]*z[16] + g_*rear_.m*z[0]*z[14];
  z[69] = -front_.R*z[2]*z[20]*z[23]*z[3]*z[4]/pow(z[10]*z[9] + pow(z[20], 2), 3.0/2.0) - z[52];
  z[70] = -front_.R*z[0]*z[23]*z[4]/sqrt(z[10]*z[9] + pow(z[20], 2)) + front_.R*z[22]*z[3]*z[4]/sqrt(z[10]*z[9] + pow(z[20], 2)) - front_.b*z[22];
  z[71] = front_.Gx*z[22]*z[44]/(z[10]*z[8] + pow(z[22], 2)) + front_.Gx*z[25] + front_.Gy*z[2]*z[4]*z[44]/(z[10]*z[8] + pow(z[22], 2)) - front_.Gy*z[4]*z[5];
  z[72] = front_.R*z[2]*z[20]*z[3]*z[4]/sqrt(z[10]*z[9] + pow(z[20], 2)) - front_.R*z[20]*z[23]*z[40]/pow(z[10]*z[9] + pow(z[20], 2), 3.0/2.0) + front_.R*z[23]*z[3]*z[4]*z[5]/sqrt(z[10]*z[9] + pow(z[20], 2)) - front_.a*z[2]*z[3]*z[4];
  z[73] = front_.R*z[1]*pow(z[20], 2)*z[23]/pow(z[10]*z[9] + pow(z[20], 2), 3.0/2.0) - front_.R*z[1]*z[23]/sqrt(z[10]*z[9] + pow(z[20], 2)) - front_.R*z[10]*z[20]*z[23]*z[3]*z[5]/pow(z[10]*z[9] + pow(z[20], 2), 3.0/2.0) + z[53];
  z[74] = front_.R*z[1]*z[20]*z[40]/pow(z[10]*z[9] + pow(z[20], 2), 3.0/2.0) + front_.R*z[1]*z[3]*z[4]*z[5]/sqrt(z[10]*z[9] + pow(z[20], 2)) - front_.R*z[10]*z[3]*z[40]*z[5]/pow(z[10]*z[9] + pow(z[20], 2), 3.0/2.0) + front_.R*z[20]*z[4]/sqrt(z[10]*z[9] + pow(z[20], 2)) - front_.a*z[4] - front_.b*z[1]*z[5];
  z[75] = -front_.Fx;
  z[76] = -front_.Fy;
  z[77] = -front_.Fz;
  z[78] = -front_.Gx;
  z[79] = -front_.Gy;
  z[80] = -front_.a;
  z[81] = -front_.b;
  z[82] = -rear_.b;
  z[83] = -front_.r;
  z[84] = z[75]*z[83];
  z[85] = z[76]*z[83];
  z[86] = z[77]*z[83];
  z[87] = g_*front_.m;
  z[88] = g_*rear_.m;
  z[89] = -z[3]*z[75];
  z[90] = -z[4]*z[75];
  z[91] = rear_.Fx*z[1];
  z[92] = rear_.Fx*z[4];
  z[93] = rear_.Fy*z[3];
  z[94] = -z[5]*z[77];
  z[95] = rear_.Fz*z[1];
  z[96] = rear_.Fz*z[4];
  z[97] = -z[4]*z[79];
  z[98] = front_.Tx*z[5];
  z[99] = -z[1]*z[81];
  z[100] = -z[5]*z[81];
  z[101] = -z[0];
  z[102] = -2*z[101];
  z[103] = -z[1];
  z[104] = 2*z[2];
  z[105] = -z[3];
  z[106] = -z[4];
  z[107] = -z[5];
  z[108] = z[1]*z[80];
  z[109] = z[101]*z[103];
  z[110] = -z[101]*z[2];
  z[111] = z[101]*z[106];
  z[112] = -z[103]*z[2];
  z[113] = z[103]*z[106];
  z[114] = z[103]*z[107];
  z[115] = -z[105]*z[2];
  z[116] = -z[106]*z[2];
  z[117] = z[105]*z[106];
  z[118] = z[105]*z[107];
  z[119] = z[106]*z[107];
  z[120] = -z[103]*z[105];
  z[121] = -pow(z[5], 2);
  z[122] = z[10]*z[2];
  z[123] = -z[10]*z[107];
  z[124] = rear_.R/z[13];
  z[125] = -z[105]/z[13];
  z[126] = z[10]*z[8];
  z[127] = z[10]*z[9];
  z[128] = z[10]*z[115];
  z[129] = rear_.Fy*z[14];
  z[130] = z[105]*z[16];
  z[131] = z[23]*z[76];
  z[132] = z[25]*z[83];
  z[133] = -z[22]*z[78];
  z[134] = z[103]*z[23];
  z[135] = z[107]*z[23];
  z[136] = z[117]*z[16];
  z[137] = -z[103]*z[20];
  z[138] = z[2]*z[20];
  z[139] = -z[106]*z[20];
  z[140] = -z[107]*z[20];
  z[141] = -z[101]*z[22];
  z[142] = -z[103]*z[22];
  z[143] = z[23]*z[25];
  z[144] = -z[20]*z[23];
  z[145] = -z[22]*z[23];
  z[146] = -z[22]*z[25];
  z[147] = z[20]*z[22];
  z[148] = -z[75]/sqrt(z[126] + pow(z[22], 2));
  z[149] = front_.R/pow(z[127] + pow(z[20], 2), 3.0/2.0);
  z[150] = front_.R/sqrt(z[127] + pow(z[20], 2));
  z[151] = z[145]*z[22];
  z[152] = 1/(2*sqrt(z[126] + pow(z[22], 2)));
  z[153] = z[2]/(z[126] + pow(z[22], 2));
  z[154] = -z[106]/sqrt(z[126] + pow(z[22], 2));
  z[155] = -z[106]*z[40];
  z[156] = -z[117]*z[150];
  z[157] = z[22]/(z[126] + pow(z[22], 2));
  z[158] = z[150]*z[20];
  z[159] = z[157]*z[22];
  z[160] = z[32]/pow(z[126] + pow(z[22], 2), 2);
  z[161] = z[32]/(z[126] + pow(z[22], 2));
  z[162] = z[41]/(z[126] + pow(z[22], 2));
  z[163] = z[44]/pow(z[126] + pow(z[22], 2), 3.0/2.0);
  z[164] = z[44]/(z[126] + pow(z[22], 2));
  z[165] = z[47]/(z[127] + pow(z[20], 2));
  z[166] = z[48]/(z[127] + pow(z[20], 2));
  z[167] = z[49]/(z[126] + pow(z[22], 2));
  z[168] = z[59]/pow(z[126] + pow(z[22], 2), 3.0/2.0);
  z[169] = z[59]/sqrt(z[126] + pow(z[22], 2));
  z[170] = z[157]*z[169];
  z[171] = z[23]*(front_.Gx*z[2]*z[22]*z[4]/(z[10]*z[8] + pow(z[22], 2)) - front_.Gy*pow(z[22], 2)/(z[10]*z[8] + pow(z[22], 2)) + front_.Gy)/(sqrt(z[126] + pow(z[22], 2))*sqrt(z[10]*z[8] + pow(z[22], 2)));
  z[172] = -(front_.Gx*z[2]*z[4]*z[49]/(z[10]*z[8] + pow(z[22], 2)) - 2*front_.Gx*z[4]*z[5] - front_.Gy*z[22]*z[49]/(z[10]*z[8] + pow(z[22], 2)) - 2*front_.Gy*z[25])/(2*sqrt(z[126] + pow(z[22], 2))*sqrt(z[10]*z[8] + pow(z[22], 2)));

  m[0] = 0;
  m[1] = rear_.Fx*z[105]*(z[117]*z[124] + z[82]) + rear_.Fz*z[105]*(rear_.a - z[120]*z[124]) - rear_.Tw*z[105] - front_.Tx*z[25] + rear_.Tx*z[109] + z[101]*z[129] + z[105]*(rear_.Tw - rear_.Ty) + z[11]*z[22] - z[111]*z[12] - z[111]*z[6] + z[29]*z[76] - z[75]*(-z[117]*z[149]*z[23]*z[47] + z[70]) - z[77]*(z[143]*z[150] - z[144]*z[149]*z[48]/2 - z[147]*z[150] - z[22]*z[80]) + z[87]*(-z[111]*z[63] + z[117]*(z[143]*z[150] - z[144]*z[149]*z[50] - z[147]*z[150] - z[22]*z[80]) + z[20]*(-z[117]*z[149]*z[23]*z[50] + z[70]) - z[22]*z[33] + z[23]*z[29] + z[25]*z[61]) + z[88]*(z[101]*(-rear_.a*z[0]*z[106] + z[1]*z[101]*z[82]) - z[105]*z[18] - z[109]*z[28] + z[111]*z[27] - z[117]*(-rear_.R*z[103]*z[13] + rear_.a*z[3]) - z[120]*(-rear_.R*z[106]*z[13] - z[105]*z[82]));
  m[2] = -rear_.Tx*z[117] + z[101]*z[105]*z[124]*z[91] - z[101]*z[105]*z[124]*z[96] - z[105]*z[76]*(z[100]*z[106] - z[108]) + z[106]*z[11]*z[115] - z[117]*z[98] + z[12]*z[120] + z[120]*z[6] - z[15]*z[93] - z[72]*z[77] + z[87]*(-z[106]*z[115]*z[33] - z[107]*z[117]*z[61] + z[117]*z[72] + z[120]*z[63] - z[20]*(-z[117]*z[149]*z[23]*z[40] + z[117]*z[2]*z[81] - z[120]*z[150]*z[23] + z[122]*z[150]*z[9]) + z[23]*(-z[100]*z[117] + z[105]*z[108])) + z[88]*(rear_.R*z[10]*z[101]*z[13] + rear_.R*z[101]*z[13]*z[7] + z[101]*(-rear_.a*z[1]*z[105] + z[105]*z[106]*z[82]) + z[117]*z[28] - z[120]*z[27]) - z[89]*(-z[134]*z[150] - z[149]*z[155]*z[23] + z[53]);
  m[3] = -front_.Tx*z[23] + z[11]*z[20] + z[131]*z[81] - z[20]*z[75]*(z[117]*z[149]*pow(z[23], 2) + z[45]) - z[77]*(-pow(z[144], 2)*z[149] + z[150]*pow(z[23], 2) - z[158]*z[20] - z[20]*z[80]) + z[87]*(z[117]*(-z[144]*z[149]*z[20]*z[24] + 2*z[150]*pow(z[23], 2) - 2*z[158]*z[20] - 2*z[20]*z[80])/2 - z[20]*z[33] + z[20]*(z[117]*z[144]*z[149]*z[24] - 2*z[156]*z[20] + 2*z[20]*z[81])/2 + pow(z[23], 2)*z[81] + z[23]*z[61]);
  m[4] = 0;
  m[5] = 0;
  m[6] = 0;
  m[7] = 0;
  m[8] = 0;
  m[9] = z[120];
  m[10] = z[0];
  m[11] = z[117];
  m[12] = 0;
  m[13] = 0;
  m[14] = 0;
  m[15] = -z[101]*(-z[117]*z[124] - z[82]);
  m[16] = -z[105]*z[14];
  m[17] = -z[101]*(-rear_.a + z[120]*z[124]);
  m[18] = z[23];
  m[19] = z[20];
  m[20] = z[17];
  m[21] = z[117];
  m[22] = 0;
  m[23] = 0;
  m[24] = 0;
  m[25] = z[23]*z[45];
  m[26] = z[33];
  m[27] = -z[23]*z[56];
  m[28] = 0;
  m[29] = front_.m*(z[117]*z[63] - z[20]*z[61] - z[23]*z[33]) + rear_.m*(-z[101]*z[18] - z[117]*z[27] - z[120]*z[28]);
  m[30] = 0;
  m[31] = -rear_.Fy*z[101]*z[124] - rear_.Fy*z[101]*z[16] + z[105]*z[124]*z[91] - z[105]*z[124]*z[96] - z[105]*z[46]*z[88] - z[116]*z[150]*z[65]*z[77] - z[117]*z[86] - z[122]*z[150]*z[75]*(z[101] + z[105]*z[165]) + z[130]*z[91] - z[130]*z[96] - z[150]*z[76]*(-z[10]*z[118]*z[165] + z[137]*z[165] + z[37]) - z[20]*z[84] + z[23]*z[85] + z[87]*(z[111]*z[60] + z[117]*(z[116]*z[149]*z[20]*z[47] + z[116]*z[150]*z[25]) + z[20]*(-z[10]*z[110]*z[150] - z[128]*z[149]*z[47]) + z[22]*z[66] - z[23]*(-z[10]*z[101]*z[107]*z[150] - z[10]*z[118]*z[149]*z[47] - z[103]*z[150]*z[25] + z[137]*z[149]*z[47]) - z[25]*z[53]);
  m[32] = rear_.Tx*z[103] + z[103]*z[98] - z[106]*z[12] - z[106]*z[6] - z[11]*z[112] + z[129] - z[2]*z[75]*(-z[10]*z[105]*z[149]*z[40] - 2*z[106]*z[120]*z[150] + z[99]) + z[2]*z[77]*(-z[10]*z[118]*z[150] + z[139]*z[149]*z[40] - z[57]) + z[68] + z[74]*z[76] + z[87]*(z[106]*z[115]*z[66] + z[107]*z[117]*z[53] - z[117]*(-z[108]*z[2] - z[112]*z[158] - z[115]*z[123]*z[150] + z[116]*z[149]*z[20]*z[40]) - z[120]*z[60] + z[20]*(-z[104]*z[106]*z[120]*z[150] + z[128]*z[149]*z[40] + z[2]*z[99]) + z[23]*z[74]);
  m[33] = -front_.Tx*z[116] + z[106]*z[77]*(z[138]*z[144]*z[149] + z[150]*z[2]*z[23] - z[58]) + z[11]*z[119] - z[22]*z[84] + z[25]*z[85] - z[69]*z[90] + z[73]*z[76] + z[87]*(z[117]*(z[106]*z[5]*z[80] + z[116]*z[144]*z[149]*z[20] + z[116]*z[150]*z[23] - z[119]*z[158]) + z[20]*z[66] - z[20]*(z[128]*z[144]*z[149] + z[54]) - z[23]*z[53] + z[23]*z[73]);
  m[34] = 0;
  m[35] = 0;
  m[36] = 0;
  m[37] = 0;
  m[38] = 0;
  m[39] = z[4];
  m[40] = 0;
  m[41] = z[1];
  m[42] = 0;
  m[43] = 0;
  m[44] = 0;
  m[45] = rear_.r*z[109];
  m[46] = z[130] + z[15];
  m[47] = -rear_.r*z[111];
  m[48] = z[116];
  m[49] = z[119];
  m[50] = -z[116];
  m[51] = z[1];
  m[52] = 0;
  m[53] = 0;
  m[54] = 0;
  m[55] = z[132] + z[53];
  m[56] = z[22]*z[83] - z[66];
  m[57] = -z[106]*(-z[101]*z[83] - z[138]*z[150] - z[2]*z[80]);
  m[58] = 0;
  m[59] = front_.m*(-z[117]*z[60] + z[20]*z[53] + z[23]*z[66]) - rear_.m*z[101]*z[46];
  m[60] = 0;
  m[61] = -z[107]*z[150]*z[77]*(z[166]*z[20] - z[26])/2 - z[107]*z[150]*z[90]*(-z[101] - z[105]*z[165]) + z[116]*z[150]*z[76]*(z[102] - z[105]*z[166])/2 + z[68] + z[87]*(-z[111]*z[58] + z[117]*(z[107]*z[150]*z[25] - z[140]*z[149]*z[50]) + z[20]*(-z[107]*z[111]*z[150] - z[107]*z[117]*z[149]*z[50]) - z[22]*z[51] - z[23]*(z[106]*z[110]*z[150] + z[106]*z[115]*z[149]*z[50]) + z[25]*z[52]);
  m[62] = z[105]*z[112]*z[85] - z[105]*z[15]*z[88] + z[107]*z[120]*z[84] + z[107]*z[150]*z[62]*z[89] - z[115]*z[150]*z[62]*z[76] - z[117]*z[86] + z[130]*z[91] - z[130]*z[96] + z[150]*z[64]*z[94] + z[87]*(-z[106]*z[115]*z[51] - z[107]*z[117]*z[52] + z[117]*(-z[121]*z[156] + z[140]*z[149]*z[40]) + z[120]*z[58] - z[20]*(-z[107]*z[117]*z[149]*z[40] - z[107]*z[120]*z[150]) - z[23]*(z[105]*z[112]*z[150] + z[115]*z[149]*z[155]));
  m[63] = -z[106]*z[115]*z[84] - z[107]*z[117]*z[85] + z[11]*z[2] + z[69]*z[76] - z[75]*(z[117]*z[135]*z[149]*z[20] + z[51]) + z[77]*(z[135]*z[149]*pow(z[20], 2) - z[135]*z[150] + z[138]*z[150] + z[2]*z[80]) + z[87]*(-z[117]*(z[104]*z[158] + z[104]*z[80] - 2*z[135]*z[150] + z[140]*z[149]*z[20]*z[24])/2 - z[20]*z[51] + z[20]*(-z[104]*z[156] + z[104]*z[81] + z[117]*z[140]*z[149]*z[24])/2 + z[23]*z[52] + z[23]*(2*z[100] - 2*z[107]*z[156] + z[115]*z[139]*z[149]*z[24])/2) + z[98];
  m[64] = 0;
  m[65] = 0;
  m[66] = 0;
  m[67] = 0;
  m[68] = 0;
  m[69] = 0;
  m[70] = 1;
  m[71] = 0;
  m[72] = 0;
  m[73] = 0;
  m[74] = 0;
  m[75] = rear_.b + z[136];
  m[76] = 0;
  m[77] = -rear_.a - z[120]*z[16];
  m[78] = z[107];
  m[79] = z[2];
  m[80] = z[5];
  m[81] = 0;
  m[82] = 0;
  m[83] = 0;
  m[84] = 0;
  m[85] = -z[107]*(z[117]*z[83] - z[45]);
  m[86] = z[2]*(-z[117]*z[83] + z[45]);
  m[87] = -z[120]*z[83] + z[58];
  m[88] = 0;
  m[89] = front_.m*(z[117]*z[58] - z[20]*z[52] - z[23]*z[51]) + rear_.m*z[105]*z[14];
  m[90] = 0;
  m[91] = -z[150]*z[23]*z[65]*z[87] - z[150]*z[65]*z[76] + z[22]*z[56]*z[87] - z[35]*z[76]*z[83] - z[75]*z[83]*(-z[10]*z[118] + z[137]);
  m[92] = z[106]*z[115]*z[56]*z[87] - z[106]*z[115]*z[84] - z[107]*z[117]*z[85] + z[150]*z[23]*z[64]*z[87] + z[150]*z[64]*z[76];
  m[93] = z[131]*z[150]*z[55] + z[150]*pow(z[23], 2)*z[55]*z[87] + z[20]*z[56]*z[87] - z[36]*z[75]*z[83] + z[37]*z[85];
  m[94] = 0;
  m[95] = 0;
  m[96] = 0;
  m[97] = 0;
  m[98] = 0;
  m[99] = 0;
  m[100] = 0;
  m[101] = 0;
  m[102] = 0;
  m[103] = 0;
  m[104] = 0;
  m[105] = 0;
  m[106] = 0;
  m[107] = 0;
  m[108] = 0;
  m[109] = 0;
  m[110] = 0;
  m[111] = 1;
  m[112] = 0;
  m[113] = 0;
  m[114] = 0;
  m[115] = z[37]*z[83];
  m[116] = -z[38] - z[56];
  m[117] = 0;
  m[118] = 1;
  m[119] = front_.m*z[23]*z[56];
  m[120] = 0;
  m[121] = z[101]*(z[124]*z[92] + z[124]*z[95] + z[16]*z[92] + z[16]*z[95]);
  m[122] = z[130]*(z[91] - z[96]);
  m[123] = 0;
  m[124] = 0;
  m[125] = 0;
  m[126] = 0;
  m[127] = 0;
  m[128] = 1;
  m[129] = 0;
  m[130] = 0;
  m[131] = 0;
  m[132] = 0;
  m[133] = 0;
  m[134] = 0;
  m[135] = z[136];
  m[136] = 0;
  m[137] = -z[120]*z[16];
  m[138] = 0;
  m[139] = 0;
  m[140] = 0;
  m[141] = 0;
  m[142] = 0;
  m[143] = 0;
  m[144] = 0;
  m[145] = 0;
  m[146] = 0;
  m[147] = 0;
  m[148] = 0;
  m[149] = 0;
  m[150] = 0;
  m[151] = -z[101]*z[150]*z[90] - z[106]*z[149]*z[47]*z[89] - z[106]*z[42]*z[84] + z[149]*z[20]*z[47]*z[77] + z[150]*z[25]*z[77] + z[35]*z[86];
  m[152] = -z[103]*z[150]*z[89] + z[103]*z[43]*z[84] + z[107]*z[117]*z[86] - z[117]*z[149]*z[20]*z[30]*z[77] + z[127]*z[149]*z[30]*z[75] + z[156]*z[94];
  m[153] = -z[139]*z[149]*z[23]*z[89] + z[144]*z[149]*z[20]*z[77] + z[150]*z[23]*z[77] - z[37]*z[86];
  m[154] = 0;
  m[155] = 0;
  m[156] = 0;
  m[157] = 0;
  m[158] = 0;
  m[159] = 0;
  m[160] = 0;
  m[161] = 0;
  m[162] = 0;
  m[163] = 0;
  m[164] = 0;
  m[165] = 0;
  m[166] = 0;
  m[167] = 0;
  m[168] = 1;
  m[169] = 0;
  m[170] = 0;
  m[171] = 0;
  m[172] = 0;
  m[173] = 0;
  m[174] = 0;
  m[175] = z[106]*(-z[105]*z[150] + z[132]*z[2] + z[22]*z[5]*z[83]);
  m[176] = 0;
  m[177] = z[158] + z[38];
  m[178] = 0;
  m[179] = 0;
  m[180] = 0;
  m[181] = 0;
  m[182] = z[125]*(-z[91] + z[96]);
  m[183] = 0;
  m[184] = 0;
  m[185] = 0;
  m[186] = 0;
  m[187] = 0;
  m[188] = 0;
  m[189] = 0;
  m[190] = 0;
  m[191] = 0;
  m[192] = 1;
  m[193] = 0;
  m[194] = 0;
  m[195] = z[117]/z[13];
  m[196] = 0;
  m[197] = -z[120]/z[13];
  m[198] = 0;
  m[199] = 0;
  m[200] = 0;
  m[201] = 0;
  m[202] = 0;
  m[203] = 0;
  m[204] = 0;
  m[205] = 0;
  m[206] = 0;
  m[207] = 0;
  m[208] = 0;
  m[209] = 0;
  m[210] = 0;
  m[211] = z[125]*(rear_.Fy*z[101] - z[105]*z[91] + z[105]*z[96]);
  m[212] = z[101]*z[105]*(z[92] + z[95])/z[13];
  m[213] = 0;
  m[214] = 0;
  m[215] = 0;
  m[216] = 0;
  m[217] = 0;
  m[218] = 0;
  m[219] = 0;
  m[220] = 0;
  m[221] = 0;
  m[222] = 0;
  m[223] = 1;
  m[224] = 0;
  m[225] = z[109]*z[125];
  m[226] = z[13];
  m[227] = -z[111]*z[125];
  m[228] = 0;
  m[229] = 0;
  m[230] = 0;
  m[231] = 0;
  m[232] = 0;
  m[233] = 0;
  m[234] = 0;
  m[235] = 0;
  m[236] = 0;
  m[237] = 0;
  m[238] = 0;
  m[239] = 0;
  m[240] = 0;
  m[241] = -z[101]*z[91] + z[101]*z[96] + z[93];
  m[242] = -z[105]*(-z[92] - z[95]);
  m[243] = 0;
  m[244] = 0;
  m[245] = 0;
  m[246] = 0;
  m[247] = 0;
  m[248] = 0;
  m[249] = 0;
  m[250] = 0;
  m[251] = 0;
  m[252] = 0;
  m[253] = 0;
  m[254] = 1;
  m[255] = z[120];
  m[256] = z[0];
  m[257] = z[117];
  m[258] = 0;
  m[259] = 0;
  m[260] = 0;
  m[261] = 0;
  m[262] = 0;
  m[263] = 0;
  m[264] = 0;
  m[265] = 0;
  m[266] = 0;
  m[267] = 0;
  m[268] = 0;
  m[269] = rear_.m;
  m[270] = 0;
  m[271] = -z[116]*z[145]*z[160] + z[116]*z[171] - z[145]*z[67]/(z[126] + pow(z[22], 2)) + z[151]*z[168] + z[154]*z[75]*(-z[135]*z[159] - z[145]*z[2]*z[25]/(z[126] + pow(z[22], 2)) + z[42]) + z[169]*z[23] + z[77]*(-z[10]*z[110]*z[145]/(z[126] + pow(z[22], 2)) - z[134]*z[159] + z[35])/sqrt(z[126] + pow(z[22], 2));
  m[272] = -z[110]*z[154]*z[59] - z[112]*z[161] + z[116]*z[160]*z[39] - z[116]*(-z[106]*z[153]*z[41]*z[78] + z[110]*z[97] - z[112]*z[78] - z[157]*z[41]*z[79])/(z[126] + pow(z[22], 2)) - z[170]*z[39] + z[22]*(z[106]*z[110]*z[78] + z[112]*z[79] + z[133]*z[162] + z[153]*z[41]*z[97])/(z[126] + pow(z[22], 2)) + z[75]*(-z[112]*z[25] - z[114]*z[22] + z[116]*z[162]*z[25] + z[119]*z[157]*z[41])/sqrt(z[126] + pow(z[22], 2)) + z[77]*(z[10]*z[110]*z[162] - z[106]*z[22] - z[109]*z[116] + z[142]*z[162])/sqrt(z[126] + pow(z[22], 2));
  m[273] = -z[116]*z[160]*z[44] + z[116]*z[172] + z[119]*z[161] - z[157]*z[71] + z[163]*z[43]*z[90] + z[169]*z[25] + z[170]*z[44] - z[77]*(z[10]*z[110]*z[164] + z[142]*z[164] + z[37])/sqrt(z[126] + pow(z[22], 2));
  m[274] = 0;
  m[275] = 0;
  m[276] = 0;
  m[277] = 0;
  m[278] = 0;
  m[279] = 0;
  m[280] = 0;
  m[281] = 0;
  m[282] = 0;
  m[283] = 0;
  m[284] = 0;
  m[285] = 0;
  m[286] = 0;
  m[287] = 0;
  m[288] = 0;
  m[289] = 0;
  m[290] = 0;
  m[291] = 0;
  m[292] = 1;
  m[293] = 0;
  m[294] = 0;
  m[295] = -z[154]*z[43];
  m[296] = 0;
  m[297] = -z[36]/sqrt(z[126] + pow(z[22], 2));
  m[298] = 0;
  m[299] = 0;
  m[300] = 0;
  m[301] = z[116]*z[145]*z[168] + z[116]*z[23]*z[67]/(z[126] + pow(z[22], 2)) + z[145]*z[76]*(z[126]/(z[126] + pow(z[22], 2)) + z[159] - 2)/sqrt(z[126] + pow(z[22], 2)) + z[148]*(z[122]*z[135]*z[157] + z[143]*z[159] - z[143] + z[147]) + z[151]*z[160] - z[154]*z[77]*(z[101]*z[23] - z[105]*z[22] + z[112]*z[145]/(z[126] + pow(z[22], 2)) - z[141]*z[145]/(z[126] + pow(z[22], 2))) + z[161]*z[23] - z[171]*z[22];
  m[302] = -z[110]*z[154]*z[32]/sqrt(z[126] + pow(z[22], 2)) + z[112]*z[34]/(z[126] + pow(z[22], 2)) + z[116]*z[157]*z[161]*z[31] - z[116]*(-z[106]*z[110]*z[78] - z[112]*z[79] - z[133]*z[162] - z[153]*z[41]*z[97])/(z[126] + pow(z[22], 2)) + z[126]*z[31]*z[34]/pow(z[126] + pow(z[22], 2), 2) + z[148]*(-z[104]*z[107]*z[113] - z[106]*z[110]*z[25] + z[107]*z[111]*z[22] + z[107]*z[122]*z[162] - z[146]*z[162]) - z[157]*(-z[110]*z[97] + z[112]*z[78] - z[116]*z[162]*z[78] + z[157]*z[41]*z[79]) - z[76]*(z[102]*z[116]*z[22] - 2*z[113]*z[8] + z[126]*z[162] + z[159]*z[41])/sqrt(z[126] + pow(z[22], 2)) - z[77]*(-z[10]*z[101]*z[110] - z[109]*z[22] + z[111]*z[157]*z[41] - z[112]*z[154]*z[41]/sqrt(z[126] + pow(z[22], 2)) - z[122] + z[2]*z[7])/sqrt(z[126] + pow(z[22], 2));
  m[303] = -z[106]*z[152]*z[77]*(z[102]*z[25] - z[112]*z[167] + 2*z[114] + z[141]*z[167]) + z[116]*z[163]*z[59] - z[116]*z[71]/(z[126] + pow(z[22], 2)) - z[119]*z[169] + z[148]*(z[10]*z[121] - z[107]*z[122]*z[164] + z[126] + z[146]*z[164] + pow(z[22], 2) - pow(z[25], 2)) + z[152]*z[76]*(-2*z[104]*z[123] + z[126]*z[167] - 4*z[146] + z[159]*z[49]) + z[157]*z[161]*z[44] + z[161]*z[25] - z[172]*z[22];
  m[304] = 0;
  m[305] = 0;
  m[306] = 0;
  m[307] = 0;
  m[308] = 0;
  m[309] = 0;
  m[310] = 0;
  m[311] = 0;
  m[312] = 0;
  m[313] = 0;
  m[314] = 0;
  m[315] = 0;
  m[316] = 0;
  m[317] = 0;
  m[318] = 0;
  m[319] = 0;
  m[320] = 0;
  m[321] = 0;
  m[322] = 0;
  m[323] = 1;
  m[324] = 0;
  m[325] = -z[44]/sqrt(z[126] + pow(z[22], 2));
  m[326] = sqrt(z[10]*z[8] + pow(z[21], 2));
  m[327] = z[154]*z[31];
  m[328] = 0;
  m[329] = 0;
  m[330] = 0;
  m[331] = z[111]*z[77] + z[22]*z[76] + z[25]*z[75];
  m[332] = -z[105]*(-z[103]*z[77] + z[107]*z[90] - z[116]*z[76]);
  m[333] = z[20]*z[76] + z[23]*z[75];
  m[334] = 0;
  m[335] = 0;
  m[336] = 0;
  m[337] = 0;
  m[338] = 0;
  m[339] = 0;
  m[340] = 0;
  m[341] = 0;
  m[342] = 0;
  m[343] = 0;
  m[344] = 0;
  m[345] = 0;
  m[346] = 0;
  m[347] = 0;
  m[348] = 0;
  m[349] = 0;
  m[350] = 0;
  m[351] = 0;
  m[352] = 0;
  m[353] = 0;
  m[354] = 1;
  m[355] = z[20];
  m[356] = z[17];
  m[357] = z[117];
  m[358] = 0;
  m[359] = front_.m;

  delete [] z;
}

} // namespace bicycle
